Compiling Program: C:\DataFlex Projects\Centros\AppSrc\WebApp.src
<<<<<<< HEAD
Memory Available: 7318274048
=======
Memory Available: 8965603328
>>>>>>> main
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (C:\Program Files\DataFlex 25.0\Pkg\AllWebAppClasses.x64.pkd)
36303>Use cConnection.pkg
36303>Use cWebMenuItem.pkg
36303>Use cSQLExecutor.pkg
Including file: cSQLExecutor.pkg    (C:\Program Files\DataFlex 25.0\Pkg\cSQLExecutor.pkg)
36303>>>Use GlobalFunctionsProcedures.pkg
36303>>>Use cConnection.pkg
36303>>>
36303>>>// The cBaseSQLExecute class is defined in the runtime, we define it here for codesense and
36303>>>// reference but skip compiling it.
36303>>>
36303>>>
36303>>>Struct tSQLColumnInfo
36303>>>    String  sName
36303>>>    Integer iType 
36303>>>    Integer iSize
36303>>>    Integer iDigits
36303>>>    Boolean bNullable
36303>>>    String  sBaseColumnName
36303>>>    String  sBaseTableName
36303>>>    String  sLocalTypeName
36303>>>End_Struct
36303>>>
36303>>>Struct tSQLParamInfo
36303>>>    String sName
36303>>>    String sValue
36303>>>End_Struct
36303>>>
36303>>>Class cSQLExecutor is a cBaseSQLExecutor
36304>>>
36304>>>    Procedure Construct_Object
36306>>>        Forward Send Construct_Object
36308>>>
36308>>>        Property String Private_psConnectionId
36309>>>        Property String Private_psDriverId
36310>>>    End_Procedure
36311>>>
36311>>>    Procedure OnSQLError String SQLState String SQLMessage
36313>>>        Error DFERR_PROGRAM (SFormat("SQLExecutor error: %1 SQLState: %2", SQLMessage, SQLState ))
36314>>>>
36314>>>    End_Procedure
36315>>>    
36315>>>    Procedure OnSQLPreExecute String sSQLQuery
36317>>>    End_Procedure
36318>>>    
36318>>>    Procedure OnSQLPostExecute String sSQLQuery
36320>>>    End_Procedure  
36321>>>
36321>>>    Procedure Set psConnectionId String sConnectionId
36323>>>        Set Private_psConnectionId to sConnectionId
36324>>>        Set piDriverIndex to 0
36325>>>        Set piConnectionIndex to 0  
36326>>>        
36326>>>        Send UpdateConnectionDetails        
36327>>>    End_Procedure
36328>>>
36328>>>    Function psConnectionId Returns String
36330>>>        Function_Return (Private_psConnectionId(Self))
36331>>>    End_Function
36332>>>
36332>>>    Function psDriverId Returns String
36334>>>        Function_Return (Private_psDriverId(Self))
36335>>>    End_Function
36336>>>    
36336>>>    Procedure UpdateConnectionDetails
36338>>>        String  sConnectionId
36338>>>        Get Private_psConnectionId to sConnectionId            
36339>>>        If (sConnectionId <> '') Begin
36341>>>            Send ManagedConnectionDetails sConnectionId
36342>>>        End
36342>>>>
36342>>>        Else Begin
36343>>>            Error DFERR_PROGRAM (SFormat(C_$SQLExecutorNoConnectionId))
36344>>>>
36344>>>        End           
36344>>>>
36344>>>    End_Procedure
36345>>>
36345>>>    Procedure ManagedConnectionDetails String sConnectionId
36347>>>        tConnection ManagedConnection
36347>>>        tConnection ManagedConnection
36347>>>        String  sDriver
36347>>>        Integer iDriverIndex
36347>>>        Boolean bConnectionIsLoggedIn 
36347>>>        Boolean bSuccess
36347>>>        Integer iIndex
36347>>>        Integer iConnectionIndex
36347>>>        
36347>>>        If (ghoConnection) Begin            
36349>>>            Get ConnectionIdIndex of ghoConnection sConnectionId to iIndex
36350>>>            If (iIndex = -1) Begin
36352>>>                Error DFERR_PROGRAM (SFormat(C_$ConnectionIdNotFound,sConnectionId))
36353>>>>
36353>>>            End
36353>>>>
36353>>>            Else Begin
36354>>>                Get ConnectionIdInfo of ghoConnection sConnectionId to ManagedConnection
36355>>>                Move ManagedConnection.sDriver      to sDriver
36356>>>                Move ManagedConnection.iDriverIndex to iDriverIndex
36357>>>                Get IsConnectionIdLoggedIn of ghoConnection sConnectionId to bConnectionIsLoggedIn
36358>>>                If (not(bConnectionIsLoggedIn)) Begin
36360>>>                    Get LoginConnectionId of ghoConnection sConnectionId to bSuccess
36361>>>                    Get IsConnectionIdLoggedIn of ghoConnection sConnectionId to bConnectionIsLoggedIn
36362>>>                End
36362>>>>
36362>>>                If (bConnectionIsLoggedIn) Begin
36364>>>                    Get ConnectionDatabaseIdHandle of ghoConnection ManagedConnection to iConnectionIndex
36365>>>                    
36365>>>                    If (iConnectionIndex) Begin
36367>>>                        Set piConnectionIndex  to iConnectionIndex
36368>>>                        Set piDriverIndex      to iDriverIndex
36369>>>                        Set Private_psDriverId to sDriver
36370>>>                    End
36370>>>>
36370>>>                End
36370>>>>
36370>>>            End
36370>>>>
36370>>>        End
36370>>>>
36370>>>    End_Procedure
36371>>>End_Class
36372>
36372>Object oApplication is a cApplication
36374>    Object oConnection is a cConnection
36376>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (C:\Program Files\DataFlex 25.0\Pkg\LoginEncryption.pkg)
36376>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (C:\Program Files\DataFlex 25.0\Pkg\cLoginEncryption.pkg)
36376>>>>>Use cCryptographerEx.pkg
36376>>>>>
36376>>>>>Class cLoginEncryption is a cObject
36377>>>>>    
36377>>>>>    Procedure Construct_Object
36379>>>>>        Forward Send Construct_Object
36381>>>>>        // this must be set to a multi (40ish) character random key
36381>>>>>        Property String psEncryptPassword ""
36382>>>>>        
36382>>>>>        Object oDataCrypter is a cCryptographerEx
36384>>>>>            Set piHash to CALG_SHA_256
36385>>>>>            Set piCipher to CALG_AES_256
36386>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
36387>>>>>            Set piProvider to PROV_RSA_AES
36388>>>>>        End_Object
36389>>>>>    End_Procedure
36390>>>>>    
36390>>>>>    // This can be augmented to return a password encryption key using any
36390>>>>>    // hidden mechanism desired.
36390>>>>>    Function GetEncryptionPassword Returns String
36392>>>>>        String sPassword
36392>>>>>        Get psEncryptPassword to sPassword
36393>>>>>        Function_Return sPassword
36394>>>>>    End_Function
36395>>>>>    
36395>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
36395>>>>>    //
36395>>>>>    // Params:
36395>>>>>    //   sPlainText     String to encrypt.
36395>>>>>    // Returns:
36395>>>>>    //   Base64 encoded hash.
36395>>>>>    Function EncryptPassword String sPlainText Returns String
36397>>>>>        String sEncryptPassword sBase64
36397>>>>>        UChar[] ucBinary
36398>>>>>        Pointer pBase64
36398>>>>>        Integer iVoid
36398>>>>>        
36398>>>>>        //  Encrypt Key
36398>>>>>        Get GetEncryptionPassword to sEncryptPassword
36399>>>>>        If (sEncryptPassword = "") Begin
36401>>>>>            Error DFERR_PROGRAM "No encryption password set"
36402>>>>>>
36402>>>>>        End
36402>>>>>>
36402>>>>>        
36402>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
36403>>>>>        
36403>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
36405>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
36406>>>>>>
36406>>>>>            Function_Return ""
36407>>>>>        End
36407>>>>>>
36407>>>>>        
36407>>>>>        //  Encode binary hash to Base64
36407>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
36408>>>>>        Move (PointerToString(pBase64)) to sBase64
36409>>>>>        Move (Free(pBase64)) to iVoid
36410>>>>>        
36410>>>>>        Function_Return sBase64
36411>>>>>    End_Function
36412>>>>>    
36412>>>>>    
36412>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
36412>>>>>    //
36412>>>>>    // Params:
36412>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
36412>>>>>    // Returns:
36412>>>>>    //   Readable plain text password
36412>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
36414>>>>>        String sEncryptPassword
36414>>>>>        UChar[] ucBinary ucPlain
36416>>>>>        Boolean bIsHex
36416>>>>>        Integer iLen iVoid
36416>>>>>        Pointer pBinary
36416>>>>>        
36416>>>>>        If (sBase64EncryptedPassword <> "") Begin
36418>>>>>            //  Decode from Base64
36418>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
36419>>>>>            
36419>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
36420>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
36421>>>>>                        
36421>>>>>            Move (Free(pBinary)) to iVoid
36422>>>>>            
36422>>>>>            //  Encrypted binary hash to string
36422>>>>>            Get GetEncryptionPassword to sEncryptPassword
36423>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
36424>>>>>        End
36424>>>>>>
36424>>>>>        
36424>>>>>        Function_Return (UCharArrayToString(ucPlain))
36425>>>>>    End_Function
36426>>>>>End_Class
36427>>>
36427>>>Object oLoginEncryption is a cLoginEncryption
36429>>>
36429>>>    // this must be created in your appsrc directory and must contain an encryption
36429>>>    // key that is set to psEncryptPassword. It will look something like this
36429>>>    //
36429>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
36429>>>    //  
Including file: LoginEncryptionKey.inc    (C:\DataFlex Projects\Centros\AppSrc\LoginEncryptionKey.inc)
36429>>>>// Studio generated login encryption key
36429>>>>Set psEncryptPassword to "nX,`aCLjN<#ah&V#INur~oy)$^b,#I6q2>P:)4@*"
36430>>>>
36430>>>    
36430>>>    // use this to register this object to your cConnection Object. This object
36430>>>    // must be created after the cConnection object
36430>>>    Move Self to ghoLoginEncryption
36431>>>End_Object
36432>    End_Object
36433>End_Object
36434>
36434>
36434>
36434>
36434>Object oWebApp is a cWebApp
36436>    Set psTheme to "Df_Material"
36437>    Set peAlignView to alignCenter
36438>    Set peLoginMode to lmLoginNone
36439>    
36439>    // It is important to set this so that all views will default
36439>    // to drill down style views.
36439>    Set peApplicationStyle to wvsDrillDown   
36440>    Set peApplicationStateMode to asmHistoryAndUrls 
36441>    Set psEncryptPassword to "CA{z(/<Zy2q^w6Gp7Z7z.)Wr#>YCvgJA%}m0z:a,"
36442>
36442>    Object oSQLExecutor is a cSQLExecutor
36444>        Move Self to ghoSQLExecutor
36445>        Set psConnectionId to "Centros"
36446>    End_Object
36447>    
36447>    Object oViewStack is a cWebViewStack
36449>    End_Object
36450>    
36450>    Procedure HideHeader
36453>        WebSet pbRender of oHeaderPanel to False
36454>    End_Procedure
36455>
36455>    Procedure ShowHeader
36458>        WebSet pbRender of oHeaderPanel to True 
36459>    End_Procedure
36460>
36460>    Object oHeaderPanel is a cWebPanel
36462>        Set peRegion to prTop
36463>        Set psCSSClass to "HeaderPanel"
36464>        
36464>        Object oMenuPanel is a cWebPanel
36466>            Set peRegion to prLeft
36467>            Set piWidth to 50
36468>            
36468>            Object oMenuButton is a cWebMenuButton
36470>                Set piMenuHeight to 500
36471>
36471>                Object oDashboard_itm is a cWebMenuItem
36473>                    Set psCaption to C_$Dashboard
36474>                    
36474>                    WebRegisterPath ntNavigateBegin oDashboard
36480>
36480>                    Procedure OnClick
36483>                        Send NavigatePath
36484>                    End_Procedure
36485>                End_Object
36486>
36486>                Object oViewMenu is a cWebMenuItem
36488>                    Set psCaption to C_$View
36489>
36489>                    Object oDummieEmailItem1 is a cWebMenuItem
36491>                        Set psCaption to "DummieEmail"
36492>
36492>                        WebRegisterPath ntNavigateBegin oDummieEmail
36498>
36498>                        Procedure OnClick
36501>                            Forward Send OnClick
36503>                                Send NavigatePath
36504>                        End_Procedure
36505>                    End_Object
36506>
36506>                    Object oDummieDniItem1 is a cWebMenuItem
36508>                        Set psCaption to "DummieDni"
36509>
36509>                        WebRegisterPath ntNavigateBegin oDummieDni
36515>
36515>                        Procedure OnClick
36518>                            Forward Send OnClick
36520>                                Send NavigatePath
36521>                        End_Procedure
36522>                    End_Object
36523>
36523>                    Object oStudentsItem1 is a cWebMenuItem
36525>                        Set psCaption to "Students"
36526>
36526>                        WebRegisterPath ntNavigateBegin oSelectStudents
36532>
36532>                        Procedure OnClick
36535>                            Forward Send OnClick
36537>                                Send NavigatePath
36538>                        End_Procedure
36539>                    End_Object
36540>
36540>                    Object oCentroItem1 is a cWebMenuItem
36542>                        Set psCaption to "Centro"
36543>
36543>                        WebRegisterPath ntNavigateBegin oSelectCentro
36549>
36549>                        Procedure OnClick
36552>                            Forward Send OnClick
36554>                                Send NavigatePath
36555>                        End_Procedure
36556>                    End_Object
36557>                End_Object
36558>
36558>                Object oSignOut_itm is a cWebMenuItem
36560>                    Set psCaption to C_$LogOut
36561>
36561>                    Procedure OnClick
36564>                        Send RequestLogOut of ghoWebSessionManager
36565>                    End_Procedure
36566>                End_Object
36567>            End_Object  
36568>
36568>            Object oBackButton is a cWebButton
36570>                Set psCSSClass to "WebBack_Icon"
36571>                Set pbRender to False
36572>                
36572>                Procedure OnClick
36575>                    Handle hoTop
36575>                    
36575>                    Get TopViewHandle of oViewStack to hoTop
36576>                    If (hoTop > 0) Begin
36578>                        Send NavigateCancel of hoTop 
36579>                    End
36579>                End_Procedure
36580>            End_Object
36581>            
36581>            Send AddClient of oViewStack Self
36582>                
36582>            Procedure OnUpdateViewStack
36585>                Handle hoTop hoDflt
36585>                Integer eMode
36585>                Boolean bTop
36585>                
36585>                WebGet peMode of (Owner(Self)) to eMode
36586>                
36586>                Get TopViewHandle of oViewStack to hoTop
36587>                Get GetDefaultView to hoDflt
36588>                Move (hoTop=0 or hoTop=hoDflt) to bTop
36589>                
36589>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
36590>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
36591>            End_Procedure
36592>
36592>        End_Object
36593>
36593>        Object oCaptionPanel is a cWebPanel
36595>            Set piColumnCount to 12
36596>
36596>            Object oCaptionBreadcrumb is a cWebBreadcrumb
36598>                Set peBreadcrumbStyle to crumbCaption
36599>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
36600>            End_Object         
36601>        End_Object
36602>        
36602>        Object oActionPanel is a cWebPanel
36604>            Set peRegion to prRight
36605>            Set piColumnCount to 1
36606>            Set piWidth to 120
36607>
36607>            Object oMainActions is a cWebActionBar
36609>                Set psGroupName to "MainActions"
36610>
36610>                Set piColumnSpan to 0
36611>                Set peAlign to alignRight
36612>            End_Object
36613>        End_Object
36614>
36614>        Object oBreadcrumbPanel is a cWebPanel
36616>            Set peRegion to prBottom
36617>            
36617>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
36619>                WebSetResponsive pbRender rmMobile to False
36620>            End_Object         
36621>        End_Object
36622>
36622>    End_Object    
36623>
36623>    Use SessionManager.wo
Including file: SessionManager.wo    (C:\DataFlex Projects\Centros\AppSrc\SessionManager.wo)
36623>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Program Files\DataFlex 25.0\Pkg\cWebSessionManagerStandard.pkg)
36623>>>>>Use cWebSessionManager.pkg
36623>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Program Files\DataFlex 25.0\Pkg\cWebAppSessionDataDictionary.dd)
36623>>>>>>>Use DataDict.pkg
36623>>>>>>>
36623>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (C:\DataFlex Projects\Centros\DDSrc\WebAppSession.fd)
36625>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (C:\DataFlex Projects\Centros\DDSrc\WebAppUser.fd)
36627>>>>>>>
36627>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
36628>>>>>>>    Procedure Construct_Object
36630>>>>>>>        Forward Send Construct_Object
36632>>>>>>>
36632>>>>>>>        Set Main_File to WebAppSession.File_Number
36633>>>>>>>
36633>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
36634>>>>>>>
36634>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
36635>>>>>>>
36635>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36636>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36637>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36638>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36639>>>>>>>
36639>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
36640>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
36641>>>>>>>    End_Procedure
36642>>>>>>>
36642>>>>>>>    Procedure Creating
36644>>>>>>>        DateTime dtCurrentDateTime
36644>>>>>>>        
36644>>>>>>>        Forward Send Creating
36646>>>>>>>        
36646>>>>>>>        //  Init usecounter
36646>>>>>>>        Move 0 to WebAppSession.UseCount
36647>>>>>>>        
36647>>>>>>>        //  Set the creation and access time to the current time
36647>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
36648>>>>>>>    
36648>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
36649>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
36650>>>>>>>        
36650>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
36651>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
36652>>>>>>>    End_Procedure
36653>>>>>>>    
36653>>>>>>>    //
36653>>>>>>>    //  Converts the given time to an string that can be saved in the database.
36653>>>>>>>    //
36653>>>>>>>    //  Params:
36653>>>>>>>    //      dtTime  Time to convert
36653>>>>>>>    //  Returns:
36653>>>>>>>    //      String with "HH:MM:SS" format
36653>>>>>>>    //
36653>>>>>>>    Function TimeToString DateTime dtTime Returns String
36655>>>>>>>        String sHours sMinutes sSeconds
36655>>>>>>>        
36655>>>>>>>        //  Extract parts
36655>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
36656>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
36657>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
36658>>>>>>>        
36658>>>>>>>        //  Fill out with 0
36658>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
36661>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
36664>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
36667>>>>>>>        
36667>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
36668>>>>>>>    End_Function
36669>>>>>>>    
36669>>>>>>>    //
36669>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
36669>>>>>>>    //
36669>>>>>>>    //  Params:
36669>>>>>>>    //      dtTime  Datetime variable to add time to
36669>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
36669>>>>>>>    //  Returns:
36669>>>>>>>    //      dtDateTime with the loaded time
36669>>>>>>>    //
36669>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
36671>>>>>>>        String sHours sMinutes sSeconds
36671>>>>>>>        
36671>>>>>>>        //  Extract parts
36671>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
36672>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
36673>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
36674>>>>>>>        
36674>>>>>>>        //  Set to DateTime
36674>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
36675>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
36676>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
36677>>>>>>>        
36677>>>>>>>        Function_Return dtTime
36678>>>>>>>    End_Function
36679>>>>>>>End_Class
36680>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Program Files\DataFlex 25.0\Pkg\cWebAppUserDataDictionary.dd)
36680>>>>>>>Use DataDict.pkg
36680>>>>>>>Open WebAppUser
36682>>>>>>>Open WebAppSession
36684>>>>>>>
36684>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
36685>>>>>>>    
36685>>>>>>>    Procedure Construct_Object
36687>>>>>>>        Forward Send Construct_Object
36689>>>>>>>        Set Main_File to WebAppUser.File_Number
36690>>>>>>>
36690>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
36691>>>>>>>
36691>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
36692>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
36693>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
36694>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
36695>>>>>>>    End_Procedure
36696>>>>>>>
36696>>>>>>>End_Class
36697>>>>>
36697>>>>>Use cPasswordHasher.pkg
Including file: cPasswordHasher.pkg    (C:\Program Files\DataFlex 25.0\Pkg\cPasswordHasher.pkg)
36697>>>>>>>Use GlobalFunctionsProcedures.pkg
36697>>>>>>>
36697>>>>>>>Define CNG_BCRYPT_HASH_LENGTH           for "HashDigestLength"
36697>>>>>>>
36697>>>>>>>External_Function CNG_BCryptGenRandom "BCryptGenRandom" Bcrypt.dll ;    Handle   hAlgorithm ;    Pointer  pbBuffer ;    UInteger cbBuffer ;    UInteger dwFlags ;    Returns Integer
36698>>>>>>>
36698>>>>>>>External_Function CNG_BCryptOpenAlgorithmProvider "BCryptOpenAlgorithmProvider" Bcrypt.dll ;    Pointer  phAlgorithm ;    Pointer  pszAlgId ;    Pointer  pszImplementation ;    UInteger dwFlags ;    Returns Integer
36699>>>>>>>
36699>>>>>>>External_Function CNG_BCryptCloseAlgorithmProvider "BCryptCloseAlgorithmProvider" Bcrypt.dll ;    Handle   hAlgorithm ;    UInteger dwFlags ;    Returns Integer
36700>>>>>>>
36700>>>>>>>External_Function CNG_BCryptDeriveKeyPBKDF2 "BCryptDeriveKeyPBKDF2" Bcrypt.dll ;    Handle   hPrf ;    Pointer  pbPassword ;    UInteger cbPassword ;    Pointer  pbSalt ;    UInteger cbSalt ;    BigInt   cIterations ;    Pointer  pbDerivedKey ;    UInteger cbDerivedKey ;    UInteger dwFlags ;    Returns Integer
36701>>>>>>>
36701>>>>>>>External_Function CNG_BCryptGetProperty "BCryptGetProperty" Bcrypt.dll ;    Handle   hObject ;    Pointer  pszProperty ;    Pointer  pbOutput ;    UInteger cbOutput ;    Pointer  pcbResult ;    UInteger dwFlags ;    Returns Integer
36702>>>>>>>
36702>>>>>>>Class cPasswordHasher_CNG_PBKDF2_HMAC_Mixin is a Mixin
36703>>>>>>>
36703>>>>>>>    Function CNG_PBKDF2_HMAC_BufferSizeEx Handle hoProv Returns UInteger
36705>>>>>>>        Integer iErr
36705>>>>>>>        UInteger uiHashLen
36705>>>>>>>        
36705>>>>>>>        UInteger uiCbOut
36705>>>>>>>        WString wsHashLengthProperty
36705>>>>>>>        Move CNG_BCRYPT_HASH_LENGTH to wsHashLengthProperty
36706>>>>>>>        Move (CNG_BCryptGetProperty(hoProv, AddressOf(wsHashLengthProperty), AddressOf(uiHashLen), 4, AddressOf(uiCbOut), 0)) to iErr
36707>>>>>>>        If (iErr) Begin
36709>>>>>>>            Function_Return 0
36710>>>>>>>        End
36710>>>>>>>>
36710>>>>>>>        
36710>>>>>>>        Function_Return uiHashLen
36711>>>>>>>    End_Function
36712>>>>>>>    
36712>>>>>>>    Function CNG_PBKDF2_HMAC_BufferSize WString wsAlgo Returns UInteger
36714>>>>>>>        Integer iErr
36714>>>>>>>        UInteger uiHashLen
36714>>>>>>>        
36714>>>>>>>        // Open the algorithm.
36714>>>>>>>        Handle hoProv
36714>>>>>>>        Move (CNG_BCryptOpenAlgorithmProvider(AddressOf(hoProv), AddressOf(wsAlgo), 0, |CI$00000008 /*BCRYPT_ALG_HANDLE_HMAC_FLAG*/)) to iErr
36715>>>>>>>        If (iErr) Begin
36717>>>>>>>            Function_Return 0
36718>>>>>>>        End
36718>>>>>>>>
36718>>>>>>>        
36718>>>>>>>        Get CNG_PBKDF2_HMAC_BufferSizeEx hoProv to uiHashLen
36719>>>>>>>        
36719>>>>>>>        Move (CNG_BCryptCloseAlgorithmProvider(hoProv, 0)) to iErr
36720>>>>>>>        
36720>>>>>>>        Function_Return uiHashLen
36721>>>>>>>    End_Function
36722>>>>>>>    
36722>>>>>>>    Function CNG_PBKDF2_HMAC    WString wsAlgo ;                                UChar[] ucaData ;                                UChar[] ucaSalt ;                                UInteger uiTimeCost ;                                UChar[] ByRef ucaHashOut ;                                Boolean bOptThrow ;                                Returns Boolean
36724>>>>>>>        Integer iErr iHashLen
36724>>>>>>>        
36724>>>>>>>        // Handle Optionals
36724>>>>>>>        // First the optional throwing of errors.
36724>>>>>>>        Boolean bThrow
36724>>>>>>>        Move True to bThrow
36725>>>>>>>        If (num_arguments > 4) Move bOptThrow to bThrow
36728>>>>>>>        
36728>>>>>>>        // Open the algorithm.
36728>>>>>>>        Handle hoProv
36728>>>>>>>        Move (CNG_BCryptOpenAlgorithmProvider(AddressOf(hoProv), AddressOf(wsAlgo), 0, |CI$00000008 /*BCRYPT_ALG_HANDLE_HMAC_FLAG*/)) to iErr
36729>>>>>>>        If (iErr) Begin
36731>>>>>>>            If (bThrow) Error 8710 "Failed to open up the algo provider."
36734>>>>>>>            Function_Return False
36735>>>>>>>        End
36735>>>>>>>>
36735>>>>>>>        
36735>>>>>>>        Get CNG_PBKDF2_HMAC_BufferSizeEx hoProv to iHashLen
36736>>>>>>>        If (not(iHashLen)) Begin
36738>>>>>>>            If (bThrow) Error 8710 "Failed to get expected length of hash."
36741>>>>>>>            Function_Return False
36742>>>>>>>        End
36742>>>>>>>>
36742>>>>>>>        
36742>>>>>>>        // Resize buffers to the expected output.
36742>>>>>>>        Move (ResizeArray(ucaHashOut, iHashLen)) to ucaHashOut
36743>>>>>>>        
36743>>>>>>>        Move (CNG_BCryptDeriveKeyPBKDF2(hoProv, AddressOf(ucaData), SizeOfArray(ucaData), AddressOf(ucaSalt), SizeOfArray(ucaSalt), uiTimeCost, AddressOf(ucaHashOut), SizeOfArray(ucaHashOut), 0)) to iErr
36744>>>>>>>        If (iErr) Begin
36746>>>>>>>            Move (CNG_BCryptCloseAlgorithmProvider(hoProv, 0)) to iErr
36747>>>>>>>            If (bThrow) Error 8710 "Failed to create hash."
36750>>>>>>>            Function_Return False
36751>>>>>>>        End
36751>>>>>>>>
36751>>>>>>>        
36751>>>>>>>        Move (CNG_BCryptCloseAlgorithmProvider(hoProv, 0)) to iErr
36752>>>>>>>        If (iErr) Begin
36754>>>>>>>            If (bThrow) Error 8710 "Failed to close algo provider."
36757>>>>>>>            Function_Return False
36758>>>>>>>        End
36758>>>>>>>>
36758>>>>>>>        
36758>>>>>>>        Function_Return True
36759>>>>>>>    End_Function
36760>>>>>>>End_Class
36761>>>>>>>
36761>>>>>>>Class cPasswordHasher_Mixin is a Mixin
36762>>>>>>>    
36762>>>>>>>    Import_Class_Protocol cPasswordHasher_CNG_PBKDF2_HMAC_Mixin
36763>>>>>>>    
36763>>>>>>>    Enum_List // Algorithmes available for password hashing
36763>>>>>>>        Define C_PWH_PBKDF2_HMAC_SHA_256        for 0 // Requires TimeCost
36763>>>>>>>        Define C_PWH_PBKDF2_HMAC_SHA_512              // Requires TimeCost
36763>>>>>>>    End_Enum_List
36763>>>>>>>    
36763>>>>>>>    Function RandomBuffer UInteger uiSize Returns UChar[]
36765>>>>>>>        UChar[] ucaBuffer
36766>>>>>>>        Move (ResizeArray(ucaBuffer, uiSize)) to ucaBuffer
36767>>>>>>>        If (CNG_BCryptGenRandom(0, AddressOf(ucaBuffer), uiSize, |CI$00000002 /*BCRYPT_USE_SYSTEM_PREFERRED_RNG*/)) Begin
36769>>>>>>>            Error 8710 "Failed to create random buffer."
36770>>>>>>>>
36770>>>>>>>        End
36770>>>>>>>>
36770>>>>>>>        Function_Return ucaBuffer
36771>>>>>>>    End_Function
36772>>>>>>>    
36772>>>>>>>    Function Base64EncodeArr UChar[] ucaBuffer Returns String
36774>>>>>>>        Integer iErr
36774>>>>>>>        Pointer pBase64
36774>>>>>>>        String sBase64
36774>>>>>>>        Move (Base64Encode(AddressOf(ucaBuffer), SizeOfArray(ucaBuffer))) to pBase64
36775>>>>>>>        If (not(pBase64)) Begin
36777>>>>>>>            Function_Return sBase64
36778>>>>>>>        End
36778>>>>>>>>
36778>>>>>>>        Move (PointerToString(pBase64)) to sBase64
36779>>>>>>>        Move (Free(pBase64)) to iErr
36780>>>>>>>        Function_Return sBase64
36781>>>>>>>    End_Function
36782>>>>>>>    
36782>>>>>>>    Function Base64DecodeArr String sBase64 Returns UChar[]
36784>>>>>>>        Integer iLen
36784>>>>>>>        Pointer pBase64
36784>>>>>>>        UChar[] ucaBuffer
36785>>>>>>>        Move (Base64Decode(AddressOf(sBase64), &iLen)) to pBase64
36786>>>>>>>        If (not(pBase64)) Begin
36788>>>>>>>            Function_Return ucaBuffer
36789>>>>>>>        End
36789>>>>>>>>
36789>>>>>>>        
36789>>>>>>>        Move (ResizeArray(ucaBuffer, iLen)) to ucaBuffer
36790>>>>>>>        Move (MemCopy(AddressOf(ucaBuffer), pBase64, iLen)) to iLen
36791>>>>>>>        Move (Free(pBase64)) to iLen
36792>>>>>>>        Function_Return ucaBuffer
36793>>>>>>>    End_Function
36794>>>>>>>    
36794>>>>>>>    Function CreatePasswordHashExWithSalt UInteger uiAlgo UChar[] ucaSalt String sPassword String ByRef sHash UInteger uiOptTimeCost Returns Boolean
36796>>>>>>>        Boolean bOk bRequireTimeCost
36796>>>>>>>        UChar[] ucaHash
36797>>>>>>>        
36797>>>>>>>        Case Begin
36797>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_256)
36799>>>>>>>                Get CNG_PBKDF2_HMAC "SHA256" (StringToUCharArray(sPassword)) ucaSalt uiOptTimeCost (&ucaHash) False to bOk
36800>>>>>>>                If (not(bOk)) Function_Return False
36803>>>>>>>                
36803>>>>>>>                Move True to bRequireTimeCost
36804>>>>>>>                Case Break
36805>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_512)
36808>>>>>>>                Get CNG_PBKDF2_HMAC "SHA512" (StringToUCharArray(sPassword)) ucaSalt uiOptTimeCost (&ucaHash) False to bOk
36809>>>>>>>                If (not(bOk)) Function_Return False
36812>>>>>>>                
36812>>>>>>>                Move True to bRequireTimeCost
36813>>>>>>>                Case Break
36814>>>>>>>            Case Else
36814>>>>>>>                Error 8710 "Invalid algorithm selected."
36815>>>>>>>>
36815>>>>>>>                Function_Return False
36816>>>>>>>        Case End
36816>>>>>>>        
36816>>>>>>>        String sSalt
36816>>>>>>>        Get Base64EncodeArr ucaSalt to sSalt
36817>>>>>>>        If (not(SizeOfString(sSalt))) Function_Return False
36820>>>>>>>        Get Base64EncodeArr ucaHash to sHash
36821>>>>>>>        If (not(SizeOfString(sHash))) Function_Return False
36824>>>>>>>        
36824>>>>>>>        If (bRequireTimeCost) Begin
36826>>>>>>>            Move (SFormat("%1$%2$%3$%4",            ;                            String(uiAlgo),         ;                            sSalt,                  ;                            String(uiOptTimeCost),  ;                            sHash)) to sHash
36827>>>>>>>        End
36827>>>>>>>>
36827>>>>>>>        Else Begin
36828>>>>>>>            Move (SFormat("%1$%2$%3",               ;                            String(uiAlgo),         ;                            sSalt,                  ;                            sHash)) to sHash
36829>>>>>>>        End
36829>>>>>>>>
36829>>>>>>>        
36829>>>>>>>        Function_Return bOk
36830>>>>>>>    End_Function
36831>>>>>>>    
36831>>>>>>>    Function CreatePasswordHashEx UInteger uiAlgo UInteger uiSaltSize String sPassword String ByRef sHash UInteger uiOptTimeCost Returns Boolean
36833>>>>>>>        UChar[] ucaSalt
36834>>>>>>>        Get RandomBuffer uiSaltSize to ucaSalt
36835>>>>>>>        If (not(SizeOfArray(ucaSalt))) Function_Return False
36838>>>>>>>        
36838>>>>>>>        If (num_arguments > 4) Begin
36840>>>>>>>            Function_Return (CreatePasswordHashExWithSalt(Self, uiAlgo, ucaSalt, sPassword, &sHash, uiOptTimeCost))
36841>>>>>>>        End
36841>>>>>>>>
36841>>>>>>>        Function_Return (CreatePasswordHashExWithSalt(Self, uiAlgo, ucaSalt, sPassword, &sHash))
36842>>>>>>>    End_Function
36843>>>>>>>    
36843>>>>>>>    Function VerifyPasswordHash String sPassword String sHash Returns Boolean
36845>>>>>>>        Boolean bRequiresTimeCost
36845>>>>>>>        UInteger uiAlgo uiTimeCost
36845>>>>>>>        Integer iBegin iEnd
36845>>>>>>>        String sSalt
36845>>>>>>>        
36845>>>>>>>        Move 1 to iBegin
36846>>>>>>>        
36846>>>>>>>        // Parse Algo
36846>>>>>>>        Move (Pos("$", sHash, iBegin)) to iEnd
36847>>>>>>>        If (not(iEnd)) Function_Return False
36850>>>>>>>        Move (Mid(sHash, iEnd - iBegin, iBegin)) to uiAlgo
36851>>>>>>>        
36851>>>>>>>        // Parse Salt
36851>>>>>>>        Move (iEnd + 1) to iBegin
36852>>>>>>>        Move (Pos("$", sHash, iBegin)) to iEnd
36853>>>>>>>        If (not(iEnd)) Function_Return False
36856>>>>>>>        Move (Mid(sHash, iEnd - iBegin, iBegin)) to sSalt
36857>>>>>>>        
36857>>>>>>>        Case Begin
36857>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_256)
36859>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_512)
36862>>>>>>>                Move True to bRequiresTimeCost
36863>>>>>>>                Case Break
36864>>>>>>>            Case Else
36864>>>>>>>                Error 8710 "Invalid algorithm selected."
36865>>>>>>>>
36865>>>>>>>                Function_Return False
36866>>>>>>>        Case End
36866>>>>>>>        
36866>>>>>>>        // Parse optional timecost
36866>>>>>>>        If (bRequiresTimeCost) Begin
36868>>>>>>>            Move (iEnd + 1) to iBegin
36869>>>>>>>            Move (Pos("$", sHash, iBegin)) to iEnd
36870>>>>>>>            If (not(iEnd)) Function_Return False
36873>>>>>>>            Move (Mid(sHash, iEnd - iBegin, iBegin)) to uiTimeCost
36874>>>>>>>        End
36874>>>>>>>>
36874>>>>>>>        
36874>>>>>>>        // Parse rest hash
36874>>>>>>>        Move (iEnd + 1) to iBegin
36875>>>>>>>        Move (Pos("$", sHash, iBegin)) to iEnd
36876>>>>>>>        If (iEnd) Function_Return False // inverse check if there are any other errors.
36879>>>>>>>        
36879>>>>>>>        // Base64Decode
36879>>>>>>>        UChar[] ucaSalt
36880>>>>>>>        Get Base64DecodeArr sSalt to ucaSalt
36881>>>>>>>        If (not(SizeOfArray(ucaSalt))) Function_Return False
36884>>>>>>>        
36884>>>>>>>        // Create new hash
36884>>>>>>>        String sNewHash
36884>>>>>>>        If (bRequiresTimeCost) Begin
36886>>>>>>>            If (not(CreatePasswordHashExWithSalt(Self, uiAlgo, ucaSalt, sPassword, &sNewHash, uiTimeCost))) Begin
36888>>>>>>>                Function_Return False 
36889>>>>>>>            End
36889>>>>>>>>
36889>>>>>>>        End
36889>>>>>>>>
36889>>>>>>>        Else Begin
36890>>>>>>>            If (not(CreatePasswordHashExWithSalt(Self, uiAlgo, ucaSalt, sPassword, &sNewHash))) Begin
36892>>>>>>>                Function_Return False 
36893>>>>>>>            End
36893>>>>>>>>
36893>>>>>>>        End
36893>>>>>>>>
36893>>>>>>>        Function_Return (sNewHash = sHash)
36894>>>>>>>    End_Function
36895>>>>>>>    
36895>>>>>>>    Function RequiredBufferSizeEx UInteger uiAlgo UInteger uiSaltSize UInteger uiOptTimeCost Returns UBigInt
36897>>>>>>>        Boolean bRequireTimeCost
36897>>>>>>>        UBigInt ullSize
36897>>>>>>>        UChar[] ucaSalt
36898>>>>>>>        String sSalt
36898>>>>>>>        
36898>>>>>>>        Get RandomBuffer uiSaltSize to ucaSalt
36899>>>>>>>        Get Base64EncodeArr ucaSalt to sSalt
36900>>>>>>>        If (not(SizeOfString(sSalt))) Function_Return 0
36903>>>>>>>        
36903>>>>>>>        Case Begin
36903>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_256)
36905>>>>>>>                Get CNG_PBKDF2_HMAC_BufferSize "SHA256" to ullSize
36906>>>>>>>                Move True to bRequireTimeCost
36907>>>>>>>                Case Break
36908>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_512)
36911>>>>>>>                Get CNG_PBKDF2_HMAC_BufferSize "SHA512" to ullSize
36912>>>>>>>                Move True to bRequireTimeCost
36913>>>>>>>                Case Break
36914>>>>>>>            Case Else
36914>>>>>>>                Error 8710 "Invalid algorithm selected."
36915>>>>>>>>
36915>>>>>>>                Function_Return 0
36916>>>>>>>        Case End
36916>>>>>>>        
36916>>>>>>>        // calculate base64 in a non-floating-manner
36916>>>>>>>        Move (((ullSize + 3 -1) / 3) * 4) to ullSize
36917>>>>>>>        
36917>>>>>>>        Move (ullSize + SizeOfString(String(uiAlgo))) to ullSize
36918>>>>>>>        Move (ullSize + SizeOfString(sSalt)) to ullSize
36919>>>>>>>        If (bRequireTimeCost) Begin
36921>>>>>>>            Move (ullSize + SizeOfString(String(uiOptTimeCost))) to ullSize
36922>>>>>>>            Move (ullSize + 3 /*$*/) to ullSize
36923>>>>>>>        End
36923>>>>>>>>
36923>>>>>>>        Else Begin
36924>>>>>>>            Move (ullSize + 2 /*$*/) to ullSize
36925>>>>>>>        End
36925>>>>>>>>
36925>>>>>>>        
36925>>>>>>>        Function_Return ullSize
36926>>>>>>>    End_Function
36927>>>>>>>End_Class
36928>>>>>>>
36928>>>>>>>Class cPasswordHasher is a cObject
36929>>>>>>>    
36929>>>>>>>    Import_Class_Protocol cPasswordHasher_Mixin
36930>>>>>>>    
36930>>>>>>>    Procedure Construct_Object
36932>>>>>>>        Forward Send Construct_Object
36934>>>>>>>        
36934>>>>>>>        Property UInteger   peAlgorithm         C_PWH_PBKDF2_HMAC_SHA_512 
36935>>>>>>>        Property UInteger   puiSaltSize         16
36936>>>>>>>        
36936>>>>>>>        Property UInteger   puiOptTimeCost      420000
36937>>>>>>>    End_Procedure
36938>>>>>>>    
36938>>>>>>>    Function CreatePasswordHash String sPassword String ByRef sHash Returns Boolean
36940>>>>>>>        Boolean bOk
36940>>>>>>>        UInteger uiAlgo
36940>>>>>>>        Get peAlgorithm to uiAlgo
36941>>>>>>>        
36941>>>>>>>        Case Begin
36941>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_256)
36943>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_512)
36946>>>>>>>                Get CreatePasswordHashEx uiAlgo (puiSaltSize(Self)) sPassword (&sHash) (puiOptTimeCost(Self)) to bOk
36947>>>>>>>                Case Break
36948>>>>>>>            Case Else
36948>>>>>>>                Error 8710 "Invalid algorithm selected."
36949>>>>>>>>
36949>>>>>>>                Function_Return False
36950>>>>>>>        Case End
36950>>>>>>>        
36950>>>>>>>        Function_Return bOk
36951>>>>>>>    End_Function
36952>>>>>>>    
36952>>>>>>>    Function RequiredBufferSize Returns UBigInt
36954>>>>>>>        UBigInt ullSize
36954>>>>>>>        UInteger uiAlgo
36954>>>>>>>        Get peAlgorithm to uiAlgo
36955>>>>>>>        
36955>>>>>>>        Case Begin
36955>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_256)
36957>>>>>>>            Case (uiAlgo = C_PWH_PBKDF2_HMAC_SHA_512)
36960>>>>>>>                Get RequiredBufferSizeEx uiAlgo (puiSaltSize(Self)) (puiOptTimeCost(Self)) to ullSize
36961>>>>>>>                Case Break
36962>>>>>>>            Case Else
36962>>>>>>>                Error 8710 "Invalid algorithm selected."
36963>>>>>>>>
36963>>>>>>>                Function_Return 0
36964>>>>>>>        Case End
36964>>>>>>>        
36964>>>>>>>        Function_Return ullSize
36965>>>>>>>    End_Function
36966>>>>>>>
36966>>>>>>>End_Class
36967>>>>>
36967>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
36968>>>>>    
36968>>>>>    Procedure Construct_Object
36970>>>>>        Handle hoObj
36970>>>>>        
36970>>>>>        Forward Send Construct_Object
36972>>>>>        
36972>>>>>        Set pbSessionCookieHttpOnly to True
36973>>>>>        
36973>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
36974>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO  
36975>>>>>        Property Handle phoCrypto 0      // Handle to the PasswordHasher
36976>>>>>        
36976>>>>>        Get CreateNamed (RefClass(cWebAppUserDataDictionary)) 'oUserDD' to hoObj
36977>>>>>        Set phoUserDD to hoObj
36978>>>>>        
36978>>>>>        Get CreateNamed (RefClass(cWebAppSessionDataDictionary)) 'oSessionDD' to hoObj
36979>>>>>        Set DDO_Server of hoObj to (phoUserDD(Self))
36980>>>>>        Set phoSessionDD to hoObj
36981>>>>>        
36981>>>>>        Property Handle phoCrypto 0   // Handle to the Cryptographer
36982>>>>>        Get CreateNamed (RefClass(cPasswordHasher)) 'oCrypto' to hoObj
36983>>>>>        Set phoCrypto to hoObj
36984>>>>>        
36984>>>>>        Property Boolean pbPasswordHashing True
36985>>>>>        
36985>>>>>        Property Boolean pbCreatingNewSession False
36986>>>>>        Property String psLoginName
36987>>>>>        Property String psUserName ""
36988>>>>>        Property Integer piUserRights 0
36989>>>>>    End_Procedure
36990>>>>>    
36990>>>>>    Procedure End_Construct_Object
36992>>>>>        Forward Send End_Construct_Object
36994>>>>>        
36994>>>>>        Handle hoCrypto
36994>>>>>        Integer iFieldLen
36994>>>>>        If (pbPasswordHashing(Self)) Begin
36996>>>>>            Get phoCrypto to hoCrypto
36997>>>>>            Get_Attribute DF_FIELD_LENGTH of (RefTable(WebAppUser)) (RefTable(WebAppUser.Password)) to iFieldLen
37000>>>>>            If (iFieldLen < (RequiredBufferSize(hoCrypto) + 3)) Begin
37002>>>>>                Error DFERR_PROGRAM "The password field of WebAppUser is not large enough (128)"
37003>>>>>>
37003>>>>>            End
37003>>>>>>
37003>>>>>        End
37003>>>>>>
37003>>>>>    End_Procedure
37004>>>>>    
37004>>>>>    Function CreateSession String sRemoteAddress Returns String
37006>>>>>        String sSessionKey
37006>>>>>        Integer iErr
37006>>>>>        Boolean bLogWebSession
37006>>>>>        Handle hoSessionDD       
37006>>>>>        Get phoSessionDD to hoSessionDD
37007>>>>>        
37007>>>>>        //  Get session key
37007>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
37009>>>>>        
37009>>>>>        Get pbLogWebSession to bLogWebSession
37010>>>>>        If not bLogWebSession Begin
37012>>>>>            Function_Return sSessionKey        
37013>>>>>        End
37013>>>>>>
37013>>>>>
37013>>>>>        //  Store session
37013>>>>>        Send Clear of hoSessionDD
37014>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
37015>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
37016>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
37017>>>>>        Get Request_Validate of hoSessionDD to iErr
37018>>>>>        If (iErr) Begin
37020>>>>>            // this should not happen. If it does its a programming error
37020>>>>>            Error DFERR_PROGRAM C_$WebAppSessionValidateFailed
37021>>>>>>
37021>>>>>            Function_Return ""
37022>>>>>        End
37022>>>>>>
37022>>>>>        Send Request_Save of hoSessionDD
37023>>>>>        If (Err) Begin
37025>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
37025>>>>>            Error DFERR_PROGRAM C_$WebAppSessionSaveFailed
37026>>>>>>
37026>>>>>            Function_Return ""
37027>>>>>        End
37027>>>>>>
37027>>>>>       
37027>>>>>        Function_Return sSessionKey        
37028>>>>>    End_Function
37029>>>>>    
37029>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
37031>>>>>        DateTime dtLastAccess dtCurrent
37031>>>>>        TimeSpan tsDiff
37031>>>>>        Integer iErr iSessionTimeout iSpanMinutes
37031>>>>>        Boolean bResult bCreatingNewSession
37031>>>>>        Boolean bLogWebSession bLoadWebApp
37031>>>>>        Integer eLoginMode
37031>>>>>        String sTime
37031>>>>>        Handle hoSessionDD hoUserDD       
37031>>>>>        
37031>>>>>        Move False to bLoadWebApp
37032>>>>>        If (num_arguments >= 2) Begin
37034>>>>>            Move bOptLoadWebApp to bLoadWebApp
37035>>>>>        End
37035>>>>>>
37035>>>>>        
37035>>>>>        Get phoSessionDD to hoSessionDD
37036>>>>>        Get phoUserDD to hoUserDD
37037>>>>>        
37037>>>>>        Get pbLogWebSession to bLogWebSession
37038>>>>>        Get peLoginMode to eLoginMode
37039>>>>>        
37039>>>>>        // for this object, you can only disable logging if login completely is disabled
37039>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
37041>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
37042>>>>>>
37042>>>>>            Function_Return False
37043>>>>>        End
37043>>>>>>
37043>>>>>
37043>>>>>        //  Clear session properties
37043>>>>>        Set psSessionKey to ""
37044>>>>>        Send UpdateSessionProperties True
37045>>>>>        
37045>>>>>        If not bLogWebSession Begin
37047>>>>>            Forward Get ValidateSession sSessionKey to bResult
37049>>>>>            Function_Return bResult
37050>>>>>        End        
37050>>>>>>
37050>>>>>        
37050>>>>>        Move False to bResult
37051>>>>>        Get piSessionTimeout to iSessionTimeout 
37052>>>>>        
37052>>>>>        //  Check if session exists
37052>>>>>        Send Clear of hoSessionDD
37053>>>>>        Move sSessionKey to WebAppSession.SessionKey
37054>>>>>        Send Find of hoSessionDD EQ Index.1
37055>>>>>            
37055>>>>>        If (Found) Begin
37057>>>>>            //  Calculate timespan between now and last access time
37057>>>>>            Move (CurrentDateTime()) to dtCurrent
37058>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
37059>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
37060>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
37061>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
37062>>>>>            
37062>>>>>            //  Check if session didn't time out
37062>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
37064>>>>>                Forward Get ValidateSession sSessionKey to bResult
37066>>>>>                   
37066>>>>>                If (bResult) Begin
37068>>>>>                    //  Update session record
37068>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
37069>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
37070>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
37071>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
37072>>>>>                    Get Request_Validate of hoSessionDD to iErr
37073>>>>>                    If (iErr) Begin
37075>>>>>                        // this should not happen. If it does its a programming error
37075>>>>>                        Error DFERR_PROGRAM C_$WebAppSessionValidateFailed
37076>>>>>>
37076>>>>>                        Function_Return False
37077>>>>>                    End
37077>>>>>>
37077>>>>>                    Send Request_Save of hoSessionDD
37078>>>>>                    
37078>>>>>                    //  Update user properties
37078>>>>>                    Send UpdateSessionProperties False
37079>>>>>                End
37079>>>>>>
37079>>>>>            End
37079>>>>>>
37079>>>>>            Else Begin
37080>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
37080>>>>>                Get pbCreatingNewSession to bCreatingNewSession
37081>>>>>                
37081>>>>>                If (not(bCreatingNewSession)) Begin
37083>>>>>                    If (not(bLoadWebApp)) Begin
37085>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
37086>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
37087>>>>>>
37087>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
37088>>>>>                    End
37088>>>>>>
37088>>>>>                    Else Begin
37089>>>>>                        Set pbCreatingNewSession to True                    
37090>>>>>                        Get RecreateSession of ghoWebApp to bResult 
37091>>>>>                        Set pbCreatingNewSession to False                        
37092>>>>>                    End
37092>>>>>>
37092>>>>>                End
37092>>>>>>
37092>>>>>            End
37092>>>>>>
37092>>>>>        End
37092>>>>>>
37092>>>>>        Else Begin
37093>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
37094>>>>>>
37094>>>>>        End
37094>>>>>>
37094>>>>>        
37094>>>>>        Function_Return bResult
37095>>>>>    End_Function
37096>>>>>    
37096>>>>>    Function CreatePasswordHash String sPassword String ByRef sHash Returns Boolean
37098>>>>>        If (not(pbPasswordHashing(Self))) Begin
37100>>>>>            Move sPassword to sHash
37101>>>>>            Function_Return True
37102>>>>>        End
37102>>>>>>
37102>>>>>        
37102>>>>>        If (not(CreatePasswordHash(phoCrypto(Self), sPassword, &sHash))) Begin
37104>>>>>            Function_Return False
37105>>>>>        End
37105>>>>>>
37105>>>>>        Move ("V1$" + sHash) to sHash
37106>>>>>        Function_Return True
37107>>>>>    End_Function
37108>>>>>    
37108>>>>>    Function VerifyPasswordHash String sUserPassword String sEnteredPassword Boolean ByRef bShouldUpgrade Returns Boolean
37110>>>>>        If (not(pbPasswordHashing(Self))) Begin
37112>>>>>            Move False to bShouldUpgrade
37113>>>>>            Function_Return (sUserPassword = sEnteredPassword)
37114>>>>>        End
37114>>>>>>
37114>>>>>        
37114>>>>>        String sVersion
37114>>>>>        Move (Left(sUserPassword, 3)) to sVersion
37115>>>>>        If (sVersion = "V1$") Begin
37117>>>>>            If (num_arguments > 2) Move False to bShouldUpgrade
37120>>>>>            Function_Return (VerifyPasswordHash(phoCrypto(Self), sEnteredPassword, Right(sUserPassword, Length(sUserPassword) - 3)))
37121>>>>>        End
37121>>>>>>
37121>>>>>        Else Begin
37122>>>>>            If (num_arguments > 2) Move True to bShouldUpgrade
37125>>>>>            Function_Return False
37126>>>>>        End
37126>>>>>>
37126>>>>>    End_Function
37127>>>>>    
37127>>>>>    Function UserRegister String sLoginName String sPassword Returns Boolean
37129>>>>>        Handle hoUserDD
37129>>>>>        Integer iErr
37129>>>>>        Get phoUserDD to hoUserDD
37130>>>>>        
37130>>>>>        //  Find the user
37130>>>>>        Send Clear of hoUserDD
37131>>>>>        Move sLoginName to WebAppUser.LoginName
37132>>>>>        Send Find of hoUserDD EQ Index.1
37133>>>>>        If (Found) Begin
37135>>>>>            Send Clear of hoUserDD
37136>>>>>            Function_Return False
37137>>>>>        End
37137>>>>>>
37137>>>>>        
37137>>>>>        Send Clear of hoUserDD
37138>>>>>        Set Field_Changed_Value of hoUserDD Field WebAppUser.FullName to sLoginName
37139>>>>>        Set Field_Changed_Value of hoUserDD Field WebAppUser.LoginName to sLoginName
37140>>>>>        If (not(CreatePasswordHash(Self, Trim(sPassword), &sPassword))) Begin
37142>>>>>            Send Clear of hoUserDD
37143>>>>>            Function_Return False
37144>>>>>        End
37144>>>>>>
37144>>>>>        Set Field_Changed_Value of hoUserDD Field WebAppUser.Password to sPassword
37145>>>>>        Get Request_Validate of hoUserDD to iErr
37146>>>>>        If (iErr) Begin
37148>>>>>            Send Clear of hoUserDD
37149>>>>>            Function_Return False
37150>>>>>        End
37150>>>>>>
37150>>>>>        
37150>>>>>        Send Request_Save of hoUserDD
37151>>>>>        Function_Return (not(Err))
37152>>>>>    End_Function
37153>>>>>    
37153>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
37155>>>>>        String sSessionKey sUserPassword
37155>>>>>        Handle hoSessionDD hoUserDD
37155>>>>>        Boolean bMatch bUpgrade
37155>>>>>        
37155>>>>>        Get phoSessionDD to hoSessionDD
37156>>>>>        Get phoUserDD to hoUserDD
37157>>>>>        Integer iErr eLoginMode
37157>>>>>        
37157>>>>>        // Refind session record
37157>>>>>        Get psSessionKey to sSessionKey
37158>>>>>        Send Clear of hoSessionDD
37159>>>>>        Move sSessionKey to WebAppSession.SessionKey
37160>>>>>        Send Find of hoSessionDD EQ Index.1
37161>>>>>        
37161>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
37163>>>>>            Get peLoginMode to eLoginMode
37164>>>>>            
37164>>>>>            //  Find the user
37164>>>>>            Move sLoginName to WebAppUser.LoginName
37165>>>>>            Send Find of hoUserDD EQ Index.1
37166>>>>>            
37166>>>>>            // Check username and password
37166>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
37168>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
37169>>>>>                Get VerifyPasswordHash (Trim(sUserPassword)) (Trim(sPassword)) (&bUpgrade) to bMatch
37170>>>>>                
37170>>>>>                If (bMatch) Begin
37172>>>>>                    // Store the login
37172>>>>>                    If (bUpgrade) Begin
37174>>>>>                        Get CreatePasswordHash (Trim(sPassword)) (&sPassword) to bUpgrade
37175>>>>>                        If (bUpgrade) Set Field_Changed_Value of hoUserDD Field WebAppUser.Password to sPassword
37178>>>>>                    End
37178>>>>>>
37178>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
37179>>>>>                    Get Request_Validate of hoSessionDD to iErr
37180>>>>>                    If (iErr) Begin
37182>>>>>                        // this should not happen. If it does its a programming error
37182>>>>>                        Error DFERR_PROGRAM C_$WebAppSessionValidateFailed
37183>>>>>>
37183>>>>>                        Function_Return False
37184>>>>>                    End
37184>>>>>>
37184>>>>>                    
37184>>>>>                    Send Request_Save of hoSessionDD
37185>>>>>                    
37185>>>>>                    // Update session properties
37185>>>>>                    Send UpdateSessionProperties False
37186>>>>>                    Send NotifyChangeRights
37187>>>>>                    Function_Return True
37188>>>>>                End
37188>>>>>>
37188>>>>>                Else Begin
37189>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
37189>>>>>                    Send Clear of hoUserDD
37190>>>>>                End
37190>>>>>>
37190>>>>>            End
37190>>>>>>
37190>>>>>            Else Begin
37191>>>>>                // This is added to delay latency to avoid hackers finding out whether the user exists or not.
37191>>>>>                Get CreatePasswordHash "This is to delay the response latency." (&sPassword) to iErr
37192>>>>>            End
37192>>>>>>
37192>>>>>        End
37192>>>>>>
37192>>>>>        Else Begin
37193>>>>>            // This is added to delay latency to avoid hackers finding out whether the user exists or not.
37193>>>>>            Get CreatePasswordHash "This is to delay the response latency." (&sPassword) to iErr
37194>>>>>        End
37194>>>>>>
37194>>>>>          
37194>>>>>        Function_Return False
37195>>>>>    End_Function
37196>>>>>    
37196>>>>>    Function SetUserPassword String sLoginName String sPassword Returns Boolean
37198>>>>>        Handle hoUserDD
37198>>>>>        Integer iErr
37198>>>>>        Get phoUserDD to hoUserDD
37199>>>>>        
37199>>>>>        //  Find the user
37199>>>>>        Send Clear of hoUserDD
37200>>>>>        Move sLoginName to WebAppUser.LoginName
37201>>>>>        Send Find of hoUserDD EQ Index.1
37202>>>>>        If (not(Found)) Begin
37204>>>>>            Send Clear of hoUserDD
37205>>>>>            Function_Return False
37206>>>>>        End
37206>>>>>>
37206>>>>>        
37206>>>>>        If (not(CreatePasswordHash(Self, Trim(sPassword), &sPassword))) Begin
37208>>>>>            Send Clear of hoUserDD
37209>>>>>            Function_Return False
37210>>>>>        End
37210>>>>>>
37210>>>>>        Set Field_Changed_Value of hoUserDD Field WebAppUser.Password to sPassword
37211>>>>>        Get Request_Validate of hoUserDD to iErr
37212>>>>>        If (iErr) Begin
37214>>>>>            Send Clear of hoUserDD
37215>>>>>            Function_Return False
37216>>>>>        End
37216>>>>>>
37216>>>>>        
37216>>>>>        Send Request_Save of hoUserDD
37217>>>>>        Function_Return (not(Err))
37218>>>>>    End_Function
37219>>>>>    
37219>>>>>    Function IsLoggedIn Returns Boolean
37221>>>>>        String sLoginName
37221>>>>>        Boolean bLogWebSession bLoggedIn
37221>>>>>        
37221>>>>>        Get pbLogWebSession to bLogWebSession
37222>>>>>        If not bLogWebSession Begin
37224>>>>>            Forward Get IsLoggedIn to bLoggedIn
37226>>>>>            Function_Return bLoggedIn
37227>>>>>        End
37227>>>>>>
37227>>>>>        
37227>>>>>        Get psLoginName to sLoginName
37228>>>>>        
37228>>>>>        Function_Return (sLoginName <> "")
37229>>>>>    End_Function
37230>>>>>    
37230>>>>>    
37230>>>>>    //
37230>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
37230>>>>>    // update properties based on the session and user data. Augment this function to update 
37230>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
37230>>>>>    // the right records when this procedure is called.
37230>>>>>    //
37230>>>>>    // Params:
37230>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
37230>>>>>    //
37230>>>>>    Procedure UpdateSessionProperties Boolean bClear
37232>>>>>        Handle hoUserDD
37232>>>>>        
37232>>>>>        Get phoUserDD to hoUserDD
37233>>>>>        
37233>>>>>        //  Update user properties
37233>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
37235>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
37236>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
37237>>>>>            Set piUserRights to WebAppUser.Rights
37238>>>>>            
37238>>>>>            Send OnSessionPropertiesSet 
37239>>>>>        End
37239>>>>>>
37239>>>>>        Else Begin
37240>>>>>            Set psUsername to ""
37241>>>>>            Set psLoginName to ""
37242>>>>>            Set piUserRights to 0
37243>>>>>            
37243>>>>>            Send OnSessionPropertiesClear
37244>>>>>        End
37244>>>>>>
37244>>>>>    End_Procedure
37245>>>>>    
37245>>>>>    Procedure OnSessionPropertiesSet
37247>>>>>        //  Empty event stub
37247>>>>>    End_Procedure
37248>>>>>    
37248>>>>>    Procedure OnSessionPropertiesClear
37250>>>>>        //  Empty event stub
37250>>>>>    End_Procedure
37251>>>>>    
37251>>>>>    Procedure EndSession
37253>>>>>        Integer iErr
37253>>>>>        Boolean bLogWebSession
37253>>>>>        Handle hoSessionDD       
37253>>>>>        
37253>>>>>        Get phoSessionDD to hoSessionDD
37254>>>>>        Get pbLogWebSession to bLogWebSession
37255>>>>>        If not bLogWebSession Begin
37257>>>>>            Forward Send EndSession
37259>>>>>            Procedure_Return
37260>>>>>        End
37260>>>>>>
37260>>>>>            
37260>>>>>        //  Check if session exists
37260>>>>>        Send Clear of hoSessionDD
37261>>>>>        Get psSessionKey to WebAppSession.SessionKey
37262>>>>>        
37262>>>>>        Send Find of hoSessionDD EQ Index.1
37263>>>>>        If (Found) Begin
37265>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
37266>>>>>            Get Request_Validate of hoSessionDD to iErr
37267>>>>>            If (iErr) Begin
37269>>>>>                // this should not happen. If it does its a programming error
37269>>>>>                Error DFERR_PROGRAM C_$WebAppSessionValidateFailed
37270>>>>>>
37270>>>>>                Procedure_Return
37271>>>>>            End
37271>>>>>>
37271>>>>>            Send Request_Save of hoSessionDD
37272>>>>>        End
37272>>>>>>
37272>>>>>    End_Procedure
37273>>>>>
37273>>>>>End_Class
37274>>>>>
37274>>>
37274>>>Object oSessionManager is a cWebSessionManagerStandard
37276>>>End_Object
37277>>>
37277>>>
37277>    Use Login.wo
Including file: Login.wo    (C:\DataFlex Projects\Centros\AppSrc\Login.wo)
37277>>>Use cWebView.pkg
37277>>>Use cWebForm.pkg
37277>>>Use cWebButton.pkg
37277>>>Use cWebPanel.pkg
37277>>>Use cWebLabel.pkg
37277>>>Use cWebSpacer.pkg
37277>>>Use cWebImage.pkg
37277>>>
37277>>>Object oLogin is a cWebView
37279>>>    Set piMinWidth to 250
37280>>>    Set piMaxWidth to 420
37281>>>    Set pbLoginModeEnforced to False
37282>>>    Set piColumnCount to 12
37283>>>    Set psCSSClass to "LoginView"
37284>>>    Set pbServerOnSubmit to True
37285>>>    
37285>>>    Set psStateViewName to "Login"
37286>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
37287>>>    
37287>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
37290>>>    
37290>>>    Delegate Set phoLoginView to Self
37292>>>    
37292>>>    Object oTopSpacer is a cWebSpacer
37294>>>        Set pbFillHeight to True
37295>>>        Set piColumnSpan to 12
37296>>>    End_Object
37297>>>    
37297>>>    Object oWarning is a cWebLabel
37299>>>        Set pbVisible to False
37300>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'admin' & 'admin'."
37301>>>        Set peAlign to alignCenter
37302>>>        Set piColumnSpan to 12
37303>>>        Set psCSSClass to "LoginWarning"
37304>>>    End_Object
37305>>>    
37305>>>    Object oLogo is a cWebImage
37307>>>        Set piColumnSpan to 10
37308>>>        Set psUrl to "images/DF_Logo_Retina.png"
37309>>>        Set pePosition to wiFit
37310>>>        Set piColumnIndex to 1
37311>>>        Set piHeight to 160
37312>>>        
37312>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
37313>>>    End_Object
37314>>>    
37314>>>    Object oLoginName is a cWebForm
37316>>>        Set psLabel to "User ID:"
37317>>>        Set peLabelPosition to lpTop
37318>>>        Set piMaxLength to 20
37319>>>        Set piColumnIndex to 1
37320>>>        Set pbShowLabel to False
37321>>>        Set psPlaceHolder to "loginname"
37322>>>        Set piColumnSpan to 10
37323>>>        Set psAutoComplete to "username"
37324>>>    End_Object
37325>>>    
37325>>>    Object oPassword is a cWebForm
37327>>>        Set psLabel to "Password:"
37328>>>        Set pbPassword to True
37329>>>        Set peLabelAlign to alignLeft
37330>>>        Set piMaxLength to 20
37331>>>        Set peLabelPosition to lpTop
37332>>>        Set pbShowLabel to False
37333>>>        Set psPlaceHolder to "password"
37334>>>        Set piColumnSpan to 10
37335>>>        Set piColumnIndex to 1
37336>>>        Set psAutoComplete to "current-password"
37337>>>    End_Object
37338>>>    
37338>>>    Object oWebSpacer1 is a cWebSpacer
37340>>>        Set piColumnSpan to 12
37341>>>        Set piHeight to 10
37342>>>    End_Object
37343>>>    
37343>>>    Object oLoginButton is a cWebButton
37345>>>        Set pbShowLabel to False
37346>>>        Set psCaption to "sign in"
37347>>>        Set pbServerOnClick to True
37348>>>        Set piColumnSpan to 10
37349>>>        Set piColumnIndex to 1
37350>>>        
37350>>>        Procedure OnClick
37353>>>            Send DoLogin
37354>>>        End_Procedure
37355>>>    End_Object
37356>>>    
37356>>>    Object oBottomSpacer is a cWebSpacer
37358>>>        Set pbFillHeight to True
37359>>>        Set piColumnSpan to 12
37360>>>    End_Object
37361>>>    
37361>>>    Procedure DoLogin
37364>>>        String sLoginName sPassword sPrevStateHash
37364>>>        Boolean bResult
37364>>>        
37364>>>        WebGet psValue of oLoginName to sLoginName
37365>>>        WebGet psValue of oPassword to sPassword
37366>>>        
37366>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
37367>>>        
37367>>>        If (bResult) Begin
37369>>>            Send Hide of oLogin
37370>>>            Send ShowHeader of ghoWebApp
37371>>>            WebSet psCSSClass of ghoWebApp to ""
37372>>>            
37372>>>            WebGet psPrevStateHash to sPrevStateHash
37373>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
37374>>>            
37374>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
37374>>>            WebSet psValue of oLoginName to ""
37375>>>            WebSet psValue of oPassword  to ""
37376>>>            WebSet pbVisible of oWarning to False
37377>>>        End
37377>>>>
37377>>>        Else Begin
37378>>>            WebSet pbVisible of oWarning to True
37379>>>        End
37379>>>>
37379>>>    End_Procedure
37380>>>    
37380>>>    Procedure OnSubmit
37383>>>        Send DoLogin
37384>>>    End_Procedure
37385>>>    
37385>>>    Procedure OnLoad
37388>>>        String sPrevStateHash sView
37388>>>        
37388>>>        Forward Send OnLoad
37390>>>        
37390>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
37390>>>        Get StateHash of ghoWebApp to sPrevStateHash
37391>>>        Send ParseViewStateHash sPrevStateHash (&sView)
37392>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
37394>>>            WebSet psPrevStateHash to sPrevStateHash
37395>>>        End
37395>>>>
37395>>>        
37395>>>    End_Procedure
37396>>>    
37396>>>    Procedure OnBeforeShow
37399>>>        //  Hide header & apply nice background style
37399>>>        Send HideHeader to ghoWebApp
37400>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
37401>>>    End_Procedure
37402>>>    
37402>>>End_Object
37403>>>
37403>>>
37403>>>
37403>>>
37403>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (C:\DataFlex Projects\Centros\AppSrc\WebResourceManager.wo)
37403>>>Use cWebResourceManager.pkg
37403>>>
37403>>>Object oWebResourceManager is a cWebResourceManager
37405>>>End_Object
37406>    
37406>    Use Dashboard.wo
Including file: Dashboard.wo    (C:\DataFlex Projects\Centros\AppSrc\Dashboard.wo)
37406>>>Use cWebView.pkg
37406>>>Use cWebPanel.pkg
37406>>>Use cWebForm.pkg
37406>>>Use cWebButton.pkg
37406>>>Use cWebGroup.pkg
37406>>>Use cWebSpacer.pkg
37406>>>Use cWebHtmlBox.pkg
37406>>>Use cWebMenuGroup.pkg
37406>>>Use cWebMenuItem.pkg
37406>>>Use cWebLabel.pkg
37406>>>Use cWebList.pkg
37406>>>Use cWebColumn.pkg
37406>>>
37406>>>Object oDashboard is a cWebView
37408>>>
37408>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
37408>>>    // Add a DDO Structure 
37408>>>    //
37408>>>    // There is no need to synchronize a DD structure on the client so we do
37408>>>    // not set the Server property or send ADDOStructure. We will simply use
37408>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
37408>>>    // It is the HTML in these objects that is sent to the client each time 
37408>>>    // this page is shown.
37408>>>    //
37408>>>    // Also, it is important for the drill-down Navigation interface that we
37408>>>    // do not set the Server property to some DDO because this will affect 
37408>>>    // constraints in the next view that we navigate to.
37408>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
37408>>>
37408>>>    Set piMaxWidth to 1024
37409>>>    
37409>>>    Set psCaption to "Dashboard"
37410>>>    Set peViewType to vtUndefined
37411>>>    Set pbShowCaption to False
37412>>>    Set psCSSClass to "Dashboard"
37413>>>    
37413>>>    Object oWebMainPanel is a cWebPanel
37415>>>        Set piColumnCount to 24
37416>>>        
37416>>>        // - - - - - - - - - - - - - - -
37416>>>        // Main Panel's Responsive Rules
37416>>>        // - - - - - - - - - - - - - - -
37416>>>        WebSetResponsive piColumnCount rmMobile to 1
37417>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
37418>>>    
37418>>>        Object oTiles_grp is a cWebGroup
37420>>>            Set piColumnSpan to 8
37421>>>            Set pbShowBorder to False
37422>>>            Set pbShowCaption to False
37423>>>            Set piColumnCount to 12
37424>>>            
37424>>>            Set psCSSClass to "TilesGroup"
37425>>>    
37425>>>            Object oWelcomeTile is a cWebHtmlBox
37427>>>                Set piColumnSpan to 6
37428>>>                Set psCSSClass to "Tile Light"
37429>>>                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Welcome</div><div Class="Tile_Subtitle">--</div></div>'
37430>>>    
37430>>>                Procedure OnLoad
37433>>>                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Welcome</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')
37434>>>                End_Procedure
37435>>>                
37435>>>            End_Object
37436>>>    
37436>>>            Object oTile2 is a cWebHtmlBox
37438>>>                Set pbServerOnClick to True
37439>>>                Set piColumnSpan to 6
37440>>>                Set piColumnIndex to 6
37441>>>                Set psCSSClass to "Tile LightAlternate"
37442>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Dummie Email</div><div class="Tile_Subtitle"></div></div>'
37443>>>                                
37443>>>                WebRegisterPath ntNavigateForwardCustom oDummieEmail
37449>>>                
37449>>>                Procedure OnClick String sId String sParam
37452>>>                    Send NavigatePath
37453>>>                End_Procedure
37454>>>                
37454>>>            End_Object
37455>>>    
37455>>>            Object oTile3 is a cWebHtmlBox
37457>>>                Set pbServerOnClick to True
37458>>>                Set piColumnSpan to 6
37459>>>                Set psCSSClass to "Tile Dark"
37460>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Dummie Dni</div><div class="Tile_Subtitle"></div></div>'
37461>>>    
37461>>>                 WebRegisterPath ntNavigateForwardCustom oDummieDni
37467>>>                
37467>>>                Procedure OnClick String sId String sParam
37470>>>                    Send NavigatePath
37471>>>                End_Procedure
37472>>>                
37472>>>            End_Object
37473>>>            
37473>>>                
37473>>>    
37473>>>            Object oTile4 is a cWebHtmlBox
37475>>>                Set pbServerOnClick to True
37476>>>                Set piColumnSpan to 6
37477>>>                Set piColumnIndex to 6
37478>>>                Set psCSSClass to "Tile DarkAlternate"
37479>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Centros</div><div class="Tile_Subtitle"></div></div>'
37480>>>            
37480>>>                WebRegisterPath ntNavigateForwardCustom oSelectCentro
37486>>>                
37486>>>                Procedure OnClick String sId String sParam
37489>>>                    Send NavigatePath
37490>>>                End_Procedure
37491>>>            End_Object
37492>>>                
37492>>>            Object oTile5 is a cWebHtmlBox
37494>>>                Set pbServerOnClick to True
37495>>>                Set piColumnSpan to 6
37496>>>                Set psCSSClass to "Tile Dark"
37497>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Alummnos</div><div class="Tile_Subtitle"></div></div>'
37498>>>    
37498>>>                 WebRegisterPath ntNavigateForwardCustom oSelectStudents
37504>>>                
37504>>>                Procedure OnClick String sId String sParam
37507>>>                    Send NavigatePath
37508>>>                End_Procedure
37509>>>            End_Object
37510>>>            
37510>>>             Object oTile6 is a cWebHtmlBox
37512>>>                Set pbServerOnClick to True
37513>>>                Set piColumnSpan to 6
37514>>>                Set psCSSClass to "Tile Dark"
37515>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Dummie Telefono</div><div class="Tile_Subtitle"></div></div>'
37516>>>    
37516>>>                 WebRegisterPath ntNavigateForwardCustom oDummieTelefono
37522>>>                
37522>>>                Procedure OnClick String sId String sParam
37525>>>                    Send NavigatePath
37526>>>                End_Procedure
37527>>>             End_Object
37528>>>             
37528>>>         
37528>>>        End_Object
37529>>>    
37529>>>    End_Object
37530>>>    
37530>>>    Procedure OnBeforeShow
37533>>>        // Each time this view is shown we will update the appropriate information.
37533>>>    End_Procedure
37534>>>
37534>>>End_Object
37535>    Use DummieEmail.wo
Including file: DummieEmail.wo    (C:\DataFlex Projects\Centros\AppSrc\DummieEmail.wo)
37535>>>Use cWebView.pkg
37535>>>Use cWebPanel.pkg
37535>>>Use cWebForm.pkg 
37535>>>
37535>>>Use zEmailValidation.pkg
Including file: zEmailValidation.pkg    (C:\DataFlex Projects\Centros\AppSrc\zEmailValidation.pkg)
37535>>>>>Function zValidarEmail String sEmail  String ByRef sMsg Returns Boolean
37538>>>>> 
37538>>>>>  Boolean bRet
37538>>>>>  String[] aEmail 
37539>>>>>  
37539>>>>>    Get zSplitEmail sEmail  to aEmail 
37540>>>>>    
37540>>>>>    Get zArrobaCheck aEmail (&sMsg)  to bRet
37541>>>>>    If (not (bRet)) Function_Return False 
37544>>>>>    
37544>>>>>    Get zLocalAndressCheck aEmail (&sMsg)  to bRet
37545>>>>>    If (not (bRet)) Function_Return False
37548>>>>>    
37548>>>>>    Get zDominioAndExtensionCheck aEmail (&sMsg) to bRet
37549>>>>>    If (not (bRet)) Function_Return False
37552>>>>>    
37552>>>>>    Get zLocalAndressSizeCheck aEmail (&sMsg) to bRet 
37553>>>>>    If (not (bRet)) Function_Return False 
37556>>>>>    
37556>>>>>    Get zDomSizeCheck aEmail (&sMsg) to bRet 
37557>>>>>    If (not (bRet)) Function_Return False
37560>>>>>    
37560>>>>>    
37560>>>>>    Function_Return True
37561>>>>>End_Function
37562>>>>>
37562>>>>>
37562>>>>>
37562>>>>>Function zSplitEmail String sEmail Returns String[]
37565>>>>>    String[] aEmail
37566>>>>>    
37566>>>>>    Move (StrSplitToArray (sEmail , "@")) to aEmail
37567>>>>>    Function_Return aEmail
37568>>>>>End_Function
37569>>>>>
37569>>>>>
37569>>>>>
37569>>>>>Function zArrobaCheck String[] aEmail String ByRef sMsg Returns Boolean
37572>>>>>    If (SizeOfArray(aEmail) > 2) Begin 
37574>>>>>        Move "No se permite más de un @ en el correo" to sMsg
37575>>>>>        Function_Return False 
37576>>>>>        
37576>>>>>    End
37576>>>>>>
37576>>>>>    If (SizeOfArray(aEmail) < 2) Begin
37578>>>>>        Move "Porfavor el correo tiene que contener un @" to sMsg
37579>>>>>        Function_Return False
37580>>>>>    End
37580>>>>>>
37580>>>>>    Function_Return True
37581>>>>>
37581>>>>>End_Function
37582>>>>>
37582>>>>>
37582>>>>>Function zLocalAndressCheck String[] aEmail String ByRef sMsg Returns Boolean
37585>>>>>    
37585>>>>>    String[] aRet
37586>>>>>    Object oEmailPattern is a cRegEx
37588>>>>>        Set psExpression to "^[a-zA-Z0-9._%+]+$"
37589>>>>>    End_Object
37590>>>>>    
37590>>>>>    Get MatchAll of oEmailPattern (aEmail[0]) to aRet
37591>>>>>    
37591>>>>>    If (SizeOfArray(aRet) = 1 ) Begin
37593>>>>>            Function_Return True
37594>>>>>            
37594>>>>>    End
37594>>>>>>
37594>>>>>    
37594>>>>>    Move "Antes del @ solo puede haber un codigo alfanumerico y/o (. , _ , % , +)" to sMsg
37595>>>>>    Function_Return False
37596>>>>>End_Function
37597>>>>>
37597>>>>>Function zDominioAndExtensionCheck String[] aEmail String ByRef sMsg Returns Boolean
37600>>>>>    
37600>>>>>    String[] aRet aDomRet
37602>>>>>    Integer iPospoint
37602>>>>>    String sExtensionDom
37602>>>>>    Object oEmailPattern is a cRegEx
37604>>>>>        Set psExpression to "^[a-zA-Z0-9-]+\.[a-zA-Z]{2,7}$"
37605>>>>>    End_Object
37606>>>>>    
37606>>>>>    Get MatchAll of oEmailPattern (aEmail[1]) to aRet
37607>>>>>    
37607>>>>>    
37607>>>>>    Move (RightPos ( "." , aRet[0] )) to iPospoint
37608>>>>>    Move (Mid(aRet[0] , (Length(aRet[0]) - iPospoint) , (iPospoint + 1))) to sExtensionDom
37609>>>>>    
37609>>>>>    If (SizeOfArray(aRet) = 1 ) Begin
37611>>>>>        If (Length(sExtensionDom) > 1 and Length(sExtensionDom) < 8) Begin
37613>>>>>            
37613>>>>>            Function_Return True 
37614>>>>>        End
37614>>>>>>
37614>>>>>            
37614>>>>>    End
37614>>>>>>
37614>>>>>    
37614>>>>>    Move "Despues del @ solo puede contener un codigo alfanumerico seguido de un punto y la extesion que tiene una longitud enttre 2 y 7, solo permitiendo letras" to sMsg
37615>>>>>    Function_Return False
37616>>>>>    
37616>>>>>    
37616>>>>>End_Function
37617>>>>>
37617>>>>>Function zLocalAndressSizeCheck String[] aEmail String ByRef sMsg Returns Boolean
37620>>>>>    
37620>>>>>     If (Length(aEmail[0]) < 65) Begin
37622>>>>>        Function_Return True
37623>>>>>     End
37623>>>>>>
37623>>>>>     Move "La parte de la dirección local Solo puede tener un maximo de 65 caracteres " to sMsg
37624>>>>>        Function_Return False
37625>>>>>End_Function
37626>>>>>
37626>>>>>
37626>>>>>Function zDomSizeCheck String[] aEmail String ByRef sMsg Returns Boolean
37629>>>>>    
37629>>>>>   
37629>>>>>    If (Length(aEmail[1]) < 256 ) Begin
37631>>>>>        Function_Return True
37632>>>>>    End
37632>>>>>>
37632>>>>>    
37632>>>>>    Move "El el dominio no puede superar los 255 caracteres" to sMsg
37633>>>>>    
37633>>>>>    
37633>>>>>    Function_Return False 
37634>>>>>End_Function
37635>>>>>
37635>>>>>
37635>>>Use cWebButton.pkg
37635>>>Use cWebSpacer.pkg
37635>>>Use cWebLabel.pkg
37635>>>
37635>>>Object oDummieEmail is a cWebView
37637>>>    Set piWidth to 700
37638>>>    Set psCaption to "DummieEmail"
37639>>>
37639>>>    // Your DDO structure will go here
37639>>>
37639>>>    Object oWebMainPanel is a cWebPanel
37641>>>        Set piColumnCount to 12
37642>>>        
37642>>>        // place controls here
37642>>>        // Your view will grow as controls are added
37642>>>        
37642>>>        Object oEmail_Form is a cWebForm
37644>>>            Set piColumnSpan to 0
37645>>>            Set psLabel to "Email"
37646>>>        End_Object
37647>>>
37647>>>        Object oError_Label is a cWebLabel
37649>>>            Set psCaption to ""
37650>>>            Set piColumnSpan to 13
37651>>>            Set piColumnIndex to 0
37652>>>        End_Object
37653>>>
37653>>>        Object oWebSpacer1 is a cWebSpacer
37655>>>            Set piColumnSpan to 12
37656>>>        End_Object
37657>>>
37657>>>        Object oValidar_Button is a cWebButton
37659>>>            Set piColumnSpan to 4
37660>>>            Set piColumnIndex to 4
37661>>>            Set psCaption to "Validar"
37662>>>        
37662>>>            Procedure OnClick
37665>>>                Boolean bRet
37665>>>                String sEmail sMsg
37665>>>                WebGet psValue of oEmail_Form to sEmail
37666>>>                Get zValidarEmail sEmail (&sMsg) to bRet
37667>>>                
37667>>>                WebSet psBackgroundColor of oEmail_Form to "#ffffff"
37668>>>                WebSet psCaption of oError_Label to ""
37669>>>                
37669>>>                If (bRet) Begin
37671>>>                    WebSet psBackgroundColor of oEmail_Form to "green"
37672>>>                    
37672>>>                End
37672>>>>
37672>>>                If (not (bRet)) Begin
37674>>>                    WebSet psBackgroundColor of oEmail_Form to "red"
37675>>>                    WebSet psCaption of oError_Label to sMsg
37676>>>                End
37676>>>>
37676>>>                
37676>>>            End_Procedure
37677>>>        End_Object
37678>>>        
37678>>>        
37678>>>        
37678>>>    End_Object 
37679>>>
37679>>>End_Object
37680>    Use DummineDniValidation.wo
Including file: DummineDniValidation.wo    (C:\DataFlex Projects\Centros\AppSrc\DummineDniValidation.wo)
37680>>>Use cWebWidget.pkg
Including file: cWebWidget.pkg    (C:\Program Files\DataFlex 25.0\Pkg\cWebWidget.pkg)
37680>>>>>Use cWebGroup.pkg
37680>>>>>Use cWebDDOSync_Mixin.pkg
37680>>>>>Use WebWidgetStructs.pkg
Including file: WebWidgetStructs.pkg    (C:\Program Files\DataFlex 25.0\Pkg\WebWidgetStructs.pkg)
37680>>>>>>>// WCT: Wizard Control Type
37680>>>>>>>Enum_List
37680>>>>>>>    Define WCT_Form       for 0
37680>>>>>>>    Define WCT_Combo      for 1
37680>>>>>>>    Define WCT_Slider     for 2
37680>>>>>>>    Define WCT_Checkbox   for 3
37680>>>>>>>End_Enum_List
37680>>>>>>>
37680>>>>>>>Struct tWidgetConfigPropSettings
37680>>>>>>>    String sOptLabel
37680>>>>>>>    String sOptDescription
37680>>>>>>>    Integer eControlType        // 0 = form, 1 = combo, 2 = slider, 3 = checkbox. Use above enum
37680>>>>>>>    Boolean bOptValidateValue   // Whether to validate the given value versus any of the underlying options
37680>>>>>>>    Integer iOptMinValue
37680>>>>>>>    Integer iOptMaxValue
37680>>>>>>>    Integer iOptStepSize
37680>>>>>>>    String[] asOptValues
37680>>>>>>>End_Struct
37680>>>>>>>
37680>>>>>>>Struct tWidgetConfigProp
37680>>>>>>>    String sObjName
37680>>>>>>>    String sPropName
37680>>>>>>>    tWidgetConfigPropSettings Settings
37680>>>>>>>    tWidgetConfigPropSettings Settings
37680>>>>>>>End_Struct
37680>>>>>>>
37680>>>>>>>Struct tWidgetConfigPropValue
37680>>>>>>>    String sObjName
37680>>>>>>>    String sPropName
37680>>>>>>>    String sValue
37680>>>>>>>End_Struct
37680>>>>>>>
37680>>>>>>>Struct tWidgetDef
37680>>>>>>>    String sName
37680>>>>>>>    String sDynId
37680>>>>>>>    Integer iRowIndex
37680>>>>>>>    Integer iColIndex
37680>>>>>>>    Integer iRowSpan
37680>>>>>>>    Integer iColSpan
37680>>>>>>>    Boolean bFillHeight
37680>>>>>>>    tWidgetConfigPropValue[] aConfig // ToDo: This could be smarter, aggregate by child-object and list all props there.
37680>>>>>>>    tWidgetConfigPropValue[] aConfig // ToDo: This could be smarter, aggregate by child-object and list all props there.
37680>>>>>>>    tWebPropRule[] aResponsivePropRules
37680>>>>>>>    tWebPropRule[] aResponsivePropRules
37680>>>>>>>End_Struct
37680>>>>>
37680>>>>>//  Function from cWebDynamicObjectContainer
37680>>>>>Register_Function TruncateName String sObjectName Returns String
37680>>>>>
37680>>>>>//Struct tWidget
37680>>>>>//    String sId
37680>>>>>//    tWidgetDef WidgetDef
37680>>>>>//End_Struct
37680>>>>>
37680>>>>>Class cWebWidget is a cWebGroup
37681>>>>>    
37681>>>>>    Procedure Construct_Object
37683>>>>>        Forward Send Construct_Object
37685>>>>>        
37685>>>>>        Property Integer piDefaultColSpan 1
37686>>>>>        Property Integer piDefaultRowSpan 1
37687>>>>>        
37687>>>>>        Property String psDynamicWidgetId                   // Set by the container to easily find this widget for dynamic configuration
37689>>>>>        
37689>>>>>        Property String psWidgetName
37691>>>>>        
37691>>>>>        Property String psWidgetCaption ""
37692>>>>>        Property String psWidgetDescription ""
37693>>>>>        
37693>>>>>        Property Boolean pbAllowConfiguration True
37695>>>>>        
37695>>>>>        Property Boolean pbConfigurable False
37697>>>>>        
37697>>>>>        Property Handle phoConfigWizard C_WebUnresolvedObject
37698>>>>>        
37698>>>>>        // Default to flow to make the designer work with the widgetcontainer and because we do not want widgets to inherit whatever is set at the dashboard view
37698>>>>>        Set peLayoutType to ltFlow
37699>>>>>        Set pbFillHeight to True
37700>>>>>        Set pbScroll to True
37701>>>>>        
37701>>>>>        Set psJSClass to 'df.WebWidget'
37702>>>>>        
37702>>>>>        Send Define_cWebDDOSync_mixin
37703>>>>>    End_Procedure
37704>>>>>    
37704>>>>>    Import_Class_Protocol cWebDDOSync_mixin
37705>>>>>    
37705>>>>>    Function IsWebWidget Returns Boolean
37707>>>>>        Function_Return True
37708>>>>>    End_Function
37709>>>>>    
37709>>>>>    Procedure InitWidget
37711>>>>>        Boolean bConfigurable
37711>>>>>        
37711>>>>>        Get IsConfigurable to bConfigurable
37712>>>>>        WebSet pbConfigurable to bConfigurable
37713>>>>>        
37713>>>>>        Send OnInitializeWidget
37714>>>>>    End_Procedure
37715>>>>>    
37715>>>>>    Function ConfigurablePropExists tWidgetConfigProp WidgetConfigProp Returns Boolean
37717>>>>>        Boolean bExists
37717>>>>>        tWidgetConfigProp[] aConfigurableProps 
37717>>>>>        tWidgetConfigProp[] aConfigurableProps 
37718>>>>>        
37718>>>>>        Get GetConfigurableProps to aConfigurableProps
37719>>>>>        
37719>>>>>        Get ConfigurablePropExistsEx aConfigurableProps WidgetConfigProp to bExists
37720>>>>>        
37720>>>>>        Function_Return bExists
37721>>>>>    End_Function
37722>>>>>    
37722>>>>>    Function ConfigurablePropExistsEx tWidgetConfigProp[] aConfigurableProps tWidgetConfigProp WidgetConfigProp Returns Boolean
37724>>>>>        Integer i iProps
37724>>>>>        String sTrimmedObjName
37724>>>>>        
37724>>>>>        Get TrimDynamicObjectName WidgetConfigProp.sObjName to sTrimmedObjName
37725>>>>>        
37725>>>>>        Move ((SizeOfArray(aConfigurableProps)) - 1) to iProps
37726>>>>>        
37726>>>>>        For i from 0 to iProps
37732>>>>>>
37732>>>>>            If (aConfigurableProps[i].sObjName = sTrimmedObjName and aConfigurableProps[i].sPropName = WidgetConfigProp.sPropName) Begin
37734>>>>>                Function_Return True
37735>>>>>            End
37735>>>>>>
37735>>>>>        Loop
37736>>>>>>
37736>>>>>        
37736>>>>>        Function_Return False
37737>>>>>    End_Function
37738>>>>>    
37738>>>>>    // Gets the configurable props for this widget
37738>>>>>    // This is used by the configuration wizard to build a configuration dialog, based on the prop settings
37738>>>>>    Function GetConfigurableProps Returns tWidgetConfigProp[]
37740>>>>>        tWidgetConfigProp[] aConfigurableProps
37740>>>>>        tWidgetConfigProp[] aConfigurableProps
37741>>>>>
37741>>>>>        Send OnGetConfigurableProps (&aConfigurableProps)
37742>>>>>        
37742>>>>>        Function_Return aConfigurableProps
37743>>>>>    End_Function
37744>>>>>    
37744>>>>>    Function IsConfigurable Returns Boolean
37746>>>>>        Boolean bAllowConfig
37746>>>>>        tWidgetConfigProp[] aConfigurableProps
37746>>>>>        tWidgetConfigProp[] aConfigurableProps
37747>>>>>        
37747>>>>>        Move ( ((phoConfigWizard(Self)) <> C_WebUnresolvedObject) and (pbAllowConfiguration(Self)) ) to bAllowConfig
37748>>>>>        
37748>>>>>        Send OnDetermineConfigurableState (&bAllowConfig)
37749>>>>>        
37749>>>>>        Function_Return bAllowConfig
37750>>>>>    End_Function
37751>>>>>    
37751>>>>>    Function GetConfigurablePropValues Returns tWidgetConfigPropValue[]
37753>>>>>        tWidgetConfigProp[] aProps
37753>>>>>        tWidgetConfigProp[] aProps
37754>>>>>        tWidgetConfigPropValue[] aValues
37754>>>>>        tWidgetConfigPropValue[] aValues
37755>>>>>        tWebPropMetaData PropMeta
37755>>>>>        tWebPropMetaData PropMeta
37755>>>>>        Variant vValue
37755>>>>>        Integer i iProps iType
37755>>>>>        Boolean bValid
37755>>>>>        String sDynamicObjectId
37755>>>>>        Handle hoObj
37755>>>>>        tWidgetConfigPropValue CurValue EmptyValue
37755>>>>>        tWidgetConfigPropValue CurValue EmptyValue
37755>>>>>        
37755>>>>>        // Get all config props
37755>>>>>        
37755>>>>>        Get GetConfigurableProps to aProps
37756>>>>>        
37756>>>>>        Move ((SizeOfArray(aProps)) - 1) to iProps
37757>>>>>        
37757>>>>>        For i from 0 to iProps
37763>>>>>>
37763>>>>>            Delegate Get TruncateName aProps[i].sObjName to sDynamicObjectId
37765>>>>>            If (sDynamicObjectId <> "") Begin
37767>>>>>                WebGet psDynamicWidgetId to sDynamicObjectId
37768>>>>>                Move (sDynamicObjectId + '.' + aProps[i].sObjName) to sDynamicObjectId
37769>>>>>                
37769>>>>>                Get DynamicObject sDynamicObjectId to hoObj
37770>>>>>            End
37770>>>>>>
37770>>>>>            Else Begin
37771>>>>>                Move (Self) to hoObj
37772>>>>>            End
37772>>>>>>
37772>>>>>            
37772>>>>>            If (hoObj <> 0) Begin
37774>>>>>                Move EmptyValue to CurValue
37775>>>>>                
37775>>>>>                Get FindWebPropertyMetaByName of hoObj aProps[i].sPropName to PropMeta
37776>>>>>                If (PropMeta.hmGetter <> 0) Begin
37778>>>>>                    Get GetSyncProp of hoObj hoObj PropMeta.hmGetter PropMeta.sName to vValue
37779>>>>>                    
37779>>>>>                    Get VariantType vValue to iType
37780>>>>>                    If (iType = OLE_VT_Empty) Begin
37782>>>>>                        Move False to bValid
37783>>>>>                    End
37783>>>>>>
37783>>>>>                    Else Begin
37784>>>>>                        Get VerifyConfigurablePropValue aProps[i] vValue to bValid
37785>>>>>                    End
37785>>>>>>
37785>>>>>                    
37785>>>>>                    If (bValid) Begin
37787>>>>>                        Move sDynamicObjectId to CurValue.sObjName
37788>>>>>                        Move aProps[i].sPropName to CurValue.sPropName
37789>>>>>                        Move vValue to CurValue.sValue
37790>>>>>                        Move CurValue to aValues[-1]
37791>>>>>                    End
37791>>>>>>
37791>>>>>                    Else Begin
37792>>>>>                        Function_Return EmptyValue
37793>>>>>                    End
37793>>>>>>
37793>>>>>                End
37793>>>>>>
37793>>>>>                Else Begin
37794>>>>>                    Function_Return EmptyValue
37795>>>>>                End
37795>>>>>>
37795>>>>>            End
37795>>>>>>
37795>>>>>        Loop
37796>>>>>>
37796>>>>>        
37796>>>>>        Function_Return aValues
37797>>>>>    End_Function
37798>>>>>    
37798>>>>>    Function VerifyConfigurablePropValue tWidgetConfigProp ConfigProp Variant vValue Returns Boolean
37800>>>>>        // Check variant type
37800>>>>>        // check if variant within acceptable range of values
37800>>>>>        Integer iType iVals i
37800>>>>>        Number nCur
37800>>>>>        
37800>>>>>        If (not(ConfigProp.Settings.bOptValidateValue)) Begin
37802>>>>>            Function_Return True
37803>>>>>        End
37803>>>>>>
37803>>>>>        
37803>>>>>        Get VariantType vValue to iType
37804>>>>>        Move ((SizeOfArray(ConfigProp.Settings.asOptValues)) -1) to iVals
37805>>>>>        
37805>>>>>        If (iType = OLE_VT_I4 or iType = OLE_VT_I8 or ;            iType = OLE_VT_R4 or iType = OLE_VT_I8) Begin
37807>>>>>            // compare min, max and allowed vals
37807>>>>>            If (vValue >= ConfigProp.Settings.iOptMinValue and vValue =< ConfigProp.Settings.iOptMaxValue) Begin
37809>>>>>                // check step size
37809>>>>>                If (ConfigProp.Settings.iOptStepSize > 0) Begin
37811>>>>>                    Move ConfigProp.Settings.iOptMinValue to nCur
37812>>>>>                    While (nCur <= ConfigProp.Settings.iOptMaxValue)
37816>>>>>                        If (vValue = nCur) Begin
37818>>>>>                            Function_Return True
37819>>>>>                        End
37819>>>>>>
37819>>>>>                        Move (nCur + ConfigProp.Settings.iOptStepSize) to nCur
37820>>>>>                    Loop
37821>>>>>>
37821>>>>>                End
37821>>>>>>
37821>>>>>                Else Begin
37822>>>>>                    Function_Return True
37823>>>>>                End
37823>>>>>>
37823>>>>>            End
37823>>>>>>
37823>>>>>            
37823>>>>>            For i from 0 to iVals
37829>>>>>>
37829>>>>>                If (vValue = ConfigProp.Settings.asOptValues[i]) Begin
37831>>>>>                    Function_Return True
37832>>>>>                End
37832>>>>>>
37832>>>>>            Loop
37833>>>>>>
37833>>>>>        End
37833>>>>>>
37833>>>>>        If (iType = OLE_VT_Bstr) Begin
37835>>>>>            // compare allowed values
37835>>>>>            If (iVals <= 0) Begin
37837>>>>>                Function_Return True
37838>>>>>            End
37838>>>>>>
37838>>>>>            
37838>>>>>            For i from 0 to iVals
37844>>>>>>
37844>>>>>                If (vValue = ConfigProp.Settings.asOptValues[i]) Begin
37846>>>>>                    Function_Return True
37847>>>>>                End
37847>>>>>>
37847>>>>>            Loop
37848>>>>>>
37848>>>>>        End
37848>>>>>>
37848>>>>>        
37848>>>>>        
37848>>>>>        
37848>>>>>        Function_Return False
37849>>>>>    End_Function
37850>>>>>    
37850>>>>>    // Performs the equivalent of a webget for objects within this widget
37850>>>>>    Function GetWidgetConfigurablePropValue String sObj String sProp Returns Variant
37852>>>>>        String sDynamicObjectId
37852>>>>>        Handle hoObj
37852>>>>>        tWebPropMetaData PropMeta
37852>>>>>        tWebPropMetaData PropMeta
37852>>>>>        Variant vRet
37852>>>>>        
37852>>>>>        Delegate Get TruncateName sObj to sDynamicObjectId
37854>>>>>        Get DynamicObject sDynamicObjectId to hoObj
37855>>>>>        
37855>>>>>        If (hoObj <> 0) Begin
37857>>>>>            Get FindWebPropertyMetaByName of hoObj sProp to PropMeta
37858>>>>>            Get GetSyncProp of hoObj hoObj PropMeta.hmGetter PropMeta.sName to vRet
37859>>>>>        End
37859>>>>>>
37859>>>>>        
37859>>>>>        Function_Return vRet
37860>>>>>    End_Function
37861>>>>>    
37861>>>>>    Function TrimDynamicObjectName String sObjName Returns String
37863>>>>>        String[] asObjName
37864>>>>>        String sRetName
37864>>>>>        
37864>>>>>        Delegate Get TruncateName sObjName to sObjName
37866>>>>>        
37866>>>>>        Move (StrSplitToArray(sObjName, psDynamicWidgetID(Self))) to asObjName
37867>>>>>        
37867>>>>>        If (SizeOfArray(asObjName) > 1) Begin
37869>>>>>            Move asObjName[1] to sRetName
37870>>>>>            // Get rid of initial '.' if we end up with such a name
37870>>>>>            If ((Pos('.', sRetName)) = 1) Begin
37872>>>>>                Move (Replace('.', sRetName, '')) to sRetName
37873>>>>>            End
37873>>>>>>
37873>>>>>        End
37873>>>>>>
37873>>>>>        
37873>>>>>        Function_Return sRetName
37874>>>>>    End_Function
37875>>>>>    
37875>>>>>    Function CreateConfigurableProp Handle hoObj Handle hmPropFunc Returns tWidgetConfigProp
37877>>>>>        tWidgetConfigProp WidgetConfigProp
37877>>>>>        tWidgetConfigProp WidgetConfigProp
37877>>>>>        tWebPropMetaData PropMeta
37877>>>>>        tWebPropMetaData PropMeta
37877>>>>>        String sObjName
37877>>>>>        String[] asObjName
37878>>>>>        Boolean bIsDynamic
37878>>>>>        
37878>>>>>        Get IsDynamicObject of hoObj to bIsDynamic
37879>>>>>        If (bIsDynamic) Begin
37881>>>>>            Get TrimDynamicObjectName (WebObjectName(hoObj)) to WidgetConfigProp.sObjName
37882>>>>>        End
37882>>>>>>
37882>>>>>        Else Begin
37883>>>>>            // Assume Default widget & top level prop (will correct itself when attempting to apply)
37883>>>>>            Move "" to WidgetConfigProp.sObjName
37884>>>>>        End
37884>>>>>>
37884>>>>>
37884>>>>>        Get FindWebPropertyMeta of hoObj hmPropFunc to PropMeta
37885>>>>>        Move PropMeta.sName to WidgetConfigProp.sPropName
37886>>>>>
37886>>>>>        Function_Return WidgetConfigProp
37887>>>>>    End_Function
37888>>>>>    
37888>>>>>    Procedure OnInitializeWidget
37890>>>>>    End_Procedure
37891>>>>>    
37891>>>>>    Procedure OnGetConfigurableProps tWidgetConfigProp[] ByRef aConfigurableProps
37893>>>>>        // This event can be used to modify the initial set of configurable props based on for example permissions
37893>>>>>    End_Procedure
37894>>>>>    
37894>>>>>    Procedure OnWidgetPropsChanged
37896>>>>>    End_Procedure
37897>>>>>    
37897>>>>>    Procedure OnDetermineConfigurableState Boolean ByRef bAllow
37899>>>>>    End_Procedure
37900>>>>>    
37900>>>>>    Function AllowAccess Returns Boolean
37902>>>>>        // Override with your custom logic to determine if this widget should be rendered or not under certain circumstances
37902>>>>>        Function_Return True
37903>>>>>    End_Function
37904>>>>>    
37904>>>>>    // Used by AllowViewAccess to determine the name passed to the session manager.
37904>>>>>    Function ViewName Returns String
37906>>>>>        Function_Return (psWidgetName(Self))
37907>>>>>    End_Function
37908>>>>>    
37908>>>>>    // DDO Sync logic
37908>>>>>    Procedure Call_PreSync
37910>>>>>        Boolean bAllow bOrigSync
37910>>>>>        
37910>>>>>        Get pbSynchronizing to bOrigSync
37911>>>>>        Set pbSynchronizing to True
37912>>>>>        
37912>>>>>        Get SyncDDOs to bAllow        
37913>>>>>         
37913>>>>>        Broadcast Recursive Send UpdateDataBinding
37915>>>>>        
37915>>>>>        Set pbSynchronizing to bOrigSync
37916>>>>>    End_Procedure
37917>>>>>    
37917>>>>>    Procedure Call_PostSync
37919>>>>>        Send StoreDDOStates
37920>>>>>    End_Procedure
37921>>>>>    
37921>>>>>    
37921>>>>>    Procedure RegisterDDOStructure
37923>>>>>        // Override to do nothing
37923>>>>>    End_Procedure
37924>>>>>    
37924>>>>>    // Called by cWebDDOSync_mixin
37924>>>>>    Function IsDynamicConstraints Returns Boolean
37926>>>>>        Function_Return False
37927>>>>>    End_Function
37928>>>>>
37928>>>>>    // Override to not check parent, widgets should be encapsulated - we don't want to bleed the view's DDO's into them
37928>>>>>    Function Server Returns Integer
37930>>>>>        Integer hoServer
37930>>>>>        Get private_Server to hoServer
37931>>>>>//        If (hoServer = 0) Begin
37931>>>>>//            Function_Return (Locate_Server(parent(Self)))
37931>>>>>//        End
37931>>>>>        Function_Return hoServer
37932>>>>>    End_Function  
37933>>>>>
37933>>>>>    Function Widget Returns Handle 
37935>>>>>        Function_Return Self
37936>>>>>    End_Function
37937>>>>>
37937>>>>>    Procedure End_Construct_Object
37939>>>>>        Forward Send End_Construct_Object
37941>>>>>        
37941>>>>>        Send Attach_Deo_To_Server                       // Attach the DEO to the server DDs
37942>>>>>        Broadcast Recursive Send Attach_Deo_To_Server   // Make Child DEO's attach to their server
37944>>>>>        Broadcast Recursive Set In_Use_State to True    // Set each DDO's In_Use_State
37946>>>>>        Send WriteDDOCache                              // Store a cache of the DDO objects
37947>>>>>    End_Procedure
37948>>>>>   
37948>>>>>End_Class
37949>>>
37949>>>Composite oDummineDniValidation is a cWebWidget
37953>>>
37953>>>    // Your DDO structure will go here
37953>>>
37953>>>    Set piDefaultColSpan to 4
37954>>>    Set piDefaultRowSpan to 5
37955>>>    
37955>>>    Set psWidgetName to "oDummineDniValidation"
37956>>>    Set psWidgetCaption to "DummineDniValidation"
37957>>>    Set psWidgetDescription to "My custom widget"
37958>>>
37958>>>    Set piColumnCount to 12
37959>>>        
37959>>>End_Composite
37961>    Use DummieDni.wo
Including file: DummieDni.wo    (C:\DataFlex Projects\Centros\AppSrc\DummieDni.wo)
37961>>>Use cWebView.pkg
37961>>>Use cWebPanel.pkg
37961>>>Use cWebForm.pkg 
37961>>>Use cWebButton.pkg
37961>>>Use cWebSpacer.pkg
37961>>>Use cWebLabel.pkg
37961>>>
37961>>>Use zDniValidation.pkg
Including file: zDniValidation.pkg    (C:\DataFlex Projects\Centros\AppSrc\zDniValidation.pkg)
37961>>>>>Function zDniValidation  String sDni  String ByRef sMsg Returns Boolean
37964>>>>>    String sLetter sNumber 
37964>>>>>    Boolean bRet
37964>>>>>    
37964>>>>>    Get zNieComprobation sDni to sDni
37965>>>>>    
37965>>>>>    Get zDniNumberComprobation sDni (&sMsg) to bRet
37966>>>>>    If (not (bRet)) Function_Return False
37969>>>>>    
37969>>>>>    Move (Mid(sDni, 1 , 9)) to   sLetter
37970>>>>>    Move (Mid(sDni, 8, 1 ))  to sNumber
37971>>>>>    Move (Uppercase(sLetter)) to sLetter
37972>>>>>
37972>>>>>   
37972>>>>>   Get zDniLetterComprobation sLetter sNumber (&sMsg) to bRet
37973>>>>>   If (not (bRet)) Function_Return False
37976>>>>>  Function_Return True
37977>>>>>      
37977>>>>>End_Function
37978>>>>>
37978>>>>>Function zNieComprobation String sDni Returns String 
37981>>>>>
37981>>>>>    
37981>>>>>    
37981>>>>>       If (Uppercase(sDni) matches "X????????" )  Begin
37983>>>>>        Move ("0" + Mid (sDni, 8, 2)) to sDni
37984>>>>>        Function_Return (sDni)
37985>>>>>    End
37985>>>>>>
37985>>>>>       If (Uppercase(sDni) matches "Y????????" )  Begin
37987>>>>>       
37987>>>>>        Move ("1" + Mid (sDni, 8, 2)) to sDni
37988>>>>>        Function_Return sDni
37989>>>>>    End
37989>>>>>>
37989>>>>>     If (Uppercase(sDni) matches "Z????????" )  Begin
37991>>>>>       
37991>>>>>        Move ("2" + Mid (sDni, 8, 2)) to sDni
37992>>>>>        Function_Return sDni
37993>>>>>    End
37993>>>>>>
37993>>>>>   
37993>>>>>    Function_Return sDni
37994>>>>>End_Function
37995>>>>>
37995>>>>>
37995>>>>>
37995>>>>>Function zDniNumberComprobation String sDni String ByRef sMSg Returns Boolean
37998>>>>>    String[] aRet
37999>>>>>    Object oDnipattern is a cRegEx
38001>>>>>        Set psExpression to "^[0-9]{8}[a-zA-Z]{1}+$"
38002>>>>>    End_Object
38003>>>>>    Get MatchAll of oDnipattern (sDni) to aRet
38004>>>>>    If (SizeOfArray(aRet) = 1) Begin
38006>>>>>        Function_Return True
38007>>>>>    End
38007>>>>>>
38007>>>>>    
38007>>>>>    Move "Porfavor Introduzca un formato de dni valido 8 digitos y una letra" to sMSg
38008>>>>>    Function_Return False
38009>>>>>End_Function
38010>>>>>
38010>>>>>Function zDniLetterComprobation String sLetter String sNumber String ByRef sMsg Returns Boolean
38013>>>>>    String sValidationLeter sTrueLetter
38013>>>>>    Move "TRWAGMYFPDXBNJZSQVHLCKE" to sValidationLeter
38014>>>>>
38014>>>>>    
38014>>>>>    Move (Mid(sValidationLeter, 1 , (Mod(Integer(sNumber), 23) + 1))) to sTrueLetter
38015>>>>>    If (sTrueLetter = sLetter ) Begin
38017>>>>>        Function_Return True
38018>>>>>    End
38018>>>>>>
38018>>>>>    Move "La letra no es coincidene con los numeros" to sMsg
38019>>>>>    Function_Return False
38020>>>>>    
38020>>>>>End_Function
38021>>>
38021>>>Object oDummieDni is a cWebView
38023>>>    Set piWidth to 700
38024>>>    Set psCaption to "DummieDni"
38025>>>
38025>>>    // Your DDO structure will go here
38025>>>
38025>>>    Object oWebMainPanel is a cWebPanel
38027>>>        Set piColumnCount to 12
38028>>>        
38028>>>        // place controls here
38028>>>        // Your view will grow as controls are added
38028>>>        
38028>>>        Object oForm_Dni is a cWebForm
38030>>>            Set piColumnSpan to 0
38031>>>            Set psLabel to "introduzca DNI"
38032>>>        End_Object
38033>>>
38033>>>        Object oWebLabel_sMsg_Err is a cWebLabel
38035>>>            Set psCaption to ""
38036>>>            Set piColumnIndex to 0
38037>>>            Set piColumnSpan to 12
38038>>>        End_Object
38039>>>
38039>>>        Object oWebSpacer1 is a cWebSpacer
38041>>>            Set piColumnSpan to 12
38042>>>        End_Object
38043>>>
38043>>>        Object oValidationButton is a cWebButton
38045>>>            Set piColumnSpan to 6
38046>>>            Set psCaption to "Validar"
38047>>>            Set piColumnIndex to 3
38048>>>        
38048>>>            Procedure OnClick
38051>>>                Boolean bRet
38051>>>                String sDni sMsg
38051>>>                WebGet psValue of oForm_Dni to sDni
38052>>>                Get zDniValidation sDni (&sMsg) to bRet
38053>>>                
38053>>>                WebSet psBackgroundColor of oForm_Dni to "#ffffff"
38054>>>                WebSet psCaption of oWebLabel_sMsg_Err to ""
38055>>>                
38055>>>                If (bRet) Begin
38057>>>                    WebSet psBackgroundColor of oForm_Dni to "green"
38058>>>                    
38058>>>                End
38058>>>>
38058>>>                If (not (bRet)) Begin
38060>>>                    WebSet psBackgroundColor of oForm_Dni to "red"
38061>>>                    WebSet psCaption of oWebLabel_sMsg_Err to sMsg
38062>>>                End
38062>>>>
38062>>>                
38062>>>                
38062>>>            End_Procedure
38063>>>        End_Object
38064>>>        
38064>>>    End_Object 
38065>>>
38065>>>End_Object
38066>    Use ZoomAllStudents.wo
Including file: ZoomAllStudents.wo    (C:\DataFlex Projects\Centros\AppSrc\ZoomAllStudents.wo)
38066>>>// C:\DataFlex Projects\Centros\AppSrc\ZoomAllStudents.wo
38066>>>// Todos los estudiantes
38066>>>//
38066>>>
38066>>>Use cWebView.pkg
38066>>>Use cWebPanel.pkg
38066>>>Use cWebMenuGroup.pkg
38066>>>Use cWebMenuItem.pkg
38066>>>Use cWebForm.pkg
38066>>>Use cWebTabContainer.pkg
38066>>>Use cWebTabPage.pkg
38066>>>Use cWebCheckBox.pkg
38066>>>
38066>>>Use cCentrosDataDictionary.dd
Including file: cCentrosDataDictionary.dd    (C:\DataFlex Projects\Centros\DDSrc\cCentrosDataDictionary.dd)
38066>>>>>Use DataDict.pkg
38066>>>>>
38066>>>>>Open Centros
Including file: Centros.fd    (C:\DataFlex Projects\Centros\DDSrc\Centros.fd)
38068>>>>>Open Alumnos
Including file: Alumnos.fd    (C:\DataFlex Projects\Centros\DDSrc\Alumnos.fd)
38070>>>>>
38070>>>>>Class cCentrosDataDictionary is a DataDictionary
38071>>>>>    
38071>>>>>    Procedure Construct_Object
38073>>>>>        Forward Send Construct_Object
38075>>>>>        Set Main_File to Centros.File_Number
38076>>>>>
38076>>>>>        Set Add_Client_File to Alumnos.File_Number
38077>>>>>
38077>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
38078>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
38079>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
38080>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
38081>>>>>
38081>>>>>        Set Field_Option Field Centros.Id DD_DISPLAYONLY to True
38082>>>>>        Set Key_Field_State Field Centros.Id to True
38083>>>>>
38083>>>>>        Set Field_Mask_Type Field Centros.CodigoPostal to Mask_Numeric_Window
38084>>>>>        
38084>>>>>
38084>>>>>
38084>>>>>        Set Field_Mask_Type Field Centros.FechaCreacionRegistro to Mask_DateTime_Window
38085>>>>>        Set Field_Option Field Centros.FechaCreacionRegistro DD_NOENTER to True
38086>>>>>
38086>>>>>        Set Field_Mask_Type Field Centros.FechaUltimaModificacion to Mask_DateTime_Window
38087>>>>>        Set Field_Option Field Centros.FechaUltimaModificacion DD_NOENTER to True
38088>>>>>       
38088>>>>>         
38088>>>>>
38088>>>>>    End_Procedure
38089>>>>>
38089>>>>>    Procedure Field_Defaults
38091>>>>>         DateTime dtCurrentDateTime
38091>>>>>         
38091>>>>>         Move (CurrentDateTime()) to dtCurrentDateTime
38092>>>>>       
38092>>>>>        Forward Send Field_Defaults
38094>>>>>        Set Field_Changed_Value Field Centros.FechaCreacionRegistro to  dtCurrentDateTime 
38095>>>>>        Set Field_Changed_Value Field Centros.FechaUltimaModificacion to  dtCurrentDateTime 
38096>>>>>        
38096>>>>>    End_Procedure
38097>>>>>    
38097>>>>>     Procedure Update
38099>>>>>        Forward Send Update
38101>>>>>        Move  (CurrentDateTime())  to Centros.FechaUltimaModificacion
38102>>>>>    End_Procedure
38103>>>>>
38103>>>>>
38103>>>>>End_Class
38104>>>Use cAlumnosDataDictionary.dd
Including file: cAlumnosDataDictionary.dd    (C:\DataFlex Projects\Centros\DDSrc\cAlumnosDataDictionary.dd)
38104>>>>>Use DataDict.pkg
38104>>>>>
38104>>>>>Use zEmailValidation.pkg
38104>>>>>Use zDniValidation.pkg
38104>>>>>Use zTelefonoiValidation.pkg
Including file: zTelefonoiValidation.pkg    (C:\DataFlex Projects\Centros\AppSrc\zTelefonoiValidation.pkg)
38104>>>>>>>Use cJsonHttpTransfer.pkg
Including file: cJsonHttpTransfer.pkg    (C:\Program Files\DataFlex 25.0\Pkg\cJsonHttpTransfer.pkg)
38104>>>>>>>>>// DF JSON internet transfer class definitions.
38104>>>>>>>>>Use cHttpTransfer.pkg
Including file: cHttpTransfer.pkg    (C:\Program Files\DataFlex 25.0\Pkg\cHttpTransfer.pkg)
38104>>>>>>>>>>>Use VDFBase.pkg
38104>>>>>>>>>>>Use GlobalFunctionsProcedures.pkg
38104>>>>>>>>>>>
38104>>>>>>>>>>>External_Function WinAPI_HttpQueryInfo "HttpQueryInfoW" WinInet.dll ;    Handle hRequest ;    DWord dwInfoLevel ;    Pointer lpBuffer ;    Pointer lpdwBufferLength ;    Pointer lpdwIndex ;    Returns Integer
38105>>>>>>>>>>>
38105>>>>>>>>>>>/*BOOL InternetSetOptionW(  [in] HINTERNET hInternet,  [in] DWORD     dwOption,  [in] LPVOID    lpBuffer,  [in] DWORD     dwBufferLength);*/
38105>>>>>>>>>>>External_Function WinAPI_InternetSetOption "InternetSetOptionW" WinInet.dll ;    Handle hInternet ;    DWord dwOption ;    Pointer lpBuffer ;    DWord dwBufferLength ;    Returns Integer
38106>>>>>>>>>>>
38106>>>>>>>>>>>/*BOOL InternetQueryOptionW(  [in]      HINTERNET hInternet,  [in]      DWORD     dwOption,  [out]     LPVOID    lpBuffer,  [in, out] LPDWORD   lpdwBufferLength);*/
38106>>>>>>>>>>>External_Function WinAPI_InternetQueryOption "InternetQueryOptionW" WinInet.dll ;    Handle hInternet ;    DWord dwOption ;    Pointer lpBuffer ;    Pointer lpdwBufferLength ;    Returns Integer
38107>>>>>>>>>>>
38107>>>>>>>>>>>
38107>>>>>>>>>>>//  Available options for dwInfoLevel of WinAPI_HttpQueryInfo
38107>>>>>>>>>>>Define HTTP_QUERY_MIME_VERSION                for 0
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_TYPE                for 1
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_TRANSFER_ENCODING   for 2
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_ID                  for 3
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_DESCRIPTION         for 4
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_LENGTH              for 5
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_LANGUAGE            for 6
38107>>>>>>>>>>>Define HTTP_QUERY_ALLOW                       for 7
38107>>>>>>>>>>>Define HTTP_QUERY_PUBLIC                      for 8
38107>>>>>>>>>>>Define HTTP_QUERY_DATE                        for 9
38107>>>>>>>>>>>Define HTTP_QUERY_EXPIRES                     for 10
38107>>>>>>>>>>>Define HTTP_QUERY_LAST_MODIFIED               for 11
38107>>>>>>>>>>>Define HTTP_QUERY_MESSAGE_ID                  for 12
38107>>>>>>>>>>>Define HTTP_QUERY_URI                         for 13
38107>>>>>>>>>>>Define HTTP_QUERY_DERIVED_FROM                for 14
38107>>>>>>>>>>>Define HTTP_QUERY_COST                        for 15
38107>>>>>>>>>>>Define HTTP_QUERY_LINK                        for 16
38107>>>>>>>>>>>Define HTTP_QUERY_PRAGMA                      for 17
38107>>>>>>>>>>>Define HTTP_QUERY_VERSION                     for 18  // special: part of status line
38107>>>>>>>>>>>Define HTTP_QUERY_STATUS_CODE                 for 19  // special: part of status line
38107>>>>>>>>>>>Define HTTP_QUERY_STATUS_TEXT                 for 20  // special: part of status line
38107>>>>>>>>>>>Define HTTP_QUERY_RAW_HEADERS                 for 21  // special: all headers as ASCIIZ
38107>>>>>>>>>>>Define HTTP_QUERY_RAW_HEADERS_CRLF            for 22  // special: all headers
38107>>>>>>>>>>>Define HTTP_QUERY_CONNECTION                  for 23
38107>>>>>>>>>>>Define HTTP_QUERY_ACCEPT                      for 24
38107>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_CHARSET              for 25
38107>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_ENCODING             for 26
38107>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_LANGUAGE             for 27
38107>>>>>>>>>>>Define HTTP_QUERY_AUTHORIZATION               for 28
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_ENCODING            for 29
38107>>>>>>>>>>>Define HTTP_QUERY_FORWARDED                   for 30
38107>>>>>>>>>>>Define HTTP_QUERY_FROM                        for 31
38107>>>>>>>>>>>Define HTTP_QUERY_IF_MODIFIED_SINCE           for 32
38107>>>>>>>>>>>Define HTTP_QUERY_LOCATION                    for 33
38107>>>>>>>>>>>Define HTTP_QUERY_ORIG_URI                    for 34
38107>>>>>>>>>>>Define HTTP_QUERY_REFERER                     for 35
38107>>>>>>>>>>>Define HTTP_QUERY_RETRY_AFTER                 for 36
38107>>>>>>>>>>>Define HTTP_QUERY_SERVER                      for 37
38107>>>>>>>>>>>Define HTTP_QUERY_TITLE                       for 38
38107>>>>>>>>>>>Define HTTP_QUERY_USER_AGENT                  for 39
38107>>>>>>>>>>>Define HTTP_QUERY_WWW_AUTHENTICATE            for 40
38107>>>>>>>>>>>Define HTTP_QUERY_PROXY_AUTHENTICATE          for 41
38107>>>>>>>>>>>Define HTTP_QUERY_ACCEPT_RANGES               for 42
38107>>>>>>>>>>>Define HTTP_QUERY_SET_COOKIE                  for 43
38107>>>>>>>>>>>Define HTTP_QUERY_COOKIE                      for 44
38107>>>>>>>>>>>Define HTTP_QUERY_REQUEST_METHOD              for 45  // special: GET/POST etc.
38107>>>>>>>>>>>Define HTTP_QUERY_REFRESH                     for 46
38107>>>>>>>>>>>Define HTTP_QUERY_CONTENT_DISPOSITION         for 47
38107>>>>>>>>>>>
38107>>>>>>>>>>>
38107>>>>>>>>>>>Class cHttpTransfer is a cBaseHttpTransfer
38108>>>>>>>>>>>    
38108>>>>>>>>>>>    Function HttpPostRequest String sFilePath String sData Integer bDataIsFile Returns Integer
38110>>>>>>>>>>>        Integer bStat
38110>>>>>>>>>>>        Get HttpPostAddrRequest sFilePath (AddressOf(sData)) (SizeOfString(sData)) bDataIsfile to bStat
38111>>>>>>>>>>>        Function_Return bStat
38112>>>>>>>>>>>    End_Function
38113>>>>>>>>>>>    
38113>>>>>>>>>>>    // This event is triggered from the runtime. It now uses UChar arrays as the data might 
38113>>>>>>>>>>>    // not be a valid string (it can be any binary data). It still calls the original event for 
38113>>>>>>>>>>>    // backwards compatibility.
38113>>>>>>>>>>>    Procedure OnDataReceivedUC String sContentType UChar[] ucData
38115>>>>>>>>>>>        Send OnDataReceived sContentType (UCharArrayToString(ucData))
38116>>>>>>>>>>>    End_Procedure
38117>>>>>>>>>>>    
38117>>>>>>>>>>>    // Only use this event if you know for sure the data is a string and make sure piBufferSize is
38117>>>>>>>>>>>    // smaller than the argument size.
38117>>>>>>>>>>>    Procedure OnDataReceived String sContentType String sData
38119>>>>>>>>>>>        
38119>>>>>>>>>>>    End_Procedure
38120>>>>>>>>>>>    
38120>>>>>>>>>>>    // Called just before the request is sent. Use this message to set options to the RequestHandle if nessecary.
38120>>>>>>>>>>>    Procedure OnPreSendRequest 
38122>>>>>>>>>>>        
38122>>>>>>>>>>>    End_Procedure
38123>>>>>>>>>>>    
38123>>>>>>>>>>>    Function HttpPutRequest String sFilePath String sData Integer bDataIsFile Returns Integer
38125>>>>>>>>>>>        Integer bStat
38125>>>>>>>>>>>        Get HttpPutAddrRequest sFilePath (AddressOf(sData)) (SizeOfString(sData)) bDataIsfile to bStat
38126>>>>>>>>>>>        Function_Return bStat
38127>>>>>>>>>>>    End_Function
38128>>>>>>>>>>>    
38128>>>>>>>>>>>    // Retrieve header information associated with the previous request.
38128>>>>>>>>>>>    Function QueryInfo DWord dwInfoLevel Returns String
38130>>>>>>>>>>>        Handle hRequestHandle
38130>>>>>>>>>>>        WString wResult
38130>>>>>>>>>>>        Integer iBufferSize iRes iVoid
38130>>>>>>>>>>>
38130>>>>>>>>>>>        Get RequestHandle to hRequestHandle
38131>>>>>>>>>>>        
38131>>>>>>>>>>>        If (hRequestHandle) Begin
38133>>>>>>>>>>>            Move 200 to iBufferSize
38134>>>>>>>>>>>            Move (Repeat(" ", iBufferSize)) to wResult
38135>>>>>>>>>>>            Move (WinAPI_HttpQueryInfo(hRequestHandle, dwInfoLevel, AddressOf(wResult), AddressOf(iBufferSize), 0)) to iRes
38136>>>>>>>>>>>            
38136>>>>>>>>>>>            If (not(iRes) and GetLastError() = 122) Begin //  Insufficient buffersize, retry with received iBufferSize value
38138>>>>>>>>>>>                Increment iBufferSize      
38139>>>>>>>>>>>                
38139>>>>>>>>>>>                Move (Repeat(" ", iBufferSize)) to wResult
38140>>>>>>>>>>>                Move (WinAPI_HttpQueryInfo(hRequestHandle, dwInfoLevel, AddressOf(wResult), AddressOf(iBufferSize), 0)) to iRes  
38141>>>>>>>>>>>            End
38141>>>>>>>>>>>>
38141>>>>>>>>>>>            
38141>>>>>>>>>>>            If (not(iRes)) Begin
38143>>>>>>>>>>>                Move (ShowLastError()) to iVoid
38144>>>>>>>>>>>            End
38144>>>>>>>>>>>>
38144>>>>>>>>>>>        End
38144>>>>>>>>>>>>
38144>>>>>>>>>>>        
38144>>>>>>>>>>>        Function_Return (CString(wResult))
38145>>>>>>>>>>>    End_Function
38146>>>>>>>>>>>    
38146>>>>>>>>>>>    // Returns the statustext returned by the previous request.
38146>>>>>>>>>>>    Function ResponseStatusText Returns String
38148>>>>>>>>>>>        String sStatus
38148>>>>>>>>>>>        
38148>>>>>>>>>>>        Get QueryInfo HTTP_QUERY_STATUS_TEXT to sStatus
38149>>>>>>>>>>>        
38149>>>>>>>>>>>        Function_Return sStatus
38150>>>>>>>>>>>    End_Function
38151>>>>>>>>>>>    
38151>>>>>>>>>>>End_Class
38152>>>>>>>>>Use cJsonObject.pkg
38152>>>>>>>>>Use GlobalFunctionsProcedures.pkg
38152>>>>>>>>>
38152>>>>>>>>>// these define the three characters that define BOM for utf8.
38152>>>>>>>>>// These serve no purpos and are rarely used. If used they must be removed
38152>>>>>>>>>Define C_BOM1 for |CI$EF
38152>>>>>>>>>Define C_BOM2 for |CI$BB
38152>>>>>>>>>Define C_BOM3 for |CI$BF
38152>>>>>>>>>
38152>>>>>>>>>
38152>>>>>>>>>
38152>>>>>>>>>// define JSON transfer status codes used by peJsonTransferStatus
38152>>>>>>>>>Enum_List
38152>>>>>>>>>    Define jtsOk                 // ok
38152>>>>>>>>>    Define jtsHttpRequestFailed  // the post/get http request returned an error
38152>>>>>>>>>    Define jtsInvalidContentType // response content type not JSON
38152>>>>>>>>>    Define jtsNotJson            // return value not JSON (could not load in object)
38152>>>>>>>>>    Define jtsError              // unspecified return error
38152>>>>>>>>>End_Enum_List
38152>>>>>>>>>
38152>>>>>>>>>
38152>>>>>>>>>Class cJsonHttpTransfer is a cHttpTransfer
38153>>>>>>>>>    
38153>>>>>>>>>    Procedure Construct_Object
38155>>>>>>>>>        Forward Send Construct_object
38157>>>>>>>>>        
38157>>>>>>>>>        Property String  psContentTypeSent "application/json; charset=utf-8"     // default content type for posted data
38158>>>>>>>>>        
38158>>>>>>>>>        Property Boolean pbClearHeaders      True         // should headers always be cleared after a post
38159>>>>>>>>>        
38159>>>>>>>>>        Property UChar[] pucDataReceived                 // maintained by object
38160>>>>>>>>>        
38160>>>>>>>>>        Property String  psContentTypeReceived ''         // content type received
38161>>>>>>>>>        
38161>>>>>>>>>        Property String  psJsonParseError ''              // Set if response JSON can't be parsed
38162>>>>>>>>>        
38162>>>>>>>>>        Property String  psContentTypeExpected 'application/json' // content type received - expected value should be contained in here.
38163>>>>>>>>>        
38163>>>>>>>>>        Property Integer peJsonTransferStatus jtsOk
38164>>>>>>>>>        
38164>>>>>>>>>        // if true, the http post does not happend and whatever was posted is just returned as a copy.
38164>>>>>>>>>        // Good for internal Testing
38164>>>>>>>>>        Property Boolean pbPostLoopTest False
38165>>>>>>>>>        
38165>>>>>>>>>        Set piBufferSize to -1  //  No chunking needed
38166>>>>>>>>>        Set psAcceptTypes to "application/json"
38167>>>>>>>>>    End_Procedure
38168>>>>>>>>>    
38168>>>>>>>>>    // private helper function. Convert data passed by pointer to an JSON document.
38168>>>>>>>>>    // return 0, if error
38168>>>>>>>>>    //
38168>>>>>>>>>    Function UCharDatatoJson UChar[] ucJson Returns Handle
38170>>>>>>>>>        Integer iVoid bOk
38170>>>>>>>>>        Handle hoJson
38170>>>>>>>>>        String sError
38170>>>>>>>>>        Get Create of Desktop (RefClass(cJsonObject)) to hoJson
38171>>>>>>>>>        Get ParseUTF8 of hoJson ucJson to bOk
38172>>>>>>>>>        If not bOk Begin
38174>>>>>>>>>            // store the JSON parse error info
38174>>>>>>>>>            Get psParseError of hoJson to sError
38175>>>>>>>>>            Set psJsonParseError to sError
38176>>>>>>>>>            Send Destroy of hoJson
38177>>>>>>>>>            Move 0 to hoJson
38178>>>>>>>>>        End
38178>>>>>>>>>>
38178>>>>>>>>>        Function_Return hoJson
38179>>>>>>>>>    End_Function
38180>>>>>>>>>    
38180>>>>>>>>>    // Clear pucDataReceived
38180>>>>>>>>>    Procedure ClearDataReceived
38182>>>>>>>>>        UChar[] ucEmpty
38183>>>>>>>>>        
38183>>>>>>>>>        Set pucDataReceived to ucEmpty
38184>>>>>>>>>        Set psJsonParseError to ''
38185>>>>>>>>>    End_Procedure
38186>>>>>>>>>    
38186>>>>>>>>>    // augment to release any memor
38186>>>>>>>>>    Procedure Destroy_Object
38188>>>>>>>>>        Send ClearDataReceived
38189>>>>>>>>>        Forward Send Destroy_object
38191>>>>>>>>>    End_Procedure
38192>>>>>>>>>    
38192>>>>>>>>>    // called during http transfer. Take passed data and append to pucDataReceived.
38192>>>>>>>>>    // If new transfer save contenttype.
38192>>>>>>>>>    Procedure OnDataReceivedUC String sContentType UChar[] ucData
38194>>>>>>>>>        UChar[] ucBuffer
38195>>>>>>>>>        Integer iDataLen
38195>>>>>>>>>        
38195>>>>>>>>>        Move (SizeOfArray(ucData)) to iDataLen
38196>>>>>>>>>        
38196>>>>>>>>>        If (iDataLen > 0) Begin
38198>>>>>>>>>            Get pucDataReceived to ucBuffer
38199>>>>>>>>>            If (SizeOfArray(ucBuffer) > 0) Begin
38201>>>>>>>>>                Set pucDataReceived to (AppendArray(ucBuffer, ucData))
38202>>>>>>>>>            End
38202>>>>>>>>>>
38202>>>>>>>>>            Else Begin
38203>>>>>>>>>                Set psContentTypeReceived to sContentType
38204>>>>>>>>>                
38204>>>>>>>>>                If (iDataLen > 3 and ucData[0]=C_BOM1 and ucData[1]=C_BOM2 and ucData[2]=C_BOM3) Begin
38206>>>>>>>>>                    Set pucDataReceived to (CopyArray(ucData, 3, iDataLen - 1))
38207>>>>>>>>>                End
38207>>>>>>>>>>
38207>>>>>>>>>                Else Begin
38208>>>>>>>>>                    Set pucDataReceived to ucData
38209>>>>>>>>>                End
38209>>>>>>>>>>
38209>>>>>>>>>            End
38209>>>>>>>>>>
38209>>>>>>>>>        End
38209>>>>>>>>>>
38209>>>>>>>>>    End_Procedure
38210>>>>>>>>>    
38210>>>>>>>>>    Function LoopDataBack UChar[] ucData Returns Boolean
38212>>>>>>>>>        Pointer pInData
38212>>>>>>>>>        Boolean bOk
38212>>>>>>>>>        
38212>>>>>>>>>        Set pucDataReceived to ucData
38213>>>>>>>>>        Set psContentTypeReceived to (psContentTypeExpected(Self))
38214>>>>>>>>>        
38214>>>>>>>>>        Function_Return True
38215>>>>>>>>>    End_Function
38216>>>>>>>>>    
38216>>>>>>>>>    
38216>>>>>>>>>    Function HttpVerbJsonAddrExec String sHost String sFilePath Pointer pJson Integer iLen String sVerb  Returns Boolean
38218>>>>>>>>>        Boolean bOk
38218>>>>>>>>>        Integer iError
38218>>>>>>>>>        String sContentType
38218>>>>>>>>>        
38218>>>>>>>>>        Send ClearDataReceived  // this should be zero, just in case it is not
38219>>>>>>>>>        Set psRemoteHost to sHost
38220>>>>>>>>>        
38220>>>>>>>>>        Get psContentTypeSent to sContentType
38221>>>>>>>>>        If (iLen > 0 and sContentType <> "") Begin
38223>>>>>>>>>            Get AddHeader "Content-Type" sContentType to bok
38224>>>>>>>>>        End
38224>>>>>>>>>>
38224>>>>>>>>>        Get HttpVerbAddrRequest sFilePath pJson iLen False sVerb to bOK
38225>>>>>>>>>        
38225>>>>>>>>>        // You need to clear headers between posts. If you need to set custom headers you should
38225>>>>>>>>>        // set pbClearHeaders to false and then manually send ClearHeaders and AddHeaders in your code
38225>>>>>>>>>        If (pbClearHeaders(Self)) ;            Send ClearHeaders
38228>>>>>>>>>        
38228>>>>>>>>>        
38228>>>>>>>>>        Function_Return bOk
38229>>>>>>>>>    End_Function
38230>>>>>>>>>    
38230>>>>>>>>>    // We assume but do not verify that the data in ucJson is actually UTF8 JSON
38230>>>>>>>>>    Function HttpVerbJsonUChar String sHost String sFilePath UChar[] ucJson String sVerb Returns UChar[]
38232>>>>>>>>>        Integer iLen
38232>>>>>>>>>        Boolean bOk
38232>>>>>>>>>        UChar[] ucJsonReceived
38233>>>>>>>>>        String sContentTypeReceived sContentTypeExpected
38233>>>>>>>>>        
38233>>>>>>>>>        Move (SizeOfArray(ucJson)) to iLen
38234>>>>>>>>>        
38234>>>>>>>>>        If (pbPostLoopTest(Self)) Begin
38236>>>>>>>>>            Get LoopDataBack ucJson to bOk
38237>>>>>>>>>        End
38237>>>>>>>>>>
38237>>>>>>>>>        Else Begin
38238>>>>>>>>>            Get HttpVerbJsonAddrExec sHost sFilePath (AddressOf(ucJson)) iLen sVerb to bOk
38239>>>>>>>>>        End
38239>>>>>>>>>>
38239>>>>>>>>>                
38239>>>>>>>>>        If bOk Begin
38241>>>>>>>>>            Set peJsonTransferStatus to jtsOk
38242>>>>>>>>>            Get pucDataReceived to ucJsonReceived
38243>>>>>>>>>            
38243>>>>>>>>>            If (SizeOfArray(ucJsonReceived) > 0) Begin
38245>>>>>>>>>                // we have data, check that the content type is ok. This is as far
38245>>>>>>>>>                // as we can go here.
38245>>>>>>>>>                Get psContentTypeReceived to sContentTypeReceived
38246>>>>>>>>>                Get psContentTypeExpected to sContentTypeExpected
38247>>>>>>>>>                // If contentType expected is empty, we allow anything
38247>>>>>>>>>                If (sContentTypeExpected<>"" and pos(lowercase(sContentTypeExpected),lowercase(sContentTypeReceived))=0) Begin
38249>>>>>>>>>                    Set peJsonTransferStatus to jtsInvalidContentType
38250>>>>>>>>>                End
38250>>>>>>>>>>
38250>>>>>>>>>            End
38250>>>>>>>>>>
38250>>>>>>>>>        End
38250>>>>>>>>>>
38250>>>>>>>>>        Else Begin
38251>>>>>>>>>            Set peJsonTransferStatus to jtsHttpRequestFailed
38252>>>>>>>>>        End
38252>>>>>>>>>>
38252>>>>>>>>>                
38252>>>>>>>>>        Function_Return ucJsonReceived
38253>>>>>>>>>    End_Function
38254>>>>>>>>>    
38254>>>>>>>>>    // Generic HTTP Request - it is passed the Verb. Used by all other http requests
38254>>>>>>>>>    Function HttpVerbJson  String sHost String sFilePath Handle  hoJsonRequest String sVerb Boolean ByRef bOk Returns Handle
38256>>>>>>>>>        UChar[] ucJsonRequest ucJsonResponse
38258>>>>>>>>>        Handle hoJsonResponse
38258>>>>>>>>>        Integer eStat
38258>>>>>>>>>        
38258>>>>>>>>>        If (hoJsonRequest<>0) Begin
38260>>>>>>>>>            Get StringifyUTF8 of hoJsonRequest to ucJsonRequest
38261>>>>>>>>>        End
38261>>>>>>>>>>
38261>>>>>>>>>        
38261>>>>>>>>>        Get HttpVerbJsonUChar sHost sFilePath ucJsonRequest sVerb to ucJsonResponse
38262>>>>>>>>>        
38262>>>>>>>>>        If (SizeOfArray(ucJsonResponse)) Begin
38264>>>>>>>>>            Get UCharDatatoJson ucJsonResponse to hoJsonResponse
38265>>>>>>>>>            If (hoJsonResponse=0) Begin
38267>>>>>>>>>                // this indicates that data was returned but it could not be loaded as Json
38267>>>>>>>>>                Set peJsonTransferStatus to jtsNotJson
38268>>>>>>>>>                // note bad data is still is ppDataReceived (might be useful for debugging)
38268>>>>>>>>>            End
38268>>>>>>>>>>
38268>>>>>>>>>        End
38268>>>>>>>>>>
38268>>>>>>>>>        
<<<<<<< HEAD
38268>>>>>>>>>        // return Ok status by reference
38268>>>>>>>>>        Get peJsonTransferStatus to eStat
38269>>>>>>>>>        Move (eStat=jtsOk) to bOk
38270>>>>>>>>>        
38270>>>>>>>>>        Function_Return hoJsonResponse
38271>>>>>>>>>    End_Function
38272>>>>>>>>>    
38272>>>>>>>>>    Function HttpPostJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38274>>>>>>>>>        Handle hoJson
38274>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "POST" (&bOk) to hoJson
38275>>>>>>>>>        Function_Return hoJson
38276>>>>>>>>>    End_Function
38277>>>>>>>>>    
38277>>>>>>>>>    Function HttpGetJson String sHost String sFilePath Boolean ByRef bOk Returns Handle
38279>>>>>>>>>        Pointer pJson
38279>>>>>>>>>        Integer iVoid iLen
38279>>>>>>>>>        Handle hoJson
38279>>>>>>>>>        Get HttpVerbJson sHost sFilePath 0 "GET" (&bOk) to hoJson
38280>>>>>>>>>        Function_Return hoJson
38281>>>>>>>>>    End_Function
38282>>>>>>>>>    
38282>>>>>>>>>    Function HttpPutJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38284>>>>>>>>>        Handle hoJson
38284>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PUT" (&bOk) to hoJson
38285>>>>>>>>>        Function_Return hoJson
38286>>>>>>>>>    End_Function
38287>>>>>>>>>    
38287>>>>>>>>>    Function HttpDeleteJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38289>>>>>>>>>        Handle hoJson
38289>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "DELETE" (&bOk) to hoJson
38290>>>>>>>>>        Function_Return hoJson
38291>>>>>>>>>    End_Function
38292>>>>>>>>>    
38292>>>>>>>>>    Function HttpPatchJson  String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38294>>>>>>>>>        Handle hoJson
38294>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PATCH" (&bOk) to hoJson
38295>>>>>>>>>        Function_Return hoJson
38296>>>>>>>>>    End_Function
38297>>>>>>>>>    
38297>>>>>>>>>    // After an Json xfer request this message can be sent to display an error message if one occurred.
38297>>>>>>>>>    // Normally you would first check peJsonTransferStatus to see if it is not jtsOk. If not, send
38297>>>>>>>>>    // LastError to see the error
38297>>>>>>>>>    
38297>>>>>>>>>    // return last JSON transfer error text
38297>>>>>>>>>    Function TransferErrorDescription Returns String
38299>>>>>>>>>        String  sError sJsonError
38299>>>>>>>>>        Integer eJsonTransferStatus
38299>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
38300>>>>>>>>>        Get psJsonParseError to sJsonError
38301>>>>>>>>>        Case Begin
38301>>>>>>>>>            Case (eJsonTransferStatus=jtsOk) ;                Move '' to sError
38304>>>>>>>>>            Case (eJsonTransferStatus=jtsHttpRequestFailed) ;                Move C_$HttpRequestFailed to sError
38308>>>>>>>>>            Case (eJsonTransferStatus=jtsInvalidContentType) ;                Move (SFormat(C_$InvalidContentTypeReceived,psContentTypeReceived(Self))) to sError
38312>>>>>>>>>            Case (eJsonTransferStatus=jtsNotJson) ;                Move (C_$ReceivedDataNotInJsonFormat * sJsonError) to sError
38316>>>>>>>>>            Case Else ;                Move C_$ReceivedDataIsBad to sError
38318>>>>>>>>>        Case End
38318>>>>>>>>>        Function_Return sError
38319>>>>>>>>>    End_Function
38320>>>>>>>>>    
38320>>>>>>>>>    // can be send to raise an error.
38320>>>>>>>>>    Procedure LastError
38322>>>>>>>>>        Integer eJsonTransferStatus
38322>>>>>>>>>        String sError
38322>>>>>>>>>        
38322>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
38323>>>>>>>>>        If (eJsonTransferStatus<>jtsOk) Begin
38325>>>>>>>>>            Get TransferErrorDescription to sError
38326>>>>>>>>>            Error DFERR_JSON_HTTP sError
38327>>>>>>>>>>
38327>>>>>>>>>        End
38327>>>>>>>>>>
38327>>>>>>>>>    End_Procedure
38328>>>>>>>>>    
38328>>>>>>>>>    
38328>>>>>>>>>End_Class
38329>>>>>>>
38329>>>>>>>
38329>>>>>>>Function zTelefonoValidation Boolean bUseApi String sPrefijo String sTelefono  String ByRef sMsg Returns Boolean
38332>>>>>>>    
38332>>>>>>>     Boolean bRet
38332>>>>>>>     
38332>>>>>>>     
38332>>>>>>>     Get zNumeroCorrecto sTelefono (&sMsg) to bRet
38333>>>>>>>     If (not(bRet)) Function_Return False 
38336>>>>>>>     If (bUseApi) Get zValidarConApi sTelefono sPrefijo (&sMsg) to bRet
38339>>>>>>>     If (not(bRet)) Function_Return False
38342>>>>>>>    Function_Return True
38343>>>>>>>End_Function
38344>>>>>>>
38344>>>>>>>
38344>>>>>>>
38344>>>>>>>Function zNumeroCorrecto String sTelefono String ByRef sMsg Returns Boolean
38347>>>>>>>    String[] aRet
38348>>>>>>>    Object oTelefonopattern is a cRegEx
38350>>>>>>>        Set psExpression to "^(?:[-\s])?\d(?:[\d\s-]*\d)?(?:[-\s])?$"
38351>>>>>>>    End_Object
38352>>>>>>>    Get MatchAll of oTelefonopattern (sTelefono) to aRet
38353>>>>>>>        If (SizeOfArray(aRet) = 1) Begin
38355>>>>>>>        Function_Return True
38356>>>>>>>        End
38356>>>>>>>>
38356>>>>>>>    
38356>>>>>>>    Move "Porfavor Introduzca un formato de Telefono valido" to sMsg
38357>>>>>>>    Function_Return False    
38358>>>>>>>End_Function 
38359>>>>>>>
38359>>>>>>>Function zValidarConApi String sTelefono String sPrefijo String ByRef sMsg Returns Boolean
38362>>>>>>>    
38362>>>>>>>    Handle hoJsonReceived hoHttp
38362>>>>>>>    Boolean bOk bIsNull bRet
38362>>>>>>>    String  sNum sUrl
38362>>>>>>>     
38362>>>>>>>    Move (sPrefijo + sTelefono) to sNum
38363>>>>>>>   
38363>>>>>>>    Get Create (RefClass(cJsonHttpTransfer)) to hoHttp
38364>>>>>>>    Move False to bRet
38365>>>>>>>    
38365>>>>>>>    Get HttpGetJson of hohttp ("phonevalidation.abstractapi.com") ("/v1/?api_key=713383f7f21e45b1ac4054a472e00971&phone=" + sNum) (&bOk) to hoJsonReceived
38366>>>>>>>
38366>>>>>>>
38366>>>>>>>    If (bOk = True and ResponseStatusCode(hohttp) = 200 and hoJsonReceived <> 0) Begin
38368>>>>>>>        
38368>>>>>>>        If (HasMember(hoJsonReceived,"valid"))  Begin
38370>>>>>>>            Get IsMemberOfJsonType of hoJsonReceived "valid" jsonTypeNull  to bIsNull
38371>>>>>>>            If bIsNull  Move False to bRet
38374>>>>>>>            Else Move (MemberValue(hoJsonReceived,"valid")) to bRet
38376>>>>>>>        End
38376>>>>>>>>
38376>>>>>>>    End
38376>>>>>>>>
38376>>>>>>>    Send Destroy of hohttp
38377>>>>>>>    If (not(bRet)) Move "Fallo validación API" to sMsg
38380>>>>>>>    Function_Return bRet
38381>>>>>>>End_Function
38382>>>>>>>    
38382>>>>>>>    
38382>>>>>
38382>>>>>Open Alumnos
38384>>>>>Open Centros
38386>>>>>
38386>>>>>Register_Function zValidateErr_StudentEmail Integer iField String sValue Returns Boolean
38386>>>>>Register_Function zValidateErr_StudentDni Integer iField Returns Boolean
38386>>>>>Register_Function zValidateErr_StudentTelefono Integer iField Returns Boolean
38386>>>>>
38386>>>>>Object oGender is a DescriptionValidationTable
38388>>>>>    Procedure Fill_List
38391>>>>>        Forward Send Fill_List
38393>>>>>        Send Add_Table_Value "H" "Hombre"
38394>>>>>        Send Add_Table_Value "M" "Mujer"
38395>>>>>        Send Add_Table_Value "N" "Prefiero no responder"
38396>>>>>        Send Add_Table_Value "O" "Otro"
38397>>>>>    End_Procedure
38398>>>>>End_Object
38399>>>>>
38399>>>>>
38399>>>>>
38399>>>>>
38399>>>>>Class cAlumnosDataDictionary is a DataDictionary
38400>>>>>    
38400>>>>>    Procedure Construct_Object
38402>>>>>        Forward Send Construct_Object
38404>>>>>        Set Main_File to Alumnos.File_Number
38405>>>>>
38405>>>>>        Set Add_Server_File to Centros.File_Number
38406>>>>>
38406>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
38407>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
38408>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
38409>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
38410>>>>>
38410>>>>>        Set Field_Option Field Alumnos.AlumnosId DD_REQUIRED to True
38411>>>>>        Set Key_Field_State Field Alumnos.AlumnosId to True
38412>>>>>        Set Field_Option Field Alumnos.AlumnosId DD_DISPLAYONLY to True
38413>>>>>
38413>>>>>        Set Field_Class_Name Field Alumnos.Sexo to "Combo"
38414>>>>>        Set Field_Value_Table Field Alumnos.Sexo to oGender
38415>>>>>
38415>>>>>        Set Field_Mask_Type Field Alumnos.CodigoPostal to Mask_Numeric_Window
38416>>>>>        
38416>>>>>
38416>>>>>
38416>>>>>        Set Field_Mask_Type Field Alumnos.FechaCreacionRegistro to Mask_DateTime_Window
38417>>>>>        Set Field_Option Field Alumnos.FechaCreacionRegistro DD_NOENTER to True
38418>>>>>
38418>>>>>        Set Field_Mask_Type Field Alumnos.FechaUltimaModificacion to Mask_DateTime_Window
38419>>>>>        Set Field_Option Field Alumnos.FechaUltimaModificacion DD_NOENTER to True
38420>>>>>        
38420>>>>>        Set Field_Validate_msg Field Alumnos.Email to get_zValidateErr_StudentEmail
38421>>>>>        Set Field_Validate_msg Field Alumnos.Dni to get_zValidateErr_StudentDni
38422>>>>>        Set Field_Validate_msg Field Alumnos.NumeroTelefono to get_zValidateErr_StudentTelefono
38423>>>>>
38423>>>>>    End_Procedure
38424>>>>>
38424>>>>>
38424>>>>>
38424>>>>>    Function zValidateErr_StudentDni Integer iField Returns Boolean
38426>>>>>        Boolean bret
38426>>>>>        String sDni sMsg
38426>>>>>        Get Field_Current_Value Field Alumnos.Dni to sDni
38427>>>>>        Get zDniValidation sDni (&sMsg) to bret
38428>>>>>        If (not (bret)) Begin
38430>>>>>                Send Data_set_error iField DFERR_OPERATOR sMsg
38431>>>>>        Function_Return True        
38432>>>>>        End
38432>>>>>>
38432>>>>>        Function_Return False
38433>>>>>    End_Function
38434>>>>>
38434>>>>>
38434>>>>>    Function zValidateErr_StudentEmail Integer iField String sValue Returns Boolean
38436>>>>>        Boolean bret
38436>>>>>        String  sMsg
38436>>>>>//        Get Field_Current_Value Field Alumnos.Email to sEmail
38436>>>>>        Get zValidarEmail sValue (&sMsg) to bret
=======
38268>>>>>>>>>        Function_Return hoJsonResponse
38269>>>>>>>>>    End_Function
38270>>>>>>>>>    
38270>>>>>>>>>    Function HttpPostJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38272>>>>>>>>>        Handle hoJson
38272>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "POST" (&bOk) to hoJson
38273>>>>>>>>>        Function_Return hoJson
38274>>>>>>>>>    End_Function
38275>>>>>>>>>    
38275>>>>>>>>>    Function HttpGetJson String sHost String sFilePath Boolean ByRef bOk Returns Handle
38277>>>>>>>>>        Pointer pJson
38277>>>>>>>>>        Integer iVoid iLen
38277>>>>>>>>>        Handle hoJson
38277>>>>>>>>>        Get HttpVerbJson sHost sFilePath 0 "GET" (&bOk) to hoJson
38278>>>>>>>>>        Function_Return hoJson
38279>>>>>>>>>    End_Function
38280>>>>>>>>>    
38280>>>>>>>>>    Function HttpPutJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38282>>>>>>>>>        Handle hoJson
38282>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PUT" (&bOk) to hoJson
38283>>>>>>>>>        Function_Return hoJson
38284>>>>>>>>>    End_Function
38285>>>>>>>>>    
38285>>>>>>>>>    Function HttpDeleteJson String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38287>>>>>>>>>        Handle hoJson
38287>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "DELETE" (&bOk) to hoJson
38288>>>>>>>>>        Function_Return hoJson
38289>>>>>>>>>    End_Function
38290>>>>>>>>>    
38290>>>>>>>>>    Function HttpPatchJson  String sHost String sFilePath Handle hoJsonRequest Boolean ByRef bOk Returns Handle
38292>>>>>>>>>        Handle hoJson
38292>>>>>>>>>        Get HttpVerbJson sHost sFilePath hoJsonRequest "PATCH" (&bOk) to hoJson
38293>>>>>>>>>        Function_Return hoJson
38294>>>>>>>>>    End_Function
38295>>>>>>>>>    
38295>>>>>>>>>    // After an Json xfer request this message can be sent to display an error message if one occurred.
38295>>>>>>>>>    // Normally you would first check peJsonTransferStatus to see if it is not jtsOk. If not, send
38295>>>>>>>>>    // LastError to see the error
38295>>>>>>>>>    
38295>>>>>>>>>    // return last JSON transfer error text
38295>>>>>>>>>    Function TransferErrorDescription Returns String
38297>>>>>>>>>        String  sError sJsonError
38297>>>>>>>>>        Integer eJsonTransferStatus
38297>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
38298>>>>>>>>>        Get psJsonParseError to sJsonError
38299>>>>>>>>>        Case Begin
38299>>>>>>>>>            Case (eJsonTransferStatus=jtsOk) ;                Move '' to sError
38302>>>>>>>>>            Case (eJsonTransferStatus=jtsHttpRequestFailed) ;                Move C_$HttpRequestFailed to sError
38306>>>>>>>>>            Case (eJsonTransferStatus=jtsInvalidContentType) ;                Move (SFormat(C_$InvalidContentTypeReceived,psContentTypeReceived(Self))) to sError
38310>>>>>>>>>            Case (eJsonTransferStatus=jtsNotJson) ;                Move (C_$ReceivedDataNotInJsonFormat * sJsonError) to sError
38314>>>>>>>>>            Case Else ;                Move C_$ReceivedDataIsBad to sError
38316>>>>>>>>>        Case End
38316>>>>>>>>>        Function_Return sError
38317>>>>>>>>>    End_Function
38318>>>>>>>>>    
38318>>>>>>>>>    // can be send to raise an error.
38318>>>>>>>>>    Procedure LastError
38320>>>>>>>>>        Integer eJsonTransferStatus
38320>>>>>>>>>        String sError
38320>>>>>>>>>        
38320>>>>>>>>>        Get peJsonTransferStatus to eJsonTransferStatus
38321>>>>>>>>>        If (eJsonTransferStatus<>jtsOk) Begin
38323>>>>>>>>>            Get TransferErrorDescription to sError
38324>>>>>>>>>            Error DFERR_JSON_HTTP sError
38325>>>>>>>>>>
38325>>>>>>>>>        End
38325>>>>>>>>>>
38325>>>>>>>>>    End_Procedure
38326>>>>>>>>>    
38326>>>>>>>>>    
38326>>>>>>>>>End_Class
38327>>>>>>>
38327>>>>>>>
38327>>>>>>>Function zTelefonoValidation Boolean bUseApi String sPrefijo String sTelefono  String ByRef sMsg Returns Boolean
38330>>>>>>>     Boolean bRet    
38330>>>>>>>//-------------------LLamada a Validacion basica-------------------       
38330>>>>>>>     Get zNumeroCorrecto sTelefono (&sMsg) to bRet
38331>>>>>>>     If (not(bRet)) Function_Return False 
38334>>>>>>>//-------------------LLamada a Api-------------------     
38334>>>>>>>     If (bUseApi) Get zValidarConApi sTelefono sPrefijo (&sMsg) to bRet
38337>>>>>>>     If (not(bRet)) Function_Return False
38340>>>>>>>//-------------------Si todo ha salido bien retorna true-------------------      
38340>>>>>>>    Function_Return True
38341>>>>>>>End_Function
38342>>>>>>>
38342>>>>>>>Function zNumeroCorrecto String sTelefono String ByRef sMsg Returns Boolean
38345>>>>>>>    String[] aRet
38346>>>>>>>//-------------------Expresion regular para cualquier formato internacional de telefono-------------------  
38346>>>>>>>    Object oTelefonopattern is a cRegEx
38348>>>>>>>        Set psExpression to "^(?:[-\s])?\d(?:[\d\s-]*\d)?(?:[-\s])?$"
38349>>>>>>>    End_Object
38350>>>>>>>    Get MatchAll of oTelefonopattern (sTelefono) to aRet
38351>>>>>>>        If (SizeOfArray(aRet) = 1) Begin
38353>>>>>>>            Function_Return True
38354>>>>>>>        End
38354>>>>>>>>
38354>>>>>>>    Move "Porfavor Introduzca un formato de Telefono valido" to sMsg
38355>>>>>>>    Function_Return False    
38356>>>>>>>End_Function 
38357>>>>>>>
38357>>>>>>>Function zValidarConApi String sTelefono String sPrefijo String ByRef sMsg Returns Boolean    
38360>>>>>>>    Handle hoJsonReceived hoHttp
38360>>>>>>>    Boolean bOk bIsNull bRet
38360>>>>>>>    String  sNum sUrl
38360>>>>>>>     // ----
38360>>>>>>>    Move (sPrefijo + sTelefono) to sNum   
38361>>>>>>>    Get Create (RefClass(cJsonHttpTransfer)) to hoHttp
38362>>>>>>>    Move False to bRet
38363>>>>>>>//-------------------LLamada a Api-------------------      
38363>>>>>>>    Get HttpGetJson of hohttp ("phonevalidation.abstractapi.com") ("/v1/?api_key=713383f7f21e45b1ac4054a472e00971&phone=" + sNum) (&bOk) to hoJsonReceived
38364>>>>>>>//-------------------Lanza un mensaje de error si la llamada a fallado-------------------      
38364>>>>>>>    If (not(bOk)) Move "La llamada a la Api ha fallado" to sMsg
38367>>>>>>>//-------------------LLamada a Api-------------------  
38367>>>>>>>    If (bOk = True and ResponseStatusCode(hohttp) = 200 and hoJsonReceived <> 0) Begin        
38369>>>>>>>        If (HasMember(hoJsonReceived,"valid"))  Begin
38371>>>>>>>            Get IsMemberOfJsonType of hoJsonReceived "valid" jsonTypeNull  to bIsNull
38372>>>>>>>            If bIsNull  Move False to bRet
38375>>>>>>>            Else Move (MemberValue(hoJsonReceived,"valid")) to bRet
38377>>>>>>>        End
38377>>>>>>>>
38377>>>>>>>//-------------------Lanza un mensaje de error si No existe ese número-------------------          
38377>>>>>>>        If (not(bRet)) Move "No es valido el dni" to sMsg
38380>>>>>>>    End
38380>>>>>>>>
38380>>>>>>>    Send Destroy of hohttp
38381>>>>>>>    Function_Return bRet
38382>>>>>>>End_Function
38383>>>>>>>    
38383>>>>>>>    
38383>>>>>
38383>>>>>Open Alumnos
38385>>>>>Open Centros
38387>>>>>
38387>>>>>Register_Function zValidateErr_StudentEmail Integer iField Returns Boolean
38387>>>>>Register_Function zValidateErr_StudentDni Integer iField Returns Boolean
38387>>>>>Register_Function zValidateErr_StudentTelefono Integer iField Returns Boolean
38387>>>>>
38387>>>>>Object oGender is a DescriptionValidationTable
38389>>>>>    Procedure Fill_List
38392>>>>>        Forward Send Fill_List
38394>>>>>        Send Add_Table_Value "H" "Hombre"
38395>>>>>        Send Add_Table_Value "M" "Mujer"
38396>>>>>        Send Add_Table_Value "N" "Prefiero no responder"
38397>>>>>        Send Add_Table_Value "O" "Otro"
38398>>>>>    End_Procedure
38399>>>>>End_Object
38400>>>>>
38400>>>>>
38400>>>>>
38400>>>>>
38400>>>>>Class cAlumnosDataDictionary is a DataDictionary
38401>>>>>    
38401>>>>>    Procedure Construct_Object
38403>>>>>        Forward Send Construct_Object
38405>>>>>        Set Main_File to Alumnos.File_Number
38406>>>>>
38406>>>>>        Set Add_Server_File to Centros.File_Number
38407>>>>>
38407>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
38408>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
38409>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
38410>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
38411>>>>>
38411>>>>>        Set Field_Option Field Alumnos.AlumnosId DD_REQUIRED to True
38412>>>>>
38412>>>>>        Set Field_Class_Name Field Alumnos.Sexo to "Combo"
38413>>>>>        Set Field_Value_Table Field Alumnos.Sexo to oGender
38414>>>>>
38414>>>>>        Set Field_Mask_Type Field Alumnos.CodigoPostal to Mask_Numeric_Window
38415>>>>>        
38415>>>>>
38415>>>>>
38415>>>>>        Set Field_Mask_Type Field Alumnos.FechaCreacionRegistro to Mask_DateTime_Window
38416>>>>>        Set Field_Option Field Alumnos.FechaCreacionRegistro DD_NOENTER to True
38417>>>>>
38417>>>>>        Set Field_Mask_Type Field Alumnos.FechaUltimaModificacion to Mask_DateTime_Window
38418>>>>>        Set Field_Option Field Alumnos.FechaUltimaModificacion DD_NOENTER to True
38419>>>>>//-------------------llamada a validaciones propias-------------------        
38419>>>>>        Set Field_Validate_msg Field Alumnos.Email to get_zValidateErr_StudentEmail
38420>>>>>        Set Field_Validate_msg Field Alumnos.Dni to get_zValidateErr_StudentDni
38421>>>>>        Set Field_Validate_msg Field Alumnos.NumeroTelefono to get_zValidateErr_StudentTelefono
38422>>>>>
38422>>>>>    End_Procedure
38423>>>>>
38423>>>>>
38423>>>>>
38423>>>>>    Function zValidateErr_StudentDni Integer iField Returns Boolean
38425>>>>>        Boolean bret
38425>>>>>        String sDni sMsg
38425>>>>>        Get Field_Current_Value Field Alumnos.Dni to sDni
38426>>>>>        Get zDniValidation sDni (&sMsg) to bret
38427>>>>>        If (not (bret)) Begin
38429>>>>>                Send Data_set_error iField DFERR_OPERATOR sMsg
38430>>>>>        Function_Return True        
38431>>>>>        End
38431>>>>>>
38431>>>>>        Function_Return False
38432>>>>>    End_Function
38433>>>>>
38433>>>>>
38433>>>>>    Function zValidateErr_StudentEmail Integer iField Returns Boolean
38435>>>>>        Boolean bret
38435>>>>>        String sEmail sMsg
38435>>>>>        Get Field_Current_Value Field Alumnos.Email to sEmail
38436>>>>>        Get zValidarEmail sEmail (&sMsg) to bret
>>>>>>> main
38437>>>>>        If (not (bret)) Begin
38439>>>>>                Send Data_set_error iField DFERR_OPERATOR sMsg
38440>>>>>        Function_Return True        
38441>>>>>        End
38441>>>>>>
38441>>>>>        Function_Return False
38442>>>>>    End_Function
38443>>>>>                
38443>>>>>
38443>>>>>    Function zValidateErr_StudentTelefono Integer iField Returns Boolean
38445>>>>>        Boolean bret
38445>>>>>        String sPrefijo sTelefono sMsg
38445>>>>>        Get Field_Current_Value Field Alumnos.NumeroTelefono to sTelefono
38446>>>>>        Get Field_Current_Value Field Alumnos.PrefijoTlfn to sPrefijo
<<<<<<< HEAD
38447>>>>>        Get zTelefonoValidation False sPrefijo sTelefono (&sMsg) to bret
=======
38447>>>>>        Get zTelefonoValidation True sPrefijo sTelefono (&sMsg) to bret
>>>>>>> main
38448>>>>>        If (not (bret)) Begin
38450>>>>>                Send Data_set_error iField DFERR_OPERATOR sMsg
38451>>>>>        Function_Return True        
38452>>>>>        End
38452>>>>>>
38452>>>>>        Function_Return False
38453>>>>>    End_Function            
38454>>>>>  
38454>>>>>  
38454>>>>>    Procedure Field_Defaults
38456>>>>>         DateTime dtCurrentDateTime
38456>>>>>         
38456>>>>>         Move (CurrentDateTime()) to dtCurrentDateTime
38457>>>>>       
38457>>>>>        Forward Send Field_Defaults
38459>>>>>        Set Field_Changed_Value Field Alumnos.FechaCreacionRegistro to  dtCurrentDateTime
38460>>>>>        Set Field_Changed_Value Field Alumnos.FechaUltimaModificacion to  dtCurrentDateTime 
38461>>>>>    End_Procedure
38462>>>>>
<<<<<<< HEAD
38462>>>>>      Procedure Update
=======
38462>>>>>    Procedure Update
>>>>>>> main
38464>>>>>        Forward Send Update
38466>>>>>        Move  (CurrentDateTime())  to Alumnos.FechaUltimaModificacion
38467>>>>>    End_Procedure
38468>>>>>
38468>>>>>
<<<<<<< HEAD
38468>>>>>
=======
>>>>>>> main
38468>>>>>End_Class
38469>>>Use cWebCombo.pkg
38469>>>
38469>>>
38469>>>Object oZoomAllStudents is a cWebView
38471>>>    Set piColumnCount to 12
38472>>>    Set psCaption to "Todos los estudiantes"
38473>>>    Set peWebViewStyle to wvsDrilldown
38474>>>    Set peViewType to vtZoom
38475>>>    Set pbShowCaption to False
38476>>>    Set Verify_Save_Msg to 0
38477>>>    Set piMaxWidth to 1024
38478>>>
38478>>>    Object oCentros_DD is a cCentrosDataDictionary
38480>>>    End_Object 
38481>>>
38481>>>    Object oAlumnos_DD is a cAlumnosDataDictionary
38483>>>        Set DDO_Server To oCentros_DD
38484>>>    End_Object 
38485>>>
38485>>>    Set Main_DD To oAlumnos_DD
38486>>>    Set Server  To oAlumnos_DD
38487>>>
<<<<<<< HEAD
=======
38487>>>
>>>>>>> main
38487>>>    Object oWebMainPanel is a cWebPanel
38489>>>        Set piColumnCount to 12
38490>>>        WebSetResponsive piColumnCount rmMobile to 4
38491>>>
38491>>>        Object oAlumnosNombre is a cWebForm
38493>>>            Entry_Item Alumnos.Nombre
38494>>>            Set piColumnSpan to 6
38495>>>            Set piColumnIndex to 0
38496>>>            Set peLabelPosition to lpTop
38497>>>            Set psLabel to "Nombre"
38498>>>        End_Object 
38499>>>
38499>>>        Object oAlumnosApellidos is a cWebForm
38501>>>            Entry_Item Alumnos.Apellidos
38502>>>            Set piColumnSpan to 6
38503>>>            Set piColumnIndex to 6
38504>>>            Set peLabelPosition to lpTop
38505>>>            Set psLabel to "Apellidos"
38506>>>        End_Object 
38507>>>
38507>>>        Object oWebTabContainer is a cWebTabContainer
38509>>>            Set pbFillHeight to True
38510>>>            Set piColumnSpan to 12
38511>>>            Set pbShowLabel to False
38512>>>
38512>>>            Object oPage1 is a cWebTabPage
38514>>>                Set piColumnCount to 12
38515>>>                Set psCaption to "información Personal"
38516>>>
38516>>>                Object oAlumnoPrefijoTlfn is a cWebCombo
38518>>>                    Entry_Item Alumnos.PrefijoTlfn
38519>>>                    Set psLabel to "Prefijo"
38520>>>                    Set piColumnIndex to 0
38521>>>                    
38521>>>                    
38521>>>                    Set pbServerOnChange to True
38522>>>                    Set peLabelPosition to lpTop
38523>>>                    Set piColumnSpan to 2
38524>>>                    
38524>>>                    String[][] aResultsPrefijosPaises
38524>>>
38524>>>                    Procedure OnFill
38527>>>                    Integer inumPaises i
38527>>>                        Forward Send OnFill
38529>>>                        
38529>>>                        Get SQLExecDirect of ghoSQLExecutor @SQL" SELECT PrefijoTlfn, ISO3                            FROM Centros.dbo.Country;" to aResultsPrefijosPaises
38530>>>                            
38530>>>                        Move (SizeOfArray(aResultsPrefijosPaises)) to inumPaises    
38531>>>                        If (not(Err)) Begin
38533>>>                             For i from 0 to (inumPaises - 1)
38539>>>>
38539>>>                                Send AddComboItem aResultsPrefijosPaises[i][0] (aResultsPrefijosPaises[i][1] + "(" + aResultsPrefijosPaises[i][0] + ")")
38540>>>                             Loop
38541>>>>
38541>>>                        End
38541>>>>
38541>>>                        
38541>>>                    End_Procedure 
38542>>>                End_Object
38543>>>                WebSetResponsive piColumnCount rmMobile to 4
38544>>>
38544>>>                Object oAlumnosNumeroTelefono is a cWebForm
38546>>>                    Entry_Item Alumnos.NumeroTelefono
38547>>>                    Set piColumnSpan to 3
38548>>>                    Set piColumnIndex to 2
38549>>>                    Set peLabelPosition to lpTop
38550>>>                    Set psLabel to "Numero Telefono"
38551>>>                End_Object 
38552>>>
38552>>>                Object oAlumnosDni is a cWebForm
38554>>>                    Entry_Item Alumnos.Dni
38555>>>                    Set piColumnSpan to 2
38556>>>                    Set piColumnIndex to 5
38557>>>                    Set peLabelPosition to lpTop
38558>>>                    Set psLabel to "Dni"
38559>>>                End_Object 
38560>>>
38560>>>                Object oAlumnosSexo is a cWebCombo
38562>>>                    Entry_Item Alumnos.Sexo
38563>>>                    Set piColumnSpan to 3
38564>>>                    Set piColumnIndex to 8
38565>>>                    Set psCaption to "Sexo"
38566>>>                    Set pbShowLabel to True
38567>>>                    Set peLabelPosition to lpTop
38568>>>                    Set psLabel to "Género"
38569>>>                End_Object 
38570>>>
38570>>>                Object oAlumnosEmail is a cWebForm
38572>>>             
38572>>>                    Entry_Item Alumnos.Email
38573>>>                    Set piColumnSpan to 12
38574>>>                    Set piColumnIndex to 0
38575>>>                    Set peLabelPosition to lpTop
38576>>>                    Set psLabel to "Email"
38577>>>                End_Object 
38578>>>            End_Object 
38579>>>
38579>>>            Object oPage2 is a cWebTabPage
38581>>>                Set piColumnCount to 12
38582>>>                Set psCaption to "Ubicación"
38583>>>                WebSetResponsive piColumnCount rmMobile to 4
38584>>>
38584>>>                Object oAlumnosPais is a cWebCombo
38586>>>                    Entry_Item Alumnos.Pais
38587>>>                    Set piColumnSpan to 3
38588>>>                    Set piColumnIndex to 0
38589>>>                    Set peLabelPosition to lpTop
38590>>>                    Set psLabel to "Pais"
38591>>>                    
38591>>>                    Set pbServerOnChange to True
38592>>>                    
38592>>>                    String[][] aResultsPaises
38592>>>
38592>>>                    Procedure OnFill
38595>>>                    Integer inumPaises i
38595>>>                        Forward Send OnFill
38597>>>                        
38597>>>                        Get SQLExecDirect of ghoSQLExecutor @SQL" SELECT id, Nombre                            FROM Centros.dbo.Country;" to aResultsPaises
38598>>>                            
38598>>>                        Move (SizeOfArray(aResultsPaises[0])) to inumPaises    
38599>>>                        If (not(Err)) Begin
38601>>>                             For i from 0 to (inumPaises - 1)
38607>>>>
38607>>>                                Send AddComboItem aResultsPaises[i][0] aResultsPaises[i][1] 
38608>>>                             Loop
38609>>>>
38609>>>                        End
38609>>>>
38609>>>                     
38609>>>                        
38609>>>                        
38609>>>                    End_Procedure
38610>>>
38610>>>                    Procedure OnChange String sNewValue String sOldValue
38613>>>                        Forward Send OnChange sNewValue sOldValue
38615>>>                        WebSet psValue of oAlumnosComunidadAutonoma to ""
38616>>>                        WebSet psValue of oAlumnosLocalidad to ""
38617>>>                       Send Refill of oAlumnosComunidadAutonoma 
38618>>>                    End_Procedure
38619>>>
38619>>>                    
38619>>>                    
38619>>>
38619>>>
38619>>>                End_Object 
38620>>>
38620>>>                Object oAlumnosComunidadAutonoma is a cWebCombo
38622>>>                    Entry_Item Alumnos.ComunidadAutonoma
38623>>>                    Set piColumnSpan to 3
38624>>>                    Set piColumnIndex to 4
38625>>>                    Set peLabelPosition to lpTop
38626>>>                    Set psLabel to "Comunidad Autonoma"
38627>>>                    Set pbServerOnChange to True
38628>>>                    
38628>>>                    
38628>>>                    Procedure OnFill
38631>>>                        Forward Send OnFill
38633>>>                        String  sPaisElegido sSQL
38633>>>                        Integer  inumComunidadAutonoma  i
38633>>>                        String[][]  aResults
38634>>>                 
38634>>>                        WebGet psValue of oAlumnosPais to sPaisElegido                   
38635>>>                        If (sPaisElegido = "") Procedure_Return
38638>>>                        Move ("SELECT S.id AS ComunidadAutonomaId, S.Nombre AS ComunidadAutonoma FROM Centros.dbo.State S WHERE S.CountryId = '" + sPaisElegido + "';") to sSQL 
38639>>>                        Get SQLExecDirect of ghoSQLExecutor sSQL to aResults
38640>>>                                                
38640>>>                        If (not(Err)) Begin
38642>>>                            Move (SizeOfArray(aResults)) to inumComunidadAutonoma    
38643>>>                            For i from 0 to (inumComunidadAutonoma - 1)
38649>>>>
38649>>>                                Send AddComboItem (aResults[i][0]) (aResults[i][1])
38650>>>                            Loop
38651>>>>
38651>>>                        End                        
38651>>>>
38651>>>                    End_Procedure
38652>>>                    
38652>>>                    Procedure OnChange String sNewValue String sOldValue
38655>>>                        Forward Send OnChange sNewValue sOldValue
38657>>>                        Send Refill of oAlumnosLocalidad 
38658>>>                        WebSet psValue of oAlumnosLocalidad to ""
38659>>>                    End_Procedure    
38660>>>                    
38660>>>                End_Object 
38661>>>
38661>>>                Object oAlumnosLocalidad is a cWebCombo
38663>>>                    Entry_Item Alumnos.Localidad
38664>>>                    Set piColumnSpan to 4
38665>>>                    Set piColumnIndex to 8
38666>>>                    Set peLabelPosition to lpTop
38667>>>                    Set psLabel to "Localidad"
38668>>>                    
38668>>>                    Procedure OnFill
38671>>>                        Forward Send OnFill
38673>>>                        String  sComunidadAutonomaElegida sSQL
38673>>>                        Integer  inumProvincia  i
38673>>>                        String[][]  aResults
38674>>>                 
38674>>>                        WebGet psValue of oAlumnosComunidadAutonoma to sComunidadAutonomaElegida                   
38675>>>                        If (sComunidadAutonomaElegida = "") Procedure_Return
38678>>>                        Move ("SELECT P.id AS ProvinciaId, P.Nombre AS Provincia FROM Centros.dbo.Province P WHERE P.StateId = '" + sComunidadAutonomaElegida + "';") to sSQL 
38679>>>                        Get SQLExecDirect of ghoSQLExecutor sSQL to aResults
38680>>>                                                
38680>>>                        If (not(Err)) Begin
38682>>>                            Move (SizeOfArray(aResults)) to inumProvincia    
38683>>>                            For i from 0 to (inumProvincia - 1)
38689>>>>
38689>>>                                Send AddComboItem (aResults[i][0]) (aResults[i][1])
38690>>>                            Loop
38691>>>>
38691>>>                        End                        
38691>>>>
38691>>>                    End_Procedure
38692>>>                    
38692>>>                    
38692>>>                End_Object 
38693>>>
38693>>>                Object oAlumnosDirreccion is a cWebForm
38695>>>                    Entry_Item Alumnos.Dirreccion
38696>>>                    Set piColumnSpan to 7
38697>>>                    Set piColumnIndex to 0
38698>>>                    Set peLabelPosition to lpTop
38699>>>                    Set psLabel to "Dirreccion"
38700>>>                End_Object 
38701>>>
38701>>>                Object oAlumnosCodigoPostal is a cWebForm
38703>>>                    Entry_Item Alumnos.CodigoPostal
38704>>>                    Set piColumnSpan to 2
38705>>>                    Set piColumnIndex to 8
38706>>>                    Set peLabelPosition to lpTop
38707>>>                    Set psLabel to "Codigo Postal"
38708>>>                End_Object 
38709>>>
38709>>>                Object oCentrosId is a cWebForm
38711>>>                    Entry_Item Centros.Id
38712>>>                    Set piColumnSpan to 2
38713>>>                    Set piColumnIndex to 10
38714>>>                    Set peLabelPosition to lpTop
38715>>>                    Set psLabel to "id del Centro "
38716>>>                    Set pbPromptButton to True
38717>>>
38717>>>// ToDo: Fill in the from-child parent Select view object name for navigate forward
38717>>>                    WebRegisterPath ntNavigateForward oSelectCentro
38723>>>
38723>>>                    Procedure OnPrompt
<<<<<<< HEAD
38726>>>                        Send NavigatePath                       
=======
38726>>>                        Send NavigatePath
38727>>>                        
38727>>>                        
38727>>>                        
>>>>>>> main
38727>>>                    End_Procedure
38728>>>                End_Object 
38729>>>            End_Object 
38730>>>
38730>>>            Object oPage3 is a cWebTabPage
38732>>>                Set piColumnCount to 12
38733>>>                Set psCaption to "Registros"
38734>>>                WebSetResponsive piColumnCount rmMobile to 4
38735>>>
38735>>>                Object oAlumnosFechaCreacionRegistro is a cWebForm
38737>>>                    Entry_Item Alumnos.FechaCreacionRegistro
38738>>>                    Set piColumnSpan to 3
38739>>>                    Set piColumnIndex to 0
38740>>>                    Set peLabelPosition to lpTop
38741>>>                    Set psLabel to "Fecha de creacion del registro"
38742>>>                End_Object 
38743>>>
38743>>>                Object oAlumnosFechaUltimaModificacion is a cWebForm
38745>>>                    Entry_Item Alumnos.FechaUltimaModificacion
38746>>>                    Set piColumnSpan to 3
38747>>>                    Set piColumnIndex to 3
38748>>>                    Set peLabelPosition to lpTop
38749>>>                    Set psLabel to "Fecha ultima modificacion"
38750>>>                End_Object 
38751>>>            End_Object 
38752>>>        End_Object 
38753>>>    End_Object 
38754>>>
38754>>>    Object oActionGroup is a cWebMenuGroup
38756>>>
38756>>>        Object oSaveBtn is a cWebMenuItem
38758>>>            Set psCSSClass to "WebSaveMenuItem"
38759>>>            Set psCaption to "Save"
38760>>>
38760>>>            Procedure OnClick
38763>>>                Send Request_Save
38764>>>            End_Procedure
38765>>>
38765>>>        End_Object 
38766>>>
38766>>>        Object oEditBtn is a cWebMenuItem
38768>>>            Set psCSSClass to "WebEditMenuItem"
38769>>>            Set psCaption to "Edit"
38770>>>            Procedure OnClick
38773>>>                Send ChangeEditMode True
38774>>>                Send SetActionButtons
38775>>>            End_Procedure
38776>>>
38776>>>        End_Object 
38777>>>
38777>>>        Object oDeleteBtn is a cWebMenuItem
38779>>>            Set psCSSClass to "WebDeleteMenuItem"
38780>>>            Set psCaption to "Delete"
38781>>>            Set peActionDisplay to adMenu
38782>>>
38782>>>            Procedure OnClick
38785>>>                Send Request_Delete
38786>>>            End_Procedure
38787>>>
38787>>>        End_Object 
38788>>>
38788>>>        Object oCancelChangesBtn is a cWebMenuItem
38790>>>            Set psCSSClass to "WebIcon_Refresh"
38791>>>            Set psCaption to "Clear Changes"
38792>>>            Set peActionDisplay to adMenu
38793>>>            Procedure OnClick
38796>>>                Send RefreshRecord
38797>>>            End_Procedure
38798>>>
38798>>>        End_Object 
38799>>>    End_Object 
38800>>>
38800>>>    Procedure SetActionButtons
38803>>>        tWebNavigateData NavigateData
38803>>>        tWebNavigateData NavigateData
38803>>>        Boolean bHasRecord
38803>>>        Handle hoDD
38803>>>
38803>>>        Get Server to hoDD
38804>>>        Get GetNavigateData to NavigateData
38805>>>        Get HasRecord of hoDD to bHasRecord
38806>>>
38806>>>        // let's hide all buttons and then Show the ones we want
38806>>>        WebSet pbRender of oEditBtn to False
38807>>>        WebSet pbRender of oSaveBtn to False
38808>>>        WebSet pbRender of oCancelChangesBtn to False
38809>>>        WebSet pbRender of oDeleteBtn to False
38810>>>
38810>>>        If (NavigateData.bReadOnly) Begin
38812>>>            WebSet pbRender of oEditBtn to True
38813>>>        End
38813>>>>
38813>>>        Else Begin
38814>>>            WebSet pbRender of oSaveBtn to True
38815>>>            WebSet pbRender of oCancelChangesBtn to True
38816>>>            WebSet pbRender of oDeleteBtn to bHasRecord
38817>>>        End
38817>>>>
38817>>>    End_Procedure
38818>>>
38818>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
38821>>>        // Close after save
38821>>>        Send NavigateClose Self
38822>>>    End_Procedure
38823>>>
38823>>>    // this will close the view after a delete
38823>>>    Procedure OnViewDeleted Handle hoDDO
38826>>>        Send NavigateClose Self
38827>>>    End_Procedure
38828>>>
38828>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
38831>>>        Case Begin
38831>>>            Case (NavigateData.eNavigateType = nfFromMain)
38833>>>                // If from main, this is a propbably a main file Select to Zoom.
38833>>>                Case Break
38834>>>
38834>>>            Case (NavigateData.eNavigateType = nfFromParent)
38837>>>                // If from parent, this is a constrained drill down.
38837>>>                Case Break
38838>>>
38838>>>            Case (NavigateData.eNavigateType = nfFromChild)
38841>>>                // If from child, this is a probably a parent Zoom from a Zoom.
38841>>>                Case Break
38842>>>
38842>>>            Case Else // must be nfUndefined
38842>>>
38842>>>        Case End
38842>>>
38842>>>        Send SetActionButtons
38843>>>
38843>>>    End_Procedure
38844>>>
<<<<<<< HEAD
38844>>>End_Object 
38845>    Use SelectStudents.wo
Including file: SelectStudents.wo    (C:\DataFlex Projects\Centros\AppSrc\SelectStudents.wo)
38845>>>// C:\DataFlex Projects\Centros\AppSrc\SelectStudents.wo
38845>>>// Students
38845>>>//
38845>>>
38845>>>Use cWebView.pkg
38845>>>Use cWebList.pkg
38845>>>Use cWebMenuGroup.pkg
38845>>>Use cWebMenuItem.pkg
38845>>>Use cWebColumnButton.pkg
38845>>>Use cWebColumn.pkg
38845>>>Use ZoomAllStudents.wo
38845>>>
38845>>>Use cCentrosDataDictionary.dd
38845>>>Use cAlumnosDataDictionary.dd
38845>>>
38845>>>Object oSelectStudents is a cWebView
38847>>>    Set psCaption to "Students"
38848>>>    Set peWebViewStyle to wvsDrilldown
38849>>>    Set peViewType to vtSelect
38850>>>    Set piColumnCount to 12
38851>>>    Set pbShowCaption to False
38852>>>    Set piMaxWidth to 1024
38853>>>
38853>>>    Object oCentros_DD is a cCentrosDataDictionary
38855>>>    End_Object 
38856>>>
38856>>>    Object oAlumnos_DD is a cAlumnosDataDictionary
38858>>>        Set DDO_Server To oCentros_DD
38859>>>    End_Object 
38860>>>
38860>>>    Set Main_DD To oAlumnos_DD
38861>>>    Set Server  To oAlumnos_DD
38862>>>
38862>>>
38862>>>    Object oList is a cWebList
38864>>>        Set piColumnSpan to 0
38865>>>        Set psCSSClass to "MobileList"
38866>>>        Set pbServerOnRowClick to True
38867>>>        Set pbFillHeight to True
38868>>>        Set pbShowHeader to False
38869>>>        Set piSortColumn to 0
38870>>>
38870>>>        Object oAlumnosNombre is a cWebColumn
38872>>>            Entry_Item Alumnos.Nombre
38873>>>            Set psCaption to "Alumnos.Nombre"
38874>>>            Set piWidth to 1000
38875>>>        End_Object 
38876>>>
38876>>>        Object oAlumnosApellidos is a cWebColumn
38878>>>            Entry_Item Alumnos.Apellidos
38879>>>            Set psCaption to "Alumnos.Apellidos"
38880>>>            Set piWidth to 1000
38881>>>        End_Object 
38882>>>
38882>>>        Object oDetailButton is a cWebColumnButton
38884>>>            Set psCaption to "btn"
38885>>>            Set piWidth to 45
38886>>>            Set pbFixedWidth to True
38887>>>            Set pbResizable to False
38888>>>            Set piListRowSpan to 2
38889>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
38890>>>            Set peAlign to alignRight
38891>>>
38891>>>            WebRegisterPath ntNavigateForward oZoomAllStudents
38897>>>
38897>>>            Procedure OnClick
38900>>>                Send NavigatePath 
38901>>>            End_Procedure
38902>>>
38902>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38905>>>                Move True to NavigateData.bReadOnly
38906>>>            End_Procedure
38907>>>
38907>>>        End_Object 
38908>>>
38908>>>        Object oAlumnosDni is a cWebColumn
38910>>>            Entry_Item Alumnos.Dni
38911>>>            Set psCaption to "Alumnos.Dni"
38912>>>            Set piWidth to 100
38913>>>            Set pbNewLine to True
38914>>>            Set psCSSClass to "RowDetail"
38915>>>        End_Object 
38916>>>
38916>>>        Object oCentrosId is a cWebColumn
38918>>>            Entry_Item Centros.Id
38919>>>            Set psCaption to "Alumnos.CentrosId"
38920>>>            Set piWidth to 100
38921>>>            Set psCSSClass to "RowDetail"
38922>>>        End_Object 
38923>>>
38923>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
38923>>>//        WebRegisterPath ntNavigateForward oSelectView
38923>>>//
38923>>>//        Procedure OnRowClick String sRowId
38923>>>//            tWebNavigateData NavigateData
38923>>>//            Get GetNavigateData to NavigateData
38923>>>//
38923>>>//            Case Begin
38923>>>//                Case (NavigateData.eNavigateType = nfFromParent)
38923>>>//// ToDo: Fill in the from-parent child Select view object name for navigate forward
38923>>>//Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
38923>>>////                    Send NavigateForward of oSelectView Self
38923>>>//                    Case Break
38923>>>//
38923>>>//                Case (NavigateData.eNavigateType = nfFromChild)
38923>>>//                    Send NavigateClose Self
38923>>>//                    Case Break
38923>>>//
38923>>>//                Case (NavigateData.eNavigateType = nfFromMain)
38923>>>//                    Send NavigateClose Self
38923>>>//                    Case Break
38923>>>//
38923>>>//                Case Else // must be nfUndefined
38923>>>//// ToDo: Fill in the from-parent child Select view object name for navigate forward
38923>>>//Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
38923>>>////                    Send NavigateForward of oSelectView Self
38923>>>//
38923>>>//            Case End
38923>>>//        End_Procedure
38923>>>
38923>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38926>>>            Move True to NavigateData.bReadOnly
38927>>>        End_Procedure
38928>>>
38928>>>    End_Object 
38929>>>
38929>>>    Object oActionGroup is a cWebMenuGroup
38931>>>
38931>>>        Object oSearch is a cWebMenuItem
38933>>>            Set psCSSClass to "WebPromptMenuItem"
38934>>>            Set psCaption to "Search"
38935>>>
38935>>>            Procedure OnClick
38938>>>                Send Search of oList
38939>>>            End_Procedure
38940>>>
38940>>>        End_Object 
38941>>>
38941>>>        Object oNewButton is a cWebMenuItem
38943>>>            Set psCSSClass to "WebClearMenuItem"
38944>>>            Set psCaption to "New"
38945>>>
38945>>>            WebRegisterPath ntNavigateForward oZoomAllStudents
38951>>>
38951>>>            Procedure OnClick
38954>>>                Send NavigatePath
38955>>>            End_Procedure
38956>>>
38956>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38959>>>                Move True to NavigateData.bNewRecord
38960>>>            End_Procedure
38961>>>
38961>>>        End_Object 
38962>>>    End_Object 
38963>>>
38963>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
38966>>>        WebSet pbRender of oNewButton to True
38967>>>        WebSet pbRender of oDetailButton to True
38968>>>
38968>>>        Case Begin
38968>>>            Case (NavigateData.eNavigateType = nfFromParent)
38970>>>                // If from parent, this is a constrained drill down
38970>>>                Case Break
38971>>>
38971>>>            Case (NavigateData.eNavigateType = nfFromChild)
38974>>>                // If from child, this is a probably a parent lookup from a Zoom
38974>>>                Case Break
38975>>>
38975>>>            Case (NavigateData.eNavigateType = nfFromMain)
38978>>>                // If from main, this is a probably a main-file lookup from a Zoom
38978>>>                WebSet pbRender of oDetailButton to False
38979>>>                Case Break
38980>>>
38980>>>            Case Else // must be nfUndefined
38980>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
38980>>>
38980>>>        Case End
38980>>>
38980>>>    End_Procedure
38981>>>
38981>>>
38981>>>End_Object 
38982>    Use ZoomCentros.wo
Including file: ZoomCentros.wo    (C:\DataFlex Projects\Centros\AppSrc\ZoomCentros.wo)
38982>>>// C:\DataFlex Projects\Centros\AppSrc\ZoomCentros.wo
38982>>>// Centros
38982>>>//
38982>>>
38982>>>Use cWebView.pkg
38982>>>Use cWebPanel.pkg
38982>>>Use cWebMenuGroup.pkg
38982>>>Use cWebMenuItem.pkg
38982>>>Use cWebForm.pkg
38982>>>Use cWebTabContainer.pkg
38982>>>Use cWebTabPage.pkg
38982>>>
38982>>>Use cCentrosDataDictionary.dd
38982>>>
38982>>>Object oZoomCentros is a cWebView
38984>>>    Set piColumnCount to 12
38985>>>    Set psCaption to "Centros"
38986>>>    Set peWebViewStyle to wvsDrilldown
38987>>>    Set peViewType to vtZoom
38988>>>    Set pbShowCaption to False
38989>>>    Set Verify_Save_Msg to 0
38990>>>    Set piMaxWidth to 1024
38991>>>
38991>>>    Object oCentros_DD is a cCentrosDataDictionary
38993>>>    End_Object 
38994>>>
38994>>>    Set Main_DD To oCentros_DD
38995>>>    Set Server  To oCentros_DD
38996>>>
38996>>>
38996>>>    Object oWebMainPanel is a cWebPanel
38998>>>        Set piColumnCount to 12
38999>>>        WebSetResponsive piColumnCount rmMobile to 4
39000>>>
39000>>>        Object oCentrosNombre is a cWebForm
39002>>>            Entry_Item Centros.Nombre
39003>>>            Set piColumnSpan to 6
39004>>>            Set piColumnIndex to 0
39005>>>            Set peLabelPosition to lpTop
39006>>>            Set psLabel to "Nombre"
39007>>>        End_Object 
39008>>>
39008>>>        Object oCentrosPsNombre is a cWebForm
39010>>>            Entry_Item Centros.PsNombre
39011>>>            Set piColumnSpan to 6
39012>>>            Set piColumnIndex to 6
39013>>>            Set peLabelPosition to lpTop
39014>>>            Set psLabel to "PsNombre"
39015>>>        End_Object 
39016>>>
39016>>>        Object oCentrosEmpresa is a cWebForm
39018>>>            Entry_Item Centros.Empresa
39019>>>            Set piColumnSpan to 8
39020>>>            Set piColumnIndex to 0
39021>>>            Set peLabelPosition to lpTop
39022>>>            Set psLabel to "Empresa"
39023>>>        End_Object 
39024>>>
39024>>>        Object oWebTabContainer is a cWebTabContainer
39026>>>            Set pbFillHeight to True
39027>>>            Set piColumnSpan to 12
39028>>>            Set pbShowLabel to False
39029>>>
39029>>>            Object oPage1 is a cWebTabPage
39031>>>                Set piColumnCount to 12
39032>>>                Set psCaption to "Ubicación"
39033>>>                WebSetResponsive piColumnCount rmMobile to 4
39034>>>
39034>>>                Object oCentrosPais is a cWebCombo
39036>>>                    Entry_Item Centros.Pais
39037>>>                    Set piColumnSpan to 4
39038>>>                    Set piColumnIndex to 0
39039>>>                    Set peLabelPosition to lpTop
39040>>>                    Set psLabel to "Pais"
39041>>>                    Set pbServerOnChange to True
39042>>>//                    
39042>>>//                    String[][] aResultsPaises
39042>>>
39042>>>                    Procedure OnFill
39045>>>                    Integer inumPaises i
39045>>>                        Forward Send OnFill
39047>>>                        
39047>>>                        Get SQLExecDirect of ghoSQLExecutor @SQL" SELECT id, Nombre                            from Centros.dbo.Country;" to aResultsPaises
39048>>>                            
39048>>>                        Move (SizeOfArray(aResultsPaises[0])) to inumPaises    
39049>>>                        If (not(Err)) Begin
39051>>>                             For i from 0 to (inumPaises - 1)
39057>>>>
39057>>>                                Send AddComboItem aResultsPaises[i][0] aResultsPaises[i][1] 
39058>>>                             Loop
39059>>>>
39059>>>                        End
39059>>>>
39059>>>                     
39059>>>                        
39059>>>                        
39059>>>                    End_Procedure
39060>>>
39060>>>                    Procedure OnChange String sNewValue String sOldValue
39063>>>                        Forward Send OnChange sNewValue sOldValue
39065>>>                        WebSet psValue of oCentrosComunidadAutonoma to ""
39066>>>                        WebSet psValue of oCentrosLocalidad to ""
39067>>>                       Send Refill of oCentrosComunidadAutonoma 
39068>>>                    End_Procedure
39069>>>
39069>>>                    
39069>>>                    
39069>>>                End_Object 
39070>>>
39070>>>                Object oCentrosComunidadAutonoma is a cWebCombo
39072>>>                    Entry_Item Centros.ComunidadAutonoma                   
39073>>>                    Set piColumnSpan to 4
39074>>>                    Set piColumnIndex to 4
39075>>>                    Set peLabelPosition to lpTop
39076>>>                    Set psLabel to "Comunidad Autonoma"
39077>>>                    Set pbServerOnChange to True
39078>>>                    
39078>>>                    
39078>>>                    Procedure OnFill
39081>>>                        Forward Send OnFill
39083>>>                        String  sPaisElegido sSQL
39083>>>                        Integer  inumComunidadAutonoma  i
39083>>>                        String[][]  aResults
39084>>>                 
39084>>>                        WebGet psValue of oCentrosPais to sPaisElegido                   
39085>>>                        If (sPaisElegido = "") Procedure_Return
39088>>>                        Move ("SELECT S.id AS ComunidadAutonomaId, S.Nombre AS ComunidadAutonoma FROM Centros.dbo.State S WHERE S.CountryId = '" + sPaisElegido + "';") to sSQL 
39089>>>                        Get SQLExecDirect of ghoSQLExecutor sSQL to aResults
39090>>>                                                
39090>>>                        If (not(Err)) Begin
39092>>>                            Move (SizeOfArray(aResults)) to inumComunidadAutonoma    
39093>>>                            For i from 0 to (inumComunidadAutonoma - 1)
39099>>>>
39099>>>                                Send AddComboItem (aResults[i][0]) (aResults[i][1])
39100>>>                            Loop
39101>>>>
39101>>>                        End                        
39101>>>>
39101>>>                    End_Procedure
39102>>>                    
39102>>>                    Procedure OnChange String sNewValue String sOldValue
39105>>>                        Forward Send OnChange sNewValue sOldValue
39107>>>                        Send Refill of oCentrosLocalidad 
39108>>>                        WebSet psValue of oCentrosLocalidad to ""
39109>>>                    End_Procedure    
39110>>>                    
39110>>>                    
39110>>>                End_Object 
39111>>>
39111>>>                Object oCentrosLocalidad is a cWebCombo
39113>>>                    Entry_Item Centros.Localidad
39114>>>                    Set piColumnSpan to 4
39115>>>                    Set piColumnIndex to 8
39116>>>                    Set peLabelPosition to lpTop
39117>>>                    Set psLabel to "Provincia"
39118>>>                    Set pbServerOnChange to True
39119>>>                    
39119>>>                    
39119>>>                    Procedure OnFill
39122>>>                        Forward Send OnFill
39124>>>                        String  sComunidadAutonomaElegida sSQL
39124>>>                        Integer  inumProvincia  i
39124>>>                        String[][]  aResults
39125>>>                 
39125>>>                        WebGet psValue of oCentrosComunidadAutonoma to sComunidadAutonomaElegida                   
39126>>>                        If (sComunidadAutonomaElegida = "") Procedure_Return
39129>>>                        Move ("SELECT P.id AS ProvinciaId, P.Nombre AS Provincia FROM Centros.dbo.Province P WHERE P.StateId = '" + sComunidadAutonomaElegida + "';") to sSQL 
39130>>>                        Get SQLExecDirect of ghoSQLExecutor sSQL to aResults
39131>>>                                                
39131>>>                        If (not(Err)) Begin
39133>>>                            Move (SizeOfArray(aResults)) to inumProvincia    
39134>>>                            For i from 0 to (inumProvincia - 1)
39140>>>>
39140>>>                                Send AddComboItem (aResults[i][0]) (aResults[i][1])
39141>>>                            Loop
39142>>>>
39142>>>                        End                        
39142>>>>
39142>>>                    End_Procedure
39143>>>            
39143>>>                End_Object 
39144>>>
39144>>>                Object oCentrosDireccion is a cWebForm
39146>>>                    Entry_Item Centros.Direccion
39147>>>                    Set piColumnSpan to 9
39148>>>                    Set piColumnIndex to 0
39149>>>                    Set peLabelPosition to lpTop
39150>>>                    Set psLabel to "Direccion"
39151>>>                End_Object 
39152>>>
39152>>>                Object oCentrosCodigoPostal is a cWebForm
39154>>>                    Entry_Item Centros.CodigoPostal
39155>>>                    Set piColumnSpan to 2
39156>>>                    Set piColumnIndex to 9
39157>>>                    Set peLabelPosition to lpTop
39158>>>                    Set psLabel to "Codigo Postal"
39159>>>                End_Object 
39160>>>            End_Object 
39161>>>
39161>>>            Object oPage2 is a cWebTabPage
39163>>>                Set piColumnCount to 12
39164>>>                Set psCaption to "Datos de Registro"
39165>>>                WebSetResponsive piColumnCount rmMobile to 4
39166>>>
39166>>>                Object oCentrosFechaCreacionRegistro is a cWebForm
39168>>>                    Entry_Item Centros.FechaCreacionRegistro
39169>>>                    Set piColumnSpan to 3
39170>>>                    Set piColumnIndex to 0
39171>>>                    Set peLabelPosition to lpTop
39172>>>                    Set psLabel to "Fecha de creacion del registro"
39173>>>                End_Object 
39174>>>
39174>>>                Object oCentrosFechaUltimaModificacion is a cWebForm
39176>>>                    Entry_Item Centros.FechaUltimaModificacion
39177>>>                    Set piColumnSpan to 3
39178>>>                    Set piColumnIndex to 3
39179>>>                    Set peLabelPosition to lpTop
39180>>>                    Set psLabel to "Fecha ultima de la modificacion"
39181>>>                End_Object 
39182>>>            End_Object 
39183>>>        End_Object 
39184>>>    End_Object 
39185>>>
39185>>>    Object oActionGroup is a cWebMenuGroup
39187>>>
39187>>>        Object oSaveBtn is a cWebMenuItem
39189>>>            Set psCSSClass to "WebSaveMenuItem"
39190>>>            Set psCaption to "Save"
39191>>>
39191>>>            Procedure OnClick
39194>>>                Send Request_Save
39195>>>            End_Procedure
39196>>>
39196>>>        End_Object 
39197>>>
39197>>>        Object oEditBtn is a cWebMenuItem
39199>>>            Set psCSSClass to "WebEditMenuItem"
39200>>>            Set psCaption to "Edit"
39201>>>            Procedure OnClick
39204>>>                Send ChangeEditMode True
39205>>>                Send SetActionButtons
39206>>>            End_Procedure
39207>>>
39207>>>        End_Object 
39208>>>
39208>>>        Object oDeleteBtn is a cWebMenuItem
39210>>>            Set psCSSClass to "WebDeleteMenuItem"
39211>>>            Set psCaption to "Delete"
39212>>>            Set peActionDisplay to adMenu
39213>>>
39213>>>            Procedure OnClick
39216>>>                Send Request_Delete
39217>>>            End_Procedure
39218>>>
39218>>>        End_Object 
39219>>>
39219>>>        Object oCancelChangesBtn is a cWebMenuItem
39221>>>            Set psCSSClass to "WebIcon_Refresh"
39222>>>            Set psCaption to "Clear Changes"
39223>>>            Set peActionDisplay to adMenu
39224>>>            Procedure OnClick
39227>>>                Send RefreshRecord
39228>>>            End_Procedure
39229>>>
39229>>>        End_Object 
39230>>>    End_Object 
39231>>>
39231>>>    Procedure SetActionButtons
39234>>>        tWebNavigateData NavigateData
39234>>>        tWebNavigateData NavigateData
39234>>>        Boolean bHasRecord
39234>>>        Handle hoDD
39234>>>
39234>>>        Get Server to hoDD
39235>>>        Get GetNavigateData to NavigateData
39236>>>        Get HasRecord of hoDD to bHasRecord
39237>>>
39237>>>        // let's hide all buttons and then Show the ones we want
39237>>>        WebSet pbRender of oEditBtn to False
39238>>>        WebSet pbRender of oSaveBtn to False
39239>>>        WebSet pbRender of oCancelChangesBtn to False
39240>>>        WebSet pbRender of oDeleteBtn to False
39241>>>
39241>>>        If (NavigateData.bReadOnly) Begin
39243>>>            WebSet pbRender of oEditBtn to True
39244>>>        End
39244>>>>
39244>>>        Else Begin
39245>>>            WebSet pbRender of oSaveBtn to True
39246>>>            WebSet pbRender of oCancelChangesBtn to True
39247>>>            WebSet pbRender of oDeleteBtn to bHasRecord
39248>>>        End
39248>>>>
39248>>>    End_Procedure
39249>>>
39249>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
39252>>>        // Close after save
39252>>>        Send NavigateClose Self
39253>>>    End_Procedure
39254>>>
39254>>>    // this will close the view after a delete
39254>>>    Procedure OnViewDeleted Handle hoDDO
39257>>>        Send NavigateClose Self
39258>>>    End_Procedure
39259>>>
39259>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
39262>>>        Case Begin
39262>>>            Case (NavigateData.eNavigateType = nfFromMain)
39264>>>                // If from main, this is a propbably a main file Select to Zoom.
39264>>>                Case Break
39265>>>
39265>>>            Case (NavigateData.eNavigateType = nfFromParent)
39268>>>                // If from parent, this is a constrained drill down.
39268>>>                Case Break
39269>>>
39269>>>            Case (NavigateData.eNavigateType = nfFromChild)
39272>>>                // If from child, this is a probably a parent Zoom from a Zoom.
39272>>>                Case Break
39273>>>
39273>>>            Case Else // must be nfUndefined
39273>>>
39273>>>        Case End
39273>>>
39273>>>        Send SetActionButtons
39274>>>
39274>>>    End_Procedure
39275>>>
39275>>>    Procedure OnBeforeShow
39278>>>        Forward Send OnBeforeShow
39280>>>        Send Refill of oCentrosComunidadAutonoma
39281>>>        Send Refill of oCentrosLocalidad
39282>>>    End_Procedure
39283>>>
39283>>>End_Object 
39284>    Use SelectCentro.wo
Including file: SelectCentro.wo    (C:\DataFlex Projects\Centros\AppSrc\SelectCentro.wo)
39284>>>// C:\DataFlex Projects\Centros\AppSrc\SelectCentro.wo
39284>>>// Centro
39284>>>//
39284>>>
39284>>>Use cWebView.pkg
39284>>>Use cWebList.pkg
39284>>>Use cWebMenuGroup.pkg
39284>>>Use cWebMenuItem.pkg
39284>>>Use cWebColumnButton.pkg
39284>>>Use cWebColumn.pkg
39284>>>Use ZoomCentros.wo
39284>>>
39284>>>Use cCentrosDataDictionary.dd
39284>>>Use cWebLabel.pkg
39284>>>
39284>>>Object oSelectCentro is a cWebView
39286>>>    Set psCaption to "Centro"
39287>>>    Set peWebViewStyle to wvsDrilldown
39288>>>    Set peViewType to vtSelect
39289>>>    Set piColumnCount to 12
39290>>>    Set pbShowCaption to False
39291>>>    Set piMaxWidth to 1024
39292>>>
39292>>>    Object oCentros_DD is a cCentrosDataDictionary
39294>>>    End_Object 
39295>>>
39295>>>    Set Main_DD To oCentros_DD
39296>>>    Set Server  To oCentros_DD
39297>>>
39297>>>
39297>>>    Object oList is a cWebList
39299>>>        Set piColumnSpan to 0
39300>>>        Set psCSSClass to "MobileList"
39301>>>        Set pbServerOnRowClick to True
39302>>>        Set pbFillHeight to True
39303>>>        Set pbShowHeader to False
39304>>>        Set piSortColumn to 0
39305>>>
39305>>> 
39305>>>        
39305>>>        Object oCentrosPsNombre is a cWebColumn
39307>>>            Entry_Item Centros.PsNombre
39308>>>            Set psCaption to "Centros.PsNombre"
39309>>>            Set psCSSClass to "RowCapion"
39310>>>            Set piWidth to 750
39311>>>        End_Object 
39312>>>    
39312>>>        Object oCentrosEmpresa is a cWebColumn
39314>>>            Entry_Item Centros.Empresa
39315>>>            Set psCaption to "Centros.Empresa"
39316>>>            Set piWidth to 188
39317>>>        End_Object 
39318>>>
39318>>>        Object oDetailButton is a cWebColumnButton
39320>>>            Set psCaption to "btn"
39321>>>            Set piWidth to 126
39322>>>            Set pbFixedWidth to True
39323>>>            Set pbResizable to False
39324>>>            Set piListRowSpan to 2
39325>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
39326>>>            Set peAlign to alignRight
39327>>>            
39327>>>
39327>>>            WebRegisterPath ntNavigateForward oZoomCentros
39333>>>
39333>>>            Procedure OnClick
39336>>>                Send NavigatePath
39337>>>            End_Procedure
39338>>>
39338>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
39341>>>                Move True to NavigateData.bReadOnly
39342>>>            End_Procedure
39343>>>
39343>>>        End_Object 
39344>>>
39344>>>        
39344>>>        Object oCentrosNombre is a cWebColumn
39346>>>            Entry_Item Centros.Nombre
39347>>>            Set psCaption to "Centros.Nombre"
39348>>>            Set piWidth to 750
39349>>>            Set psCSSClass to "RowDetail"
39350>>>            Set pbNewLine to True
39351>>>        End_Object
39352>>>
39352>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
39352>>>       WebRegisterPath ntNavigateForward oZoomCentros
39358>>>
39358>>>//        Procedure OnRowClick String sRowId
39358>>>//            tWebNavigateData NavigateData
39358>>>//            Get GetNavigateData to NavigateData
39358>>>//
39358>>>//            Case Begin
39358>>>//                Case (NavigateData.eNavigateType = nfFromParent)
39358>>>//// ToDo: Fill in the from-parent child Select view object name for navigate forward
39358>>>////Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
39358>>>////                    Send NavigateForward of oSelectView Self
39358>>>//                    Case Break
39358>>>//
39358>>>//                Case (NavigateData.eNavigateType = nfFromChild)
39358>>>//                    Send NavigateClose Self
39358>>>//                    Case Break
39358>>>//
39358>>>//                Case (NavigateData.eNavigateType = nfFromMain)
39358>>>//                    Send NavigateClose Self
39358>>>//                    Case Break
39358>>>//
39358>>>//                Case Else // must be nfUndefined
39358>>>//// ToDo: Fill in the from-parent child Select view object name for navigate forward
39358>>>////Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
39358>>>////                    Send NavigateForward of oSelectCentro Self
39358>>>//
39358>>>//            Case End
39358>>>//        End_Procedure
39358>>>
39358>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
39361>>>            Move True to NavigateData.bReadOnly
39362>>>        End_Procedure
39363>>>
39363>>>    End_Object 
39364>>>
39364>>>    Object oActionGroup is a cWebMenuGroup
39366>>>
39366>>>        Object oSearch is a cWebMenuItem
39368>>>            Set psCSSClass to "WebPromptMenuItem"
39369>>>            Set psCaption to "Search"
39370>>>
39370>>>            Procedure OnClick
39373>>>                Send Search of oList
39374>>>            End_Procedure
39375>>>
39375>>>        End_Object 
39376>>>
39376>>>        Object oNewButton is a cWebMenuItem
39378>>>            Set psCSSClass to "WebClearMenuItem"
39379>>>            Set psCaption to "New"
39380>>>
39380>>>            WebRegisterPath ntNavigateForward oZoomCentros
39386>>>
39386>>>            Procedure OnClick
39389>>>                Send NavigatePath
39390>>>            End_Procedure
39391>>>
39391>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
39394>>>                Move True to NavigateData.bNewRecord
39395>>>            End_Procedure
39396>>>
39396>>>        End_Object 
39397>>>    End_Object 
39398>>>
39398>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
39401>>>        WebSet pbRender of oNewButton to True
39402>>>        WebSet pbRender of oDetailButton to True
39403>>>
39403>>>        Case Begin
39403>>>            Case (NavigateData.eNavigateType = nfFromParent)
39405>>>                // If from parent, this is a constrained drill down
39405>>>                Case Break
39406>>>
39406>>>            Case (NavigateData.eNavigateType = nfFromChild)
39409>>>                // If from child, this is a probably a parent lookup from a Zoom
39409>>>                Case Break
39410>>>
39410>>>            Case (NavigateData.eNavigateType = nfFromMain)
39413>>>                // If from main, this is a probably a main-file lookup from a Zoom
39413>>>                WebSet pbRender of oDetailButton to False
39414>>>                Case Break
39415>>>
39415>>>            Case Else // must be nfUndefined
39415>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
39415>>>
39415>>>        Case End
39415>>>
39415>>>    End_Procedure
39416>>>
39416>>>
39416>>>End_Object 
39417>    Use DummieTelefono.wo
Including file: DummieTelefono.wo    (C:\DataFlex Projects\Centros\AppSrc\DummieTelefono.wo)
39417>>>Use cWebView.pkg
39417>>>Use cWebPanel.pkg
39417>>>Use cWebForm.pkg 
39417>>>Use cWebGroup.pkg
39417>>>Use cWebMenuGroup.pkg 
39417>>>Use cWebMenuItem.pkg
39417>>>
39417>>>Use zTelefonoiValidation.pkg
39417>>>
39417>>>Object oDummieTelefono is a cWebView
39419>>>
39419>>>    // Your DDO structure will go here
39419>>>    Set piWidth to 700
39420>>>    Set psCaption to "DummieDni"
39421>>>
39421>>>    // Your DDO structure will go here
39421>>>
39421>>>    Object oWebMainPanel is a cWebPanel
39423>>>        Set piColumnCount to 12
39424>>>
39424>>>        Object oForm_Prefijo is a cWebForm
39426>>>            Set piColumnSpan to 3
39427>>>            Set psLabel to "Prefijo telefonico"
39428>>>            Set peLabelPosition to lpTop
39429>>>        End_Object
39430>>>        
39430>>>        // place controls here
39430>>>        // Your view will grow as controls are added
39430>>>        
39430>>>        Object oForm_telefono is a cWebForm
39432>>>            Set piColumnSpan to 9
39433>>>            Set psLabel to "Introduzca el telefono"
39434>>>            Set piColumnIndex to 3
39435>>>            Set peLabelPosition to lpTop
39436>>>        End_Object
39437>>>
39437>>>        Object oWebLabel_sMsg_Err is a cWebLabel
39439>>>            Set psCaption to ""
39440>>>            Set piColumnIndex to 0
39441>>>            Set piColumnSpan to 12
39442>>>        End_Object
39443>>>
39443>>>        Object oWebSpacer1 is a cWebSpacer
39445>>>            Set piColumnSpan to 12
39446>>>        End_Object
39447>>>
39447>>>        Object oValidationButton is a cWebButton
39449>>>            Set piColumnSpan to 6
39450>>>            Set psCaption to "Validar"
39451>>>            Set piColumnIndex to 3
39452>>>        
39452>>>            Procedure OnClick
39455>>>                Boolean bRet
39455>>>                String sTelefono sPrefijo sMsg
39455>>>                WebGet psValue of oForm_telefono to sTelefono
39456>>>                WebGet psValue of oForm_Prefijo to sPrefijo
39457>>>                Get zTelefonoValidation True sPrefijo sTelefono (&sMsg) to bRet
39458>>>                
39458>>>                WebSet psBackgroundColor of oForm_telefono to "#ffffff"
39459>>>                WebSet psBackgroundColor of oForm_Prefijo to "#ffffff"
39460>>>                WebSet psCaption of oWebLabel_sMsg_Err to ""
39461>>>                
39461>>>                If (bRet) Begin
39463>>>                    WebSet psBackgroundColor of oForm_telefono to "green"
39464>>>                    WebSet psBackgroundColor of oForm_Prefijo to "green"
39465>>>                    
39465>>>                End
39465>>>>
39465>>>                If (not (bRet)) Begin
39467>>>                    WebSet psBackgroundColor of oForm_Prefijo to "red"
39468>>>                    WebSet psBackgroundColor of oForm_telefono to "red"
39469>>>                    WebSet psCaption of oWebLabel_sMsg_Err to sMsg
39470>>>                End
39470>>>>
39470>>>                
39470>>>                
39470>>>            End_Procedure
39471>>>        End_Object
39472>>>        
39472>>>    End_Object
39473>>>
39473>>>    Procedure OnBeforeShow
39476>>>        Forward Send OnBeforeShow
39478>>>        WebSet psValue of oForm_Prefijo to "+34"
39479>>>    End_Procedure
39480>>>
39480>>>End_Object
39481>    Use StatusAPI.wo
Including file: StatusAPI.wo    (C:\DataFlex Projects\Centros\AppSrc\StatusAPI.wo)
39481>>>Use cWebHttpHandler.pkg
39481>>>
39481>>>Object oSimpleHTTPHandler is a cWebHttpHandler
39483>>>    Set psPath to "Status"
39484>>>    Set psVerbs to "GET"
39485>>>
39485>>>    Procedure OnHttpGet String sPath String sAcceptType
39488>>>        String sCode 
39488>>>        Integer iStatusActual
39488>>>        Get UrlParameter "Code" to sCode
39489>>>  
39489>>>        Case Begin
39489>>>            Case (sCode = "200")
39491>>>                Send SetResponseStatus 200 "OK" 0
39492>>>            Case Break
39493>>>            
39493>>>            Case (sCode = "202")
39496>>>                Send SetResponseStatus 202 "Accepted" 0
39497>>>            Case Break
39498>>>            
39498>>>            Case (sCode = "302")
39501>>>                Send SetResponseStatus 302 "Found" 0
39502>>>            Case Break
39503>>>            
39503>>>            Case (sCode = "307")
39506>>>                Send SetResponseStatus 307 "Temporary Redirect" 0
39507>>>            Case Break
39508>>>            
39508>>>            Case (sCode = "404")
39511>>>                Send SetResponseStatus 404 "Not found" 0
39512>>>            Case Break
39513>>>            
39513>>>            Case (sCode = "406")
39516>>>                Send SetResponseStatus 406 "Not Acceptable" 0
39517>>>            Case Break
39518>>>            
39518>>>            Case (sCode = "500")
39521>>>                Send SetResponseStatus 500 "Internal Servel Error" 0
39522>>>            Case Break
39523>>>            
39523>>>            Case (sCode = "508")
39526>>>                Send SetResponseStatus 508 "Loop detected" 0
39527>>>            Case Break
39528>>>        
39528>>>        
39528>>>        Case End   
39528>>>        
39528>>>    //----
39528>>>        Send AddHttpResponseHeader "Content-Type" "text/html"
39529>>>        Send OutputString '<html>'
39530>>>        Send OutputString '<head><title>Status</title></head>'
39531>>>        Send OutputString (SFormat('<body><h1>Status =  %1!</h1></body>', sCode))
39532>>>        Send OutputString '</html>'
39533>>>        
39533>>>        
39533>>>                
39533>>>    End_Procedure
39534>>>End_Object
39535>    Use CentrosApi.wo
Including file: CentrosApi.wo    (C:\DataFlex Projects\Centros\AppSrc\CentrosApi.wo)
39535>>>Use cWebHttpHandler.pkg
39535>>>Use cCentrosDataDictionary.dd
39535>>>
39535>>>
39535>>>Object oCentrosRestService is a cWebHttpHandler
39537>>> 
39537>>>    Object oCentros_DD is a cCentrosDataDictionary
39539>>>    End_Object
39540>>>    Set Main_DD to oCentros_DD
39541>>>
39541>>>    Set psPath to "Api/Centros"
39542>>>    Set psVerbs to "GET,POST,PATCH,DELETE"
39543>>>
39543>>>    Procedure OnHttpGet String sPath String sAcceptType
39546>>>        String[] aPath
39547>>>        
39547>>>        //  Split the path into parts
39547>>>        Get StrSplitToArray sPath "/" to aPath
39548>>>        If (SizeOfArray(aPath) = 0) Begin
39550>>>               Send ListaCentros
39551>>>            Procedure_Return
39552>>>        End
39552>>>>
39552>>>        
39552>>>        //  Redirect to a specific operation based on the path
39552>>>        If (Lowercase(aPath[1]) <> "" and SizeOfArray(aPath) > 0 and Lowercase(aPath[1]) <> "centros") Begin
39554>>>            If (SizeOfArray(aPath) > 1) Begin
39556>>>                Send listarporid aPath[1]
39557>>>            End
39557>>>>
39557>>>        End
39557>>>>
39557>>>        
39557>>>            Else Begin
39558>>>            Send SetResponseStatus 404 "Unknown resource" 
39559>>>            End
39559>>>>
39559>>>            
39559>>>           
39559>>>    End_Procedure
39560>>>    
39560>>>    
39560>>>    Procedure OnHttpPost String sPath String sContentType String sAcceptType Integer iSize
39563>>>      String[] aPath
39564>>>        
39564>>>        //  Split the path into parts
39564>>>        Get StrSplitToArray sPath "/" to aPath
39565>>>        If (SizeOfArray(aPath) < 2) Begin
39567>>>            Send SetResponseStatus 404 "Invalid resource" 
39568>>>            Procedure_Return
39569>>>        End
39569>>>>
39569>>>        
39569>>>        //  Redirect to a specific operation based on the path
39569>>>        If (Lowercase(aPath[1]) = "centros") Begin
39571>>>            If (SizeOfArray(aPath) > 2 and aPath[2] <> "") Begin
39573>>>                Send SetResponseStatus 401 "Only use POST for creating new resources"
39574>>>            End
39574>>>>
39574>>>            Else Begin
39575>>>                Send CrearCentro True ""
39576>>>            End
39576>>>>
39576>>>        End
39576>>>>
39576>>>        Else Begin
39577>>>            Send SetResponseStatus 404 "Unknown resource"
39578>>>        End
39578>>>>
39578>>>    
39578>>>    End_Procedure
39579>>>    
39579>>>    
39579>>>    Procedure OnHttpPatch String sPath String sContentType Integer iSize
39582>>>        String[] aPath
39583>>>        
39583>>>        //  Split the path into parts
39583>>>        Get StrSplitToArray sPath "/" to aPath
39584>>>        If (SizeOfArray(aPath) < 2) Begin
39586>>>            Send SetResponseStatus 404 "Invalid resource" 
39587>>>            Procedure_Return
39588>>>        End
39588>>>>
39588>>>        
39588>>>        //  Redirect to a specific operation based on the path
39588>>>        If (Lowercase(aPath[1]) = "centros") Begin
39590>>>            If (SizeOfArray(aPath) > 2 and aPath[2] <> "") Begin
39592>>>                Send CrearCentro False aPath[2]
39593>>>            End
39593>>>>
39593>>>            Else Begin                
39594>>>                Send SetResponseStatus 400 "Only use PATCH for updating existing  resources"
39595>>>            End
39595>>>>
39595>>>        End
39595>>>>
39595>>>        Else Begin
39596>>>            Send SetResponseStatus 404 "Unknown resource"
39597>>>        End
39597>>>>
39597>>>    End_Procedure
39598>>>    
39598>>>    
39598>>>    Procedure OnHttpDelete String sPath
39601>>>        String[] aPath
39602>>>        
39602>>>        Get StrSplitToArray sPath "/" to aPath
39603>>>        If (SizeOfArray(aPath) < 2) Begin
39605>>>            Send SetResponseStatus 404 "Invalid resource" 
39606>>>            Procedure_Return
39607>>>        End
39607>>>>
39607>>>        
39607>>>        If (Lowercase(aPath[1]) = "centros") Begin
39609>>>            If (SizeOfArray(aPath) > 2 and aPath[2] <> "") Begin
39611>>>                Send Deletecentros aPath[2]
39612>>>            End
39612>>>>
39612>>>            Else Begin                
39613>>>                Send SetResponseStatus 400 "Only use DELETE on existing resources"
39614>>>            End
39614>>>>
39614>>>        End
39614>>>>
39614>>>        Else Begin
39615>>>            Send SetResponseStatus 404 "Unknown resource"
39616>>>        End
39616>>>>
39616>>>    End_Procedure
39617>>>    
39617>>>
39617>>>    Procedure ListaCentros
39620>>>        Handle hoJson hoCentro
39620>>>
39620>>>        Get Create (RefClass(cJsonObject)) to hoJson
39621>>>        Send InitializeJsonType of hoJson jsonTypeArray
39622>>>
39622>>>        Get Create (RefClass(cJsonObject)) to hoCentro
39623>>>
39623>>>        Send Find of oCentros_DD FIRST_RECORD 1
39624>>>        While (Found)
39628>>>            Send InitializeJsonType of hoCentro jsonTypeObject
39629>>>
39629>>>            Send SetMemberValue of hoCentro "Id" jsonTypeInteger Centros.Id
39630>>>            Send SetMemberValue of hoCentro "Nombre" jsonTypeString Centros.Nombre
39631>>>            Send SetMemberValue of hoCentro "PsNombre" jsonTypeString Centros.PsNombre
39632>>>            Send AddMember of hoJson hoCentro
39633>>>
39633>>>            Send Find of oCentros_DD NEXT_RECORD 1
39634>>>        Loop
39635>>>>
39635>>>
39635>>>        Send OutputJson hoJson
39636>>>
39636>>>        Send Destroy of hoCentro
39637>>>        Send Destroy of hoJson
39638>>>    End_Procedure
39639>>>
39639>>>    Procedure OutputJson Handle hoJson
39642>>>        UChar[] ucData
39643>>>
39643>>>        Send AddHttpResponseHeader "Content-Type" "application/json"
39644>>>        Get StringifyUtf8 of hoJson to ucData
39645>>>        Send OutputUChar ucData
39646>>>    End_Procedure
39647>>>    
39647>>>    Procedure listarporid Integer iId
39650>>>        Handle hoJson
39650>>>        
39650>>>        Send Clear of oCentros_DD
39651>>>        Move iId to Centros.Id
39652>>>        Send Find of oCentros_DD EQ 1
39653>>>        
39653>>>        If (Found) Begin
39655>>>            Get Create (RefClass(cJsonObject)) to hoJson
39656>>>            Send InitializeJsonType of hoJson jsonTypeObject
39657>>>            
39657>>>             Send SetMemberValue of hoJson "Id" jsonTypeInteger Centros.Id
39658>>>             Send SetMemberValue of hoJson "Nombre" jsonTypeString Centros.Nombre
39659>>>             Send SetMemberValue of hoJson "PsNombre" jsonTypeString Centros.PsNombre
39660>>>             Send SetMemberValue of hoJson "Direccion" jsonTypeString Centros.Direccion
39661>>>             Send SetMemberValue of hoJson "Pais" jsonTypeString Centros.Pais
39662>>>             Send SetMemberValue of hoJson "ComunidadAutonoma" jsonTypeString Centros.ComunidadAutonoma
39663>>>             Send SetMemberValue of hoJson "Localidad" jsonTypeString Centros.Localidad
39664>>>             Send SetMemberValue of hoJson "CodigoPostal" jsonTypeInteger Centros.CodigoPostal
39665>>>             Send SetMemberValue of hoJson "Empresa" jsonTypeString Centros.Empresa
39666>>>//             Send SetMemberValue of hoJson "FechaCreacionRegistro" jsonTypeString Centros.FechaCreacionRegistro
39666>>>//             Send SetMemberValue of hoJson "FechaUltimaModificacion" jsonTypeString Centros.FechaUltimaModificacion
39666>>>            
39666>>>            Send OutputJson hoJson
39667>>>            Send Destroy of hoJson
39668>>>        End
39668>>>>
39668>>>        Else Begin
39669>>>            Send SetResponseStatus 404 "Resource not found"
39670>>>        End
39670>>>>
39670>>>    End_Procedure
39671>>>    
39671>>>    
39671>>>    Procedure CrearCentro Boolean bCreate String sKey
39674>>>        Handle hoJson
39674>>>        Boolean bSuccess
39674>>>        String sVal
39674>>>        Boolean bVal bErr
39674>>>        
39674>>>        //  Find the right record
39674>>>        If (bCreate) Begin
39676>>>            Send Clear of oCentros_DD
39677>>>        End
39677>>>>
39677>>>        Else Begin
39678>>>            Send Clear of oCentros_DD
39679>>>            Move sKey to Centros.Id
39680>>>            Send Find of oCentros_DD EQ 1
39681>>>            
39681>>>            If (not(Found)) Begin
39683>>>                Send SetResponseStatus 404 "Resource not found"
39684>>>                Procedure_Return
39685>>>            End
39685>>>>
39685>>>        End
39685>>>>
39685>>>        
39685>>>        //  Read the request data
39685>>>        Get RequestDataJson (&hoJson) to bSuccess
39686>>>        
39686>>>        If (bSuccess) Begin
39688>>>            Send ErrorQueueStart
39689>>>            
39689>>>            //  Set the values
39689>>>            If (HasMember(hoJson, "Nombre")) Begin
39691>>>                Get MemberValue of hoJson "Nombre" to sVal
39692>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.Nombre)) to sVal
39693>>>            End
39693>>>>
39693>>>            
39693>>>            If (HasMember(hoJson, "PsNombre")) Begin
39695>>>                Get MemberValue of hoJson "PsNombre" to sVal
39696>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.PsNombre)) to sVal
39697>>>            End
39697>>>>
39697>>>            
39697>>>            
39697>>>            If (HasMember(hoJson, "Direccion")) Begin
39699>>>                Get MemberValue of hoJson "Direccion" to sVal
39700>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.Direccion)) to sVal
39701>>>            End
39701>>>>
39701>>>            
39701>>>            If (HasMember(hoJson, "Pais")) Begin
39703>>>                Get MemberValue of hoJson "Pais" to sVal
39704>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.Pais)) to sVal
39705>>>            End
39705>>>>
39705>>>            
39705>>>            If (HasMember(hoJson, "ComunidadAutonoma")) Begin
39707>>>                Get MemberValue of hoJson "ComunidadAutonoma" to sVal
39708>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.ComunidadAutonoma)) to sVal
39709>>>            End
39709>>>>
39709>>>            
39709>>>            If (HasMember(hoJson, "Localidad")) Begin
39711>>>                Get MemberValue of hoJson "Localidad" to sVal
39712>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.Localidad)) to sVal
39713>>>            End
39713>>>>
39713>>>            
39713>>>            If (HasMember(hoJson, "CodigoPostal")) Begin
39715>>>                Get MemberValue of hoJson "CodigoPostal" to sVal
39716>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.CodigoPostal)) to sVal
39717>>>            End
39717>>>>
39717>>>            
39717>>>            If (HasMember(hoJson, "Empresa")) Begin
39719>>>                Get MemberValue of hoJson "Empresa" to sVal
39720>>>                Set Field_Changed_Value of oCentros_DD (RefTable(Centros.Empresa)) to sVal
39721>>>            End
39721>>>>
39721>>>            
39721>>>            //  Perform the save
39721>>>            If (ErrorCount(Self) = 0) Begin
39723>>>                Get Request_Validate of oCentros_DD to bErr
39724>>>                If (not(bErr)) Begin
39726>>>                   Send Request_Save of oCentros_DD     
39727>>>                   
39727>>>                   If (not(Err)) Begin
39729>>>                        Send listarporid Centros.Id
39730>>>                   End
39730>>>>
39730>>>                End
39730>>>>
39730>>>            End            
39730>>>>
39730>>>            
39730>>>            Send ErrorQueueEnd
39731>>>            Send ErrorReportJson
39732>>>        End
39732>>>>
39732>>>        
39732>>>        If (hoJson > 0) Begin
39734>>>            Send Destroy of hoJson
39735>>>        End
39735>>>>
39735>>>    End_Procedure
39736>>>    
39736>>>        //  Deletes a specific customer record
39736>>>    Procedure DeleteCentros String sKey
39739>>>        Send Clear of oCentros_DD
39740>>>        Move sKey to Centros.Id
39741>>>        Send Find of oCentros_DD EQ 1
39742>>>        
39742>>>        If (not(Found)) Begin
39744>>>            Send SetResponseStatus 404 "Resource not found"
39745>>>            Procedure_Return
39746>>>        End
39746>>>>
39746>>>        
39746>>>        Send ErrorQueueStart
39747>>>        
39747>>>        Send Request_Delete of oCentros_DD
39748>>>        
39748>>>        Send ErrorQueueEnd
39749>>>        Send ErrorReportJson
39750>>>    End_Procedure
39751>>>    
39751>>>    
39751>>>        //  Helper function that reads an entire request into a JSON object.
39751>>>    Function RequestDataJson Handle ByRef hoJson Returns Boolean
39754>>>        UChar[] ucData
39755>>>        Boolean bSuccess
39755>>>        String sErr
39755>>>        
39755>>>        Get Create (RefClass(cJsonObject)) to hoJson
39756>>>        
39756>>>        Get RequestDataUChar -1 to ucData
39757>>>        Get ParseUtf8 of hoJson ucData to bSuccess
39758>>>        
39758>>>        If (not(bSuccess)) Begin
39760>>>            Get psParseError of hoJson to sErr
39761>>>            Send SetResponseStatus 402 sErr
39762>>>        End
39762>>>>
39762>>>        
39762>>>        Function_Return bSuccess
39763>>>    End_Function
39764>>>    
39764>>>    
39764>>>      Procedure ErrorReportJson
39767>>>        Integer iErr iErrC
39767>>>        Handle hoJson hoErrors   
39767>>>        String sMessage
39767>>>        
39767>>>        Get ErrorCount to iErrC
39768>>>        If (iErrC > 0) Begin
39770>>>            Send SetResponseStatus 403 "Errors occurred"
39771>>>            
39771>>>            Get Create (RefClass(cJsonObject)) to hoJson
39772>>>            Send InitializeJsonType of hoJson jsonTypeObject
39773>>>            
39773>>>            Get Create (RefClass(cJsonObject)) to hoErrors
39774>>>            Send InitializeJsonType of hoErrors jsonTypeArray
39775>>>            
39775>>>            For iErr from 0 to (iErrC - 1)
39781>>>>
39781>>>                Get ErrorMessage iErr to sMessage
39782>>>                Send AddMemberValue of hoErrors jsonTypeString  sMessage
39783>>>            Loop
39784>>>>
39784>>>            
39784>>>            Send SetMember of hoJson "aErrors" hoErrors
39785>>>            
39785>>>            Send OutputJson hoJson
39786>>>            
39786>>>            Send Destroy of hoErrors
39787>>>            Send Destroy of hoJson
39788>>>        End
39788>>>>
39788>>>    End_Procedure
39789>>>    
39789>>>
39789>>>End_Object
39790>    Use AlumnosApi.wo
Including file: AlumnosApi.wo    (C:\DataFlex Projects\Centros\AppSrc\AlumnosApi.wo)
39790>>>Use cWebHttpHandler.pkg
39790>>>Use cCentrosDataDictionary.dd
39790>>>Use cAlumnosDataDictionary.dd
39790>>>
39790>>>
39790>>>Object oAlumnosApi is a cWebHttpHandler
39792>>> 
39792>>>    Object oCentros_DD is a cCentrosDataDictionary
39794>>>    End_Object 
39795>>>
39795>>>    Object oAlummnos_DD is a cAlumnosDataDictionary
39797>>>        Set DDO_Server to oCentros_DD
39798>>>    End_Object 
39799>>>    
39799>>>    Set Main_DD to oAlummnos_DD
39800>>>
39800>>>    Set psPath to "Api/Alumnos"
39801>>>    Set psVerbs to "GET,POST,PATCH,DELETE"
39802>>>
39802>>>    Procedure OnHttpGet String sPath String sAcceptType
39805>>>        String[] aPath
39806>>>        
39806>>>        //  Split the path into parts
39806>>>        Get StrSplitToArray sPath "/" to aPath
39807>>>        If (SizeOfArray(aPath) = 0) Begin
39809>>>               Send ListaCentros
39810>>>            Procedure_Return
39811>>>        End
39811>>>>
39811>>>        
39811>>>        //  Redirect to a specific operation based on the path
39811>>>        If (Lowercase(aPath[1]) <> "" and SizeOfArray(aPath) > 0 and Lowercase(aPath[1]) <> "Alumnos") Begin
39813>>>            If (SizeOfArray(aPath) > 1) Begin
39815>>>                Send listarAlumnosporid aPath[1]
39816>>>            End
39816>>>>
39816>>>        End
39816>>>>
39816>>>        
39816>>>            Else Begin
39817>>>            Send SetResponseStatus 404 "Unknown resource" 
39818>>>            End
39818>>>>
39818>>>            
39818>>>           
39818>>>    End_Procedure
39819>>>    
39819>>>    
39819>>>    Procedure OnHttpPost String sPath String sContentType String sAcceptType Integer iSize
39822>>>      String[] aPath
39823>>>        
39823>>>        //  Split the path into parts
39823>>>        Get StrSplitToArray sPath "/" to aPath
39824>>>        If (SizeOfArray(aPath) < 2) Begin
39826>>>            Send SetResponseStatus 404 "Invalid resource" 
39827>>>            Procedure_Return
39828>>>        End
39828>>>>
39828>>>        
39828>>>        //  Redirect to a specific operation based on the path
39828>>>        If (Lowercase(aPath[1]) = "alumnos") Begin
39830>>>            If (SizeOfArray(aPath) > 2 and aPath[2] <> "") Begin
39832>>>                Send SetResponseStatus 401 "Only use POST for creating new resources"
39833>>>            End
39833>>>>
39833>>>            Else Begin
39834>>>                Send CrearAlumno True ""
39835>>>            End
39835>>>>
39835>>>        End
39835>>>>
39835>>>        Else Begin
39836>>>            Send SetResponseStatus 404 "Unknown resource"
39837>>>        End
39837>>>>
39837>>>    
39837>>>    End_Procedure
39838>>>    
39838>>>    
39838>>>    Procedure OnHttpPatch String sPath String sContentType Integer iSize
39841>>>        String[] aPath
39842>>>        
39842>>>        //  Split the path into parts
39842>>>        Get StrSplitToArray sPath "/" to aPath
39843>>>        If (SizeOfArray(aPath) < 2) Begin
39845>>>            Send SetResponseStatus 404 "Invalid resource" 
39846>>>            Procedure_Return
39847>>>        End
39847>>>>
39847>>>        
39847>>>        //  Redirect to a specific operation based on the path
39847>>>        If (Lowercase(aPath[1]) = "alumnos") Begin
39849>>>            If (SizeOfArray(aPath) > 2 and aPath[2] <> "") Begin
39851>>>                Send CrearAlumno False aPath[2] 
39852>>>            End
39852>>>>
39852>>>            Else Begin                
39853>>>                Send SetResponseStatus 400 "Only use PATCH for updating existing  resources"
39854>>>            End
39854>>>>
39854>>>        End
39854>>>>
39854>>>        Else Begin
39855>>>            Send SetResponseStatus 404 "Unknown resource"
39856>>>        End
39856>>>>
39856>>>    End_Procedure
39857>>>    
39857>>>    
39857>>>    Procedure OnHttpDelete String sPath
39860>>>        String[] aPath
39861>>>        
39861>>>        Get StrSplitToArray sPath "/" to aPath
39862>>>        If (SizeOfArray(aPath) < 2) Begin
39864>>>            Send SetResponseStatus 404 "Invalid resource" 
39865>>>            Procedure_Return
39866>>>        End
39866>>>>
39866>>>        
39866>>>        If (Lowercase(aPath[1]) = "Alumnos") Begin
39868>>>            If (SizeOfArray(aPath) > 2 and aPath[2] <> "") Begin
39870>>>                Send DeleteAlumno  aPath[2]
39871>>>            End
39871>>>>
39871>>>            Else Begin                
39872>>>                Send SetResponseStatus 400 "Only use DELETE on existing resources"
39873>>>            End
39873>>>>
39873>>>        End
39873>>>>
39873>>>        Else Begin
39874>>>            Send SetResponseStatus 404 "Unknown resource"
39875>>>        End
39875>>>>
39875>>>    End_Procedure
39876>>>    
39876>>>
39876>>>    Procedure ListaCentros
39879>>>        Handle hoJsonAlumno hoAlumno
39879>>>
39879>>>        Get Create (RefClass(cJsonObject)) to hoJsonAlumno
39880>>>        Send InitializeJsonType of hoJsonAlumno jsonTypeArray
39881>>>
39881>>>        Get Create (RefClass(cJsonObject)) to hoAlumno
39882>>>
39882>>>        Send Find of oAlummnos_DD FIRST_RECORD 1
39883>>>        While (Found)
39887>>>            Send InitializeJsonType of hoAlumno jsonTypeObject
39888>>>
39888>>>             Send SetMemberValue of hoAlumno "Id" jsonTypeInteger Alumnos.AlumnosId
39889>>>             Send SetMemberValue of hoAlumno "CentrosId" jsonTypeInteger Alumnos.CentrosId
39890>>>             Send SetMemberValue of hoAlumno "DNI" jsonTypeString Alumnos.Dni
39891>>>             Send SetMemberValue of hoAlumno "Nombre" jsonTypeString Alumnos.Nombre
39892>>>             Send SetMemberValue of hoAlumno "Apellidos" jsonTypeString Alumnos.Apellidos
39893>>>             Send SetMemberValue of hoAlumno "Sexo" jsonTypeString Alumnos.Sexo
39894>>>             Send SetMemberValue of hoAlumno "Dirreccion" jsonTypeString Alumnos.Dirreccion
39895>>>             Send SetMemberValue of hoAlumno "CodigoPostal" jsonTypeString Alumnos.CodigoPostal
39896>>>             Send SetMemberValue of hoAlumno "Localidad" jsonTypeString Alumnos.Localidad
39897>>>             Send SetMemberValue of hoAlumno "Pais" jsonTypeString Alumnos.Pais
39898>>>             Send SetMemberValue of hoAlumno "NumeroTelefono" jsonTypeString Alumnos.NumeroTelefono
39899>>>             Send SetMemberValue of hoAlumno "ComunidadAutonoma" jsonTypeString Alumnos.ComunidadAutonoma
39900>>>             Send SetMemberValue of hoAlumno "PrefijoTlfn" jsonTypeString Alumnos.PrefijoTlfn
39901>>>             Send AddMember of hoJsonAlumno hoAlumno
39902>>>
39902>>>            Send Find of oAlummnos_DD NEXT_RECORD 1
39903>>>        Loop
39904>>>>
39904>>>
39904>>>        Send OutputJson hoJsonAlumno
39905>>>
39905>>>        Send Destroy of hoAlumno
39906>>>        Send Destroy of hoJsonAlumno
39907>>>    End_Procedure
39908>>>
39908>>>    Procedure OutputJson Handle hoJsonAlumno
39911>>>        UChar[] ucData
39912>>>
39912>>>        Send AddHttpResponseHeader "Content-Type" "application/json"
39913>>>        Get StringifyUtf8 of hoJsonAlumno to ucData
39914>>>        Send OutputUChar ucData
39915>>>    End_Procedure
39916>>>    
39916>>>    Procedure listarAlumnosporid Integer iId
39919>>>        Handle hoJsonAlumno
39919>>>        
39919>>>        Send Clear of oAlummnos_DD
39920>>>        Move iId to Alumnos.AlumnosId
39921>>>        Send Find of oAlummnos_DD EQ 1
39922>>>        
39922>>>        If (Found) Begin
39924>>>            Get Create (RefClass(cJsonObject)) to hoJsonAlumno
39925>>>            Send InitializeJsonType of hoJsonAlumno jsonTypeObject
39926>>>            
39926>>>             Send SetMemberValue of hoJsonAlumno "Id" jsonTypeInteger Alumnos.AlumnosId
39927>>>             Send SetMemberValue of hoJsonAlumno "CentrosId" jsonTypeInteger Alumnos.CentrosId
39928>>>             Send SetMemberValue of hoJsonAlumno "DNI" jsonTypeString Alumnos.Dni
39929>>>             Send SetMemberValue of hoJsonAlumno "Nombre" jsonTypeString Alumnos.Nombre
39930>>>             Send SetMemberValue of hoJsonAlumno "Apellidos" jsonTypeString Alumnos.Apellidos
39931>>>             Send SetMemberValue of hoJsonAlumno "Sexo" jsonTypeString Alumnos.Sexo
39932>>>             Send SetMemberValue of hoJsonAlumno "Dirreccion" jsonTypeString Alumnos.Dirreccion
39933>>>             Send SetMemberValue of hoJsonAlumno "CodigoPostal" jsonTypeString Alumnos.CodigoPostal
39934>>>             Send SetMemberValue of hoJsonAlumno "Localidad" jsonTypeString Alumnos.Localidad
39935>>>             Send SetMemberValue of hoJsonAlumno "Pais" jsonTypeString Alumnos.Pais
39936>>>             Send SetMemberValue of hoJsonAlumno "NumeroTelefono" jsonTypeString Alumnos.NumeroTelefono
39937>>>             Send SetMemberValue of hoJsonAlumno "ComunidadAutonoma" jsonTypeString Alumnos.ComunidadAutonoma
39938>>>             Send SetMemberValue of hoJsonAlumno "PrefijoTlfn" jsonTypeString Alumnos.PrefijoTlfn
39939>>>//             Send SetMemberValue of hoJsonAlumno "FechaCreacionRegistro" jsonTypeString Alumnos.FechaCreacionRegistro
39939>>>//             Send SetMemberValue of hoJsonAlumno "FechaUltimaModificacion" jsonTypeString Alumnos.FechaUltimaModificacion
39939>>>            
39939>>>            Send OutputJson hoJsonAlumno
39940>>>            Send Destroy of hoJsonAlumno
39941>>>        End
39941>>>>
39941>>>        Else Begin
39942>>>            Send SetResponseStatus 404 "Resource not found"
39943>>>        End
39943>>>>
39943>>>    End_Procedure
39944>>>    
39944>>>    
39944>>>    Procedure CrearAlumno Boolean bCreate String sKey 
39947>>>        Handle hoJsonAlumno
39947>>>        Boolean bSuccess
39947>>>        String sVal
39947>>>        Boolean bVal bErr
39947>>>        
39947>>>        //  Find the right record
39947>>>        If (bCreate) Begin
39949>>>            Send Clear of oAlummnos_DD
39950>>>            Send Clear of oCentros_DD
39951>>>        End
39951>>>>
39951>>>        Else Begin
39952>>>            
39952>>>            
39952>>>            Send Clear of oAlummnos_DD
39953>>>            Move sKey to Alumnos.AlumnosId
39954>>>            Send Find of oAlummnos_DD EQ 1
39955>>>            
39955>>>            If (not(Found)) Begin
39957>>>                Send SetResponseStatus 404 "Resource not found"
39958>>>                Procedure_Return
39959>>>            End
39959>>>>
39959>>>            
39959>>>            Send Find of oCentros_DD EQ 1 
39960>>>            
39960>>>            If (not(Found)) Begin
39962>>>                Send SetResponseStatus 404 "Resource not found"
39963>>>                Procedure_Return
39964>>>            End
39964>>>>
39964>>>        End
39964>>>>
39964>>>        
39964>>>        //  Read the request data
39964>>>        Get RequestDataJson (&hoJsonAlumno) to bSuccess
39965>>>        
39965>>>        If (bSuccess) Begin
39967>>>            Send ErrorQueueStart
39968>>>            
39968>>>            //  Set the values
39968>>>            If (HasMember(hoJsonAlumno, "Nombre")) Begin
39970>>>                Get MemberValue of hoJsonAlumno "Nombre" to sVal
39971>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Nombre)) to sVal
39972>>>            End           
39972>>>>
39972>>>            If (HasMember(hoJsonAlumno, "Apellidos")) Begin
39974>>>                Get MemberValue of hoJsonAlumno "Apellidos" to sVal
39975>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Apellidos)) to sVal
39976>>>            End
39976>>>>
39976>>>           
39976>>>            If (HasMember(hoJsonAlumno, "Direccion")) Begin
39978>>>                Get MemberValue of hoJsonAlumno "Direccion" to sVal
39979>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Dirreccion)) to sVal
39980>>>            End
39980>>>>
39980>>>            
39980>>>            If (HasMember(hoJsonAlumno, "Pais")) Begin
39982>>>                Get MemberValue of hoJsonAlumno "Pais" to sVal
39983>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Pais)) to sVal
39984>>>            End
39984>>>>
39984>>>            
39984>>>            If (HasMember(hoJsonAlumno, "ComunidadAutonoma")) Begin
39986>>>                Get MemberValue of hoJsonAlumno "ComunidadAutonoma" to sVal
39987>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.ComunidadAutonoma)) to sVal
39988>>>            End
39988>>>>
39988>>>            
39988>>>            If (HasMember(hoJsonAlumno, "Localidad")) Begin
39990>>>                Get MemberValue of hoJsonAlumno "Localidad" to sVal
39991>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Localidad)) to sVal
39992>>>            End
39992>>>>
39992>>>            
39992>>>            If (HasMember(hoJsonAlumno, "CodigoPostal")) Begin
39994>>>                Get MemberValue of hoJsonAlumno "CodigoPostal" to sVal
39995>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.CodigoPostal)) to sVal
39996>>>            End
39996>>>>
39996>>>            
39996>>>            If (HasMember(hoJsonAlumno, "Dni")) Begin
39998>>>                Get MemberValue of hoJsonAlumno "Dni" to sVal
39999>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Dni)) to sVal
40000>>>            End
40000>>>>
40000>>>            
40000>>>            If (HasMember(hoJsonAlumno, "Sexo")) Begin
40002>>>                Get MemberValue of hoJsonAlumno "Sexo" to sVal
40003>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Sexo)) to sVal
40004>>>            End
40004>>>>
40004>>>            
40004>>>            If (HasMember(hoJsonAlumno, "NumeroTelefono")) Begin
40006>>>                Get MemberValue of hoJsonAlumno "NumeroTelefono" to sVal
40007>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.NumeroTelefono)) to sVal
40008>>>            End
40008>>>>
40008>>>            
40008>>>            If (HasMember(hoJsonAlumno, "Email")) Begin
40010>>>                Get MemberValue of hoJsonAlumno "Email" to sVal
40011>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.Email)) to sVal
40012>>>            End
40012>>>>
40012>>>            
40012>>>            If (HasMember(hoJsonAlumno, "CentrosId")) Begin
40014>>>                    Get MemberValue of hoJsonAlumno "CentrosId" to sVal
40015>>>                    Send Clear of oCentros_DD
40016>>>                Move sVal to Centros.Id
40017>>>                Send Find of oCentros_DD EQ 1
40018>>>            End
40018>>>>
40018>>>
40018>>>            If (HasMember(hoJsonAlumno, "PrefijoTlfn")) Begin
40020>>>                Get MemberValue of hoJsonAlumno "PrefijoTlfn" to sVal
40021>>>                Set Field_Changed_Value of oAlummnos_DD (RefTable(Alumnos.PrefijoTlfn)) to sVal
40022>>>            End
40022>>>>
40022>>>            
40022>>>            
40022>>>            //  Perform the save
40022>>>            If (ErrorCount(Self) = 0) Begin
40024>>>                Get Request_Validate of oAlummnos_DD to bErr
40025>>>                If (not(bErr)) Begin
40027>>>                   Send Request_Save of oAlummnos_DD                        
40028>>>                   
40028>>>                   If (not(Err)) Begin
40030>>>                        Send listarAlumnosporid Alumnos.AlumnosId
40031>>>                   End
40031>>>>
40031>>>                End
40031>>>>
40031>>>            End            
40031>>>>
40031>>>            
40031>>>            Send ErrorQueueEnd
40032>>>            Send ErrorReportJson
40033>>>        End
40033>>>>
40033>>>        
40033>>>        If (hoJsonAlumno > 0) Begin
40035>>>            Send Destroy of hoJsonAlumno
40036>>>        End
40036>>>>
40036>>>    End_Procedure
40037>>>    
40037>>>        //  Deletes a specific customer record
40037>>>    Procedure DeleteAlumno String sKey
40040>>>        Send Clear of oAlummnos_DD
40041>>>        Move sKey to Alumnos.AlumnosId
40042>>>        Send Find of oAlummnos_DD EQ 1
40043>>>        
40043>>>        If (not(Found)) Begin
40045>>>            Send SetResponseStatus 404 "Resource not found"
40046>>>            Procedure_Return
40047>>>        End
40047>>>>
40047>>>        
40047>>>        Send ErrorQueueStart
40048>>>        
40048>>>        Send Request_Delete of oAlummnos_DD
40049>>>        
40049>>>        Send ErrorQueueEnd
40050>>>        Send ErrorReportJson
40051>>>    End_Procedure
40052>>>    
40052>>>    
40052>>>        //  Helper function that reads an entire request into a JSON object.
40052>>>    Function RequestDataJson Handle ByRef hoJsonAlumno Returns Boolean
40055>>>        UChar[] ucData
40056>>>        Boolean bSuccess
40056>>>        String sErr
40056>>>        
40056>>>        Get Create (RefClass(cJsonObject)) to hoJsonAlumno
40057>>>        
40057>>>        Get RequestDataUChar -1 to ucData
40058>>>        Get ParseUtf8 of hoJsonAlumno ucData to bSuccess
40059>>>        
40059>>>        If (not(bSuccess)) Begin
40061>>>            Get psParseError of hoJsonAlumno to sErr
40062>>>            Send SetResponseStatus 402 sErr
40063>>>        End
40063>>>>
40063>>>        
40063>>>        Function_Return bSuccess
40064>>>    End_Function
40065>>>    
40065>>>    
40065>>>      Procedure ErrorReportJson
40068>>>        Integer iErr iErrC
40068>>>        Handle hoJsonAlumno hoErrors   
40068>>>        String sMessage
40068>>>        
40068>>>        Get ErrorCount to iErrC
40069>>>        If (iErrC > 0) Begin
40071>>>            Send SetResponseStatus 403 "Errors occurred"
40072>>>            
40072>>>            Get Create (RefClass(cJsonObject)) to hoJsonAlumno
40073>>>            Send InitializeJsonType of hoJsonAlumno jsonTypeObject
40074>>>            
40074>>>            Get Create (RefClass(cJsonObject)) to hoErrors
40075>>>            Send InitializeJsonType of hoErrors jsonTypeArray
40076>>>            
40076>>>            For iErr from 0 to (iErrC - 1)
40082>>>>
40082>>>                Get ErrorMessage iErr to sMessage
40083>>>                Send AddMemberValue of hoErrors jsonTypeString  sMessage
40084>>>            Loop
40085>>>>
40085>>>            
40085>>>            Send SetMember of hoJsonAlumno "aErrors" hoErrors
40086>>>            
40086>>>            Send OutputJson hoJsonAlumno
40087>>>            
40087>>>            Send Destroy of hoErrors
40088>>>            Send Destroy of hoJsonAlumno
40089>>>        End
40089>>>>
40089>>>    End_Procedure
40090>>>    
40090>>>
40090>>>End_Object
40091>    Set phoDefaultView to oDashboard
40092>
40092>End_Object
40093>
40093>Send StartWebApp of oWebApp
40094>
Summary
Memory Available: 7305060352
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 26263
Total Resources: 0
Total Commands : 40093
Total Windows  : 0
Total Pages    : 0
Static Data    : 502957
Message area   : 269670
Total Blocks   : 17814
=======
38844>>>    
38844>>>    Procedure OnBeforeShow
38847>>>        Forward Send OnBeforeShow
38849>>>        Send Refill of oAlumnosComunidadAutonoma
38850>>>        Send Refill of oAlumnosLocalidad
38851>>>    End_Procedure
38852>>>
38852>>>End_Object 
38853>    Use SelectStudents.wo
Including file: SelectStudents.wo    (C:\DataFlex Projects\Centros\AppSrc\SelectStudents.wo)
38853>>>// C:\DataFlex Projects\Centros\AppSrc\SelectStudents.wo
38853>>>// Students
38853>>>//
38853>>>
38853>>>Use cWebView.pkg
38853>>>Use cWebList.pkg
38853>>>Use cWebMenuGroup.pkg
38853>>>Use cWebMenuItem.pkg
38853>>>Use cWebColumnButton.pkg
38853>>>Use cWebColumn.pkg
38853>>>Use ZoomAllStudents.wo
38853>>>
38853>>>Use cCentrosDataDictionary.dd
38853>>>Use cAlumnosDataDictionary.dd
38853>>>
38853>>>Object oSelectStudents is a cWebView
38855>>>    Set psCaption to "Students"
38856>>>    Set peWebViewStyle to wvsDrilldown
38857>>>    Set peViewType to vtSelect
38858>>>    Set piColumnCount to 12
38859>>>    Set pbShowCaption to False
38860>>>    Set piMaxWidth to 1024
38861>>>
38861>>>    Object oCentros_DD is a cCentrosDataDictionary
38863>>>    End_Object 
38864>>>
38864>>>    Object oAlumnos_DD is a cAlumnosDataDictionary
38866>>>        Set DDO_Server To oCentros_DD
38867>>>    End_Object 
38868>>>
38868>>>    Set Main_DD To oAlumnos_DD
38869>>>    Set Server  To oAlumnos_DD
38870>>>
38870>>>
38870>>>    Object oList is a cWebList
38872>>>        Set piColumnSpan to 0
38873>>>        Set psCSSClass to "MobileList"
38874>>>        Set pbServerOnRowClick to True
38875>>>        Set pbFillHeight to True
38876>>>        Set pbShowHeader to False
38877>>>        Set piSortColumn to 0
38878>>>
38878>>>        Object oAlumnosNombre is a cWebColumn
38880>>>            Entry_Item Alumnos.Nombre
38881>>>            Set psCaption to "Alumnos.Nombre"
38882>>>            Set piWidth to 1000
38883>>>        End_Object 
38884>>>
38884>>>        Object oAlumnosApellidos is a cWebColumn
38886>>>            Entry_Item Alumnos.Apellidos
38887>>>            Set psCaption to "Alumnos.Apellidos"
38888>>>            Set piWidth to 1000
38889>>>        End_Object 
38890>>>
38890>>>        Object oDetailButton is a cWebColumnButton
38892>>>            Set psCaption to "btn"
38893>>>            Set piWidth to 45
38894>>>            Set pbFixedWidth to True
38895>>>            Set pbResizable to False
38896>>>            Set piListRowSpan to 2
38897>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
38898>>>            Set peAlign to alignRight
38899>>>
38899>>>            WebRegisterPath ntNavigateForward oZoomAllStudents
38905>>>
38905>>>            Procedure OnClick
38908>>>                Send NavigatePath
38909>>>            End_Procedure
38910>>>
38910>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38913>>>                Move True to NavigateData.bReadOnly
38914>>>            End_Procedure
38915>>>
38915>>>        End_Object 
38916>>>
38916>>>        Object oAlumnosDni is a cWebColumn
38918>>>            Entry_Item Alumnos.Dni
38919>>>            Set psCaption to "Alumnos.Dni"
38920>>>            Set piWidth to 100
38921>>>            Set pbNewLine to True
38922>>>            Set psCSSClass to "RowDetail"
38923>>>        End_Object 
38924>>>
38924>>>        Object oCentrosId is a cWebColumn
38926>>>            Entry_Item Centros.Id
38927>>>            Set psCaption to "Alumnos.CentrosId"
38928>>>            Set piWidth to 100
38929>>>            Set psCSSClass to "RowDetail"
38930>>>        End_Object 
38931>>>
38931>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
38931>>>//        WebRegisterPath ntNavigateForward oSelectView
38931>>>
38931>>>        Procedure OnRowClick String sRowId
38934>>>            tWebNavigateData NavigateData
38934>>>            tWebNavigateData NavigateData
38934>>>            Get GetNavigateData to NavigateData
38935>>>
38935>>>            Case Begin
38935>>>                Case (NavigateData.eNavigateType = nfFromParent)
38937>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
38937>>>Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
38938>>>>
38938>>>//                    Send NavigateForward of oSelectView Self
38938>>>                    Case Break
38939>>>
38939>>>                Case (NavigateData.eNavigateType = nfFromChild)
38942>>>                    Send NavigateClose Self
38943>>>                    Case Break
38944>>>
38944>>>                Case (NavigateData.eNavigateType = nfFromMain)
38947>>>                    Send NavigateClose Self
38948>>>                    Case Break
38949>>>
38949>>>                Case Else // must be nfUndefined
38949>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
38949>>>Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
38950>>>>
38950>>>//                    Send NavigateForward of oSelectView Self
38950>>>
38950>>>            Case End
38950>>>        End_Procedure
38951>>>
38951>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38954>>>            Move True to NavigateData.bReadOnly
38955>>>        End_Procedure
38956>>>
38956>>>    End_Object 
38957>>>
38957>>>    Object oActionGroup is a cWebMenuGroup
38959>>>
38959>>>        Object oSearch is a cWebMenuItem
38961>>>            Set psCSSClass to "WebPromptMenuItem"
38962>>>            Set psCaption to "Search"
38963>>>
38963>>>            Procedure OnClick
38966>>>                Send Search of oList
38967>>>            End_Procedure
38968>>>
38968>>>        End_Object 
38969>>>
38969>>>        Object oNewButton is a cWebMenuItem
38971>>>            Set psCSSClass to "WebClearMenuItem"
38972>>>            Set psCaption to "New"
38973>>>
38973>>>            WebRegisterPath ntNavigateForward oZoomAllStudents
38979>>>
38979>>>            Procedure OnClick
38982>>>                Send NavigatePath
38983>>>            End_Procedure
38984>>>
38984>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
38987>>>                Move True to NavigateData.bNewRecord
38988>>>            End_Procedure
38989>>>
38989>>>        End_Object 
38990>>>    End_Object 
38991>>>
38991>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
38994>>>        WebSet pbRender of oNewButton to True
38995>>>        WebSet pbRender of oDetailButton to True
38996>>>
38996>>>        Case Begin
38996>>>            Case (NavigateData.eNavigateType = nfFromParent)
38998>>>                // If from parent, this is a constrained drill down
38998>>>                Case Break
38999>>>
38999>>>            Case (NavigateData.eNavigateType = nfFromChild)
39002>>>                // If from child, this is a probably a parent lookup from a Zoom
39002>>>                Case Break
39003>>>
39003>>>            Case (NavigateData.eNavigateType = nfFromMain)
39006>>>                // If from main, this is a probably a main-file lookup from a Zoom
39006>>>                WebSet pbRender of oDetailButton to False
39007>>>                Case Break
39008>>>
39008>>>            Case Else // must be nfUndefined
39008>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
39008>>>
39008>>>        Case End
39008>>>
39008>>>    End_Procedure
39009>>>
39009>>>
39009>>>End_Object 
39010>    Use ZoomCentros.wo
Including file: ZoomCentros.wo    (C:\DataFlex Projects\Centros\AppSrc\ZoomCentros.wo)
39010>>>// C:\DataFlex Projects\Centros\AppSrc\ZoomCentros.wo
39010>>>// Centros
39010>>>//
39010>>>
39010>>>Use cWebView.pkg
39010>>>Use cWebPanel.pkg
39010>>>Use cWebMenuGroup.pkg
39010>>>Use cWebMenuItem.pkg
39010>>>Use cWebForm.pkg
39010>>>Use cWebTabContainer.pkg
39010>>>Use cWebTabPage.pkg
39010>>>
39010>>>Use cCentrosDataDictionary.dd
39010>>>
39010>>>Object oZoomCentros is a cWebView
39012>>>    Set piColumnCount to 12
39013>>>    Set psCaption to "Centros"
39014>>>    Set peWebViewStyle to wvsDrilldown
39015>>>    Set peViewType to vtZoom
39016>>>    Set pbShowCaption to False
39017>>>    Set Verify_Save_Msg to 0
39018>>>    Set piMaxWidth to 1024
39019>>>
39019>>>    Object oCentros_DD is a cCentrosDataDictionary
39021>>>    End_Object 
39022>>>
39022>>>    Set Main_DD To oCentros_DD
39023>>>    Set Server  To oCentros_DD
39024>>>
39024>>>
39024>>>    Object oWebMainPanel is a cWebPanel
39026>>>        Set piColumnCount to 12
39027>>>        WebSetResponsive piColumnCount rmMobile to 4
39028>>>
39028>>>        Object oCentrosNombre is a cWebForm
39030>>>            Entry_Item Centros.Nombre
39031>>>            Set piColumnSpan to 6
39032>>>            Set piColumnIndex to 0
39033>>>            Set peLabelPosition to lpTop
39034>>>            Set psLabel to "Nombre"
39035>>>        End_Object 
39036>>>
39036>>>        Object oCentrosPsNombre is a cWebForm
39038>>>            Entry_Item Centros.PsNombre
39039>>>            Set piColumnSpan to 6
39040>>>            Set piColumnIndex to 6
39041>>>            Set peLabelPosition to lpTop
39042>>>            Set psLabel to "PsNombre"
39043>>>        End_Object 
39044>>>
39044>>>        Object oCentrosEmpresa is a cWebForm
39046>>>            Entry_Item Centros.Empresa
39047>>>            Set piColumnSpan to 8
39048>>>            Set piColumnIndex to 0
39049>>>            Set peLabelPosition to lpTop
39050>>>            Set psLabel to "Empresa"
39051>>>        End_Object 
39052>>>
39052>>>        Object oWebTabContainer is a cWebTabContainer
39054>>>            Set pbFillHeight to True
39055>>>            Set piColumnSpan to 12
39056>>>            Set pbShowLabel to False
39057>>>
39057>>>            Object oPage1 is a cWebTabPage
39059>>>                Set piColumnCount to 12
39060>>>                Set psCaption to "Ubicación"
39061>>>                WebSetResponsive piColumnCount rmMobile to 4
39062>>>
39062>>>                Object oCentrosPais is a cWebCombo
39064>>>                    Entry_Item Centros.Pais
39065>>>                    Set piColumnSpan to 4
39066>>>                    Set piColumnIndex to 0
39067>>>                    Set peLabelPosition to lpTop
39068>>>                    Set psLabel to "Pais"
39069>>>                    Set pbServerOnChange to True
39070>>>                    
39070>>>                     String[][] aResultsPaisesCentros
39070>>>                    
39070>>>                    Procedure OnFill
39073>>>                    Integer inumPaises i
39073>>>                        Forward Send OnFill
39075>>>                        
39075>>>                        Get SQLExecDirect of ghoSQLExecutor @SQL" SELECT id, Nombre                            FROM Centros.dbo.Country;" to aResultsPaisesCentros
39076>>>                            
39076>>>                        Move (SizeOfArray(aResultsPaisesCentros[0])) to inumPaises    
39077>>>                        If (not(Err)) Begin
39079>>>                             For i from 0 to (aResultsPaisesCentros - 1)
39085>>>>
39085>>>                                Send AddComboItem aResultsPaisesCentros[i][0] aResultsPaisesCentros[i][1] 
39086>>>                             Loop
39087>>>>
39087>>>                        End
39087>>>>
39087>>>                     
39087>>>                        
39087>>>                        
39087>>>                    End_Procedure
39088>>>
39088>>>                    Procedure OnChange String sNewValue String sOldValue
39091>>>                        Forward Send OnChange sNewValue sOldValue
39093>>>                        WebSet psValue of oCentrosComunidadAutonoma to ""
39094>>>                        WebSet psValue of oCentrosLocalidad to ""
39095>>>                       Send Refill of oCentrosComunidadAutonoma 
39096>>>                    End_Procedure
39097>>>
39097>>>                    
39097>>>                    
39097>>>                End_Object 
39098>>>
39098>>>                Object oCentrosComunidadAutonoma is a cWebCombo
39100>>>                    Entry_Item Centros.ComunidadAutonoma                   
39101>>>                    Set piColumnSpan to 4
39102>>>                    Set piColumnIndex to 4
39103>>>                    Set peLabelPosition to lpTop
39104>>>                    Set psLabel to "Comunidad Autonoma"
39105>>>                    Set pbServerOnChange to True
39106>>>                    
39106>>>                    
39106>>>                    Procedure OnFill
39109>>>                        Forward Send OnFill
39111>>>                        String  sPaisElegido sSQL
39111>>>                        Integer  inumComunidadAutonoma  i
39111>>>                        String[][]  aResults
39112>>>                 
39112>>>                        WebGet psValue of oCentrosPais to sPaisElegido                   
39113>>>                        If (sPaisElegido = "") Procedure_Return
39116>>>                        Move ("SELECT S.id AS ComunidadAutonomaId, S.Nombre AS ComunidadAutonoma FROM Centros.dbo.State S WHERE S.CountryId = '" + sPaisElegido + "';") to sSQL 
39117>>>                        Get SQLExecDirect of ghoSQLExecutor sSQL to aResults
39118>>>                                                
39118>>>                        If (not(Err)) Begin
39120>>>                            Move (SizeOfArray(aResults)) to inumComunidadAutonoma    
39121>>>                            For i from 0 to (inumComunidadAutonoma - 1)
39127>>>>
39127>>>                                Send AddComboItem (aResults[i][0]) (aResults[i][1])
39128>>>                            Loop
39129>>>>
39129>>>                        End                        
39129>>>>
39129>>>                    End_Procedure
39130>>>                    
39130>>>                    Procedure OnChange String sNewValue String sOldValue
39133>>>                        Forward Send OnChange sNewValue sOldValue
39135>>>                        Send Refill of oCentrosLocalidad 
39136>>>                        WebSet psValue of oCentrosLocalidad to ""
39137>>>                    End_Procedure    
39138>>>                    
39138>>>                    
39138>>>                End_Object 
39139>>>
39139>>>                Object oCentrosLocalidad is a cWebCombo
39141>>>                    Entry_Item Centros.Localidad
39142>>>                    Set piColumnSpan to 4
39143>>>                    Set piColumnIndex to 8
39144>>>                    Set peLabelPosition to lpTop
39145>>>                    Set psLabel to "Provincia"
39146>>>                    Set pbServerOnChange to True
39147>>>                    
39147>>>                    
39147>>>                    Procedure OnFill
39150>>>                        Forward Send OnFill
39152>>>                        String  sComunidadAutonomaElegida sSQL
39152>>>                        Integer  inumProvincia  i
39152>>>                        String[][]  aResults
39153>>>                 
39153>>>                        WebGet psValue of oCentrosComunidadAutonoma to sComunidadAutonomaElegida                   
39154>>>                        If (sComunidadAutonomaElegida = "") Procedure_Return
39157>>>                        Move ("SELECT P.id AS ProvinciaId, P.Nombre AS Provincia FROM Centros.dbo.Province P WHERE P.StateId = '" + sComunidadAutonomaElegida + "';") to sSQL 
39158>>>                        Get SQLExecDirect of ghoSQLExecutor sSQL to aResults
39159>>>                                                
39159>>>                        If (not(Err)) Begin
39161>>>                            Move (SizeOfArray(aResults)) to inumProvincia    
39162>>>                            For i from 0 to (inumProvincia - 1)
39168>>>>
39168>>>                                Send AddComboItem (aResults[i][0]) (aResults[i][1])
39169>>>                            Loop
39170>>>>
39170>>>                        End                        
39170>>>>
39170>>>                    End_Procedure
39171>>>            
39171>>>                End_Object 
39172>>>
39172>>>                Object oCentrosDireccion is a cWebForm
39174>>>                    Entry_Item Centros.Direccion
39175>>>                    Set piColumnSpan to 9
39176>>>                    Set piColumnIndex to 0
39177>>>                    Set peLabelPosition to lpTop
39178>>>                    Set psLabel to "Direccion"
39179>>>                End_Object 
39180>>>
39180>>>                Object oCentrosCodigoPostal is a cWebForm
39182>>>                    Entry_Item Centros.CodigoPostal
39183>>>                    Set piColumnSpan to 2
39184>>>                    Set piColumnIndex to 9
39185>>>                    Set peLabelPosition to lpTop
39186>>>                    Set psLabel to "Codigo Postal"
39187>>>                End_Object 
39188>>>            End_Object 
39189>>>
39189>>>            Object oPage2 is a cWebTabPage
39191>>>                Set piColumnCount to 12
39192>>>                Set psCaption to "Datos de Registro"
39193>>>                WebSetResponsive piColumnCount rmMobile to 4
39194>>>
39194>>>                Object oCentrosFechaCreacionRegistro is a cWebForm
39196>>>                    Entry_Item Centros.FechaCreacionRegistro
39197>>>                    Set piColumnSpan to 3
39198>>>                    Set piColumnIndex to 0
39199>>>                    Set peLabelPosition to lpTop
39200>>>                    Set psLabel to "Fecha de creacion del registro"
39201>>>                End_Object 
39202>>>
39202>>>                Object oCentrosFechaUltimaModificacion is a cWebForm
39204>>>                    Entry_Item Centros.FechaUltimaModificacion
39205>>>                    Set piColumnSpan to 3
39206>>>                    Set piColumnIndex to 3
39207>>>                    Set peLabelPosition to lpTop
39208>>>                    Set psLabel to "Fecha ultima de la modificacion"
39209>>>                End_Object 
39210>>>            End_Object 
39211>>>        End_Object 
39212>>>    End_Object 
39213>>>
39213>>>    Object oActionGroup is a cWebMenuGroup
39215>>>
39215>>>        Object oSaveBtn is a cWebMenuItem
39217>>>            Set psCSSClass to "WebSaveMenuItem"
39218>>>            Set psCaption to "Save"
39219>>>
39219>>>            Procedure OnClick
39222>>>                Send Request_Save
39223>>>            End_Procedure
39224>>>
39224>>>        End_Object 
39225>>>
39225>>>        Object oEditBtn is a cWebMenuItem
39227>>>            Set psCSSClass to "WebEditMenuItem"
39228>>>            Set psCaption to "Edit"
39229>>>            Procedure OnClick
39232>>>                Send ChangeEditMode True
39233>>>                Send SetActionButtons
39234>>>            End_Procedure
39235>>>
39235>>>        End_Object 
39236>>>
39236>>>        Object oDeleteBtn is a cWebMenuItem
39238>>>            Set psCSSClass to "WebDeleteMenuItem"
39239>>>            Set psCaption to "Delete"
39240>>>            Set peActionDisplay to adMenu
39241>>>
39241>>>            Procedure OnClick
39244>>>                Send Request_Delete
39245>>>            End_Procedure
39246>>>
39246>>>        End_Object 
39247>>>
39247>>>        Object oCancelChangesBtn is a cWebMenuItem
39249>>>            Set psCSSClass to "WebIcon_Refresh"
39250>>>            Set psCaption to "Clear Changes"
39251>>>            Set peActionDisplay to adMenu
39252>>>            Procedure OnClick
39255>>>                Send RefreshRecord
39256>>>            End_Procedure
39257>>>
39257>>>        End_Object 
39258>>>    End_Object 
39259>>>
39259>>>    Procedure SetActionButtons
39262>>>        tWebNavigateData NavigateData
39262>>>        tWebNavigateData NavigateData
39262>>>        Boolean bHasRecord
39262>>>        Handle hoDD
39262>>>
39262>>>        Get Server to hoDD
39263>>>        Get GetNavigateData to NavigateData
39264>>>        Get HasRecord of hoDD to bHasRecord
39265>>>
39265>>>        // let's hide all buttons and then Show the ones we want
39265>>>        WebSet pbRender of oEditBtn to False
39266>>>        WebSet pbRender of oSaveBtn to False
39267>>>        WebSet pbRender of oCancelChangesBtn to False
39268>>>        WebSet pbRender of oDeleteBtn to False
39269>>>
39269>>>        If (NavigateData.bReadOnly) Begin
39271>>>            WebSet pbRender of oEditBtn to True
39272>>>        End
39272>>>>
39272>>>        Else Begin
39273>>>            WebSet pbRender of oSaveBtn to True
39274>>>            WebSet pbRender of oCancelChangesBtn to True
39275>>>            WebSet pbRender of oDeleteBtn to bHasRecord
39276>>>        End
39276>>>>
39276>>>    End_Procedure
39277>>>
39277>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
39280>>>        // Close after save
39280>>>        Send NavigateClose Self
39281>>>    End_Procedure
39282>>>
39282>>>    // this will close the view after a delete
39282>>>    Procedure OnViewDeleted Handle hoDDO
39285>>>        Send NavigateClose Self
39286>>>    End_Procedure
39287>>>
39287>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
39290>>>        Case Begin
39290>>>            Case (NavigateData.eNavigateType = nfFromMain)
39292>>>                // If from main, this is a propbably a main file Select to Zoom.
39292>>>                Case Break
39293>>>
39293>>>            Case (NavigateData.eNavigateType = nfFromParent)
39296>>>                // If from parent, this is a constrained drill down.
39296>>>                Case Break
39297>>>
39297>>>            Case (NavigateData.eNavigateType = nfFromChild)
39300>>>                // If from child, this is a probably a parent Zoom from a Zoom.
39300>>>                Case Break
39301>>>
39301>>>            Case Else // must be nfUndefined
39301>>>
39301>>>        Case End
39301>>>
39301>>>        Send SetActionButtons
39302>>>
39302>>>    End_Procedure
39303>>>
39303>>>    Procedure OnBeforeShow
39306>>>        Forward Send OnBeforeShow
39308>>>        Send Refill of oCentrosComunidadAutonoma
39309>>>        Send Refill of oCentrosLocalidad
39310>>>    End_Procedure
39311>>>
39311>>>End_Object 
39312>    Use SelectCentro.wo
Including file: SelectCentro.wo    (C:\DataFlex Projects\Centros\AppSrc\SelectCentro.wo)
39312>>>// C:\DataFlex Projects\Centros\AppSrc\SelectCentro.wo
39312>>>// Centro
39312>>>//
39312>>>
39312>>>Use cWebView.pkg
39312>>>Use cWebList.pkg
39312>>>Use cWebMenuGroup.pkg
39312>>>Use cWebMenuItem.pkg
39312>>>Use cWebColumnButton.pkg
39312>>>Use cWebColumn.pkg
39312>>>Use ZoomCentros.wo
39312>>>
39312>>>Use cCentrosDataDictionary.dd
39312>>>Use cWebLabel.pkg
39312>>>
39312>>>Object oSelectCentro is a cWebView
39314>>>    Set psCaption to "Centro"
39315>>>    Set peWebViewStyle to wvsDrilldown
39316>>>    Set peViewType to vtSelect
39317>>>    Set piColumnCount to 12
39318>>>    Set pbShowCaption to False
39319>>>    Set piMaxWidth to 1024
39320>>>
39320>>>    Object oCentros_DD is a cCentrosDataDictionary
39322>>>    End_Object 
39323>>>
39323>>>    Set Main_DD To oCentros_DD
39324>>>    Set Server  To oCentros_DD
39325>>>
39325>>>
39325>>>    Object oList is a cWebList
39327>>>        Set piColumnSpan to 0
39328>>>        Set psCSSClass to "MobileList"
39329>>>        Set pbServerOnRowClick to True
39330>>>        Set pbFillHeight to True
39331>>>        Set pbShowHeader to False
39332>>>        Set piSortColumn to 0
39333>>>
39333>>> 
39333>>>        
39333>>>        Object oCentrosPsNombre is a cWebColumn
39335>>>            Entry_Item Centros.PsNombre
39336>>>            Set psCaption to "Centros.PsNombre"
39337>>>            Set psCSSClass to "RowCapion"
39338>>>            Set piWidth to 750
39339>>>        End_Object 
39340>>>    
39340>>>        Object oCentrosEmpresa is a cWebColumn
39342>>>            Entry_Item Centros.Empresa
39343>>>            Set psCaption to "Centros.Empresa"
39344>>>            Set piWidth to 188
39345>>>        End_Object 
39346>>>
39346>>>        Object oDetailButton is a cWebColumnButton
39348>>>            Set psCaption to "btn"
39349>>>            Set piWidth to 126
39350>>>            Set pbFixedWidth to True
39351>>>            Set pbResizable to False
39352>>>            Set piListRowSpan to 2
39353>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
39354>>>            Set peAlign to alignRight
39355>>>            
39355>>>
39355>>>            WebRegisterPath ntNavigateForward oZoomCentros
39361>>>
39361>>>            Procedure OnClick
39364>>>                Send NavigatePath
39365>>>            End_Procedure
39366>>>
39366>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
39369>>>                Move True to NavigateData.bReadOnly
39370>>>            End_Procedure
39371>>>
39371>>>        End_Object 
39372>>>
39372>>>        
39372>>>        Object oCentrosNombre is a cWebColumn
39374>>>            Entry_Item Centros.Nombre
39375>>>            Set psCaption to "Centros.Nombre"
39376>>>            Set piWidth to 750
39377>>>            Set psCSSClass to "RowDetail"
39378>>>            Set pbNewLine to True
39379>>>        End_Object
39380>>>
39380>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
39380>>>       WebRegisterPath ntNavigateForward oZoomCentros
39386>>>
39386>>>        Procedure OnRowClick String sRowId
39389>>>            tWebNavigateData NavigateData
39389>>>            tWebNavigateData NavigateData
39389>>>            Get GetNavigateData to NavigateData
39390>>>
39390>>>            Case Begin
39390>>>                Case (NavigateData.eNavigateType = nfFromParent)
39392>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
39392>>>//Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
39392>>>//                    Send NavigateForward of oSelectView Self
39392>>>                    Case Break
39393>>>
39393>>>                Case (NavigateData.eNavigateType = nfFromChild)
39396>>>                    Send NavigateClose Self
39397>>>                    Case Break
39398>>>
39398>>>                Case (NavigateData.eNavigateType = nfFromMain)
39401>>>                    Send NavigateClose Self
39402>>>                    Case Break
39403>>>
39403>>>                Case Else // must be nfUndefined
39403>>>// ToDo: Fill in the from-parent child Select view object name for navigate forward
39403>>>//Error DFERR_PROGRAM "NavigateForward to this from-parent child Select view not yet defined"
39403>>>//                    Send NavigateForward of oSelectCentro Self
39403>>>
39403>>>            Case End
39403>>>        End_Procedure
39404>>>
39404>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
39407>>>            Move True to NavigateData.bReadOnly
39408>>>        End_Procedure
39409>>>
39409>>>    End_Object 
39410>>>
39410>>>    Object oActionGroup is a cWebMenuGroup
39412>>>
39412>>>        Object oSearch is a cWebMenuItem
39414>>>            Set psCSSClass to "WebPromptMenuItem"
39415>>>            Set psCaption to "Search"
39416>>>
39416>>>            Procedure OnClick
39419>>>                Send Search of oList
39420>>>            End_Procedure
39421>>>
39421>>>        End_Object 
39422>>>
39422>>>        Object oNewButton is a cWebMenuItem
39424>>>            Set psCSSClass to "WebClearMenuItem"
39425>>>            Set psCaption to "New"
39426>>>
39426>>>            WebRegisterPath ntNavigateForward oZoomCentros
39432>>>
39432>>>            Procedure OnClick
39435>>>                Send NavigatePath
39436>>>            End_Procedure
39437>>>
39437>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
39440>>>                Move True to NavigateData.bNewRecord
39441>>>            End_Procedure
39442>>>
39442>>>        End_Object 
39443>>>    End_Object 
39444>>>
39444>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
39447>>>        WebSet pbRender of oNewButton to True
39448>>>        WebSet pbRender of oDetailButton to True
39449>>>
39449>>>        Case Begin
39449>>>            Case (NavigateData.eNavigateType = nfFromParent)
39451>>>                // If from parent, this is a constrained drill down
39451>>>                Case Break
39452>>>
39452>>>            Case (NavigateData.eNavigateType = nfFromChild)
39455>>>                // If from child, this is a probably a parent lookup from a Zoom
39455>>>                Case Break
39456>>>
39456>>>            Case (NavigateData.eNavigateType = nfFromMain)
39459>>>                // If from main, this is a probably a main-file lookup from a Zoom
39459>>>                WebSet pbRender of oDetailButton to False
39460>>>                Case Break
39461>>>
39461>>>            Case Else // must be nfUndefined
39461>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
39461>>>
39461>>>        Case End
39461>>>
39461>>>    End_Procedure
39462>>>
39462>>>
39462>>>End_Object 
39463>    Use DummieTelefono.wo
Including file: DummieTelefono.wo    (C:\DataFlex Projects\Centros\AppSrc\DummieTelefono.wo)
39463>>>Use cWebView.pkg
39463>>>Use cWebPanel.pkg
39463>>>Use cWebForm.pkg 
39463>>>Use cWebGroup.pkg
39463>>>Use cWebMenuGroup.pkg 
39463>>>Use cWebMenuItem.pkg
39463>>>
39463>>>Use zTelefonoiValidation.pkg
39463>>>
39463>>>Object oDummieTelefono is a cWebView
39465>>>
39465>>>    // Your DDO structure will go here
39465>>>    Set piWidth to 700
39466>>>    Set psCaption to "DummieDni"
39467>>>
39467>>>    // Your DDO structure will go here
39467>>>
39467>>>    Object oWebMainPanel is a cWebPanel
39469>>>        Set piColumnCount to 12
39470>>>
39470>>>        Object oForm_Prefijo is a cWebForm
39472>>>            Set piColumnSpan to 3
39473>>>            Set psLabel to "Prefijo telefonico"
39474>>>            Set peLabelPosition to lpTop
39475>>>        End_Object
39476>>>        
39476>>>        // place controls here
39476>>>        // Your view will grow as controls are added
39476>>>        
39476>>>        Object oForm_telefono is a cWebForm
39478>>>            Set piColumnSpan to 9
39479>>>            Set psLabel to "Introduzca el telefono"
39480>>>            Set piColumnIndex to 3
39481>>>            Set peLabelPosition to lpTop
39482>>>        End_Object
39483>>>
39483>>>        Object oWebLabel_sMsg_Err is a cWebLabel
39485>>>            Set psCaption to ""
39486>>>            Set piColumnIndex to 0
39487>>>            Set piColumnSpan to 12
39488>>>        End_Object
39489>>>
39489>>>        Object oWebSpacer1 is a cWebSpacer
39491>>>            Set piColumnSpan to 12
39492>>>        End_Object
39493>>>
39493>>>        Object oValidationButton is a cWebButton
39495>>>            Set piColumnSpan to 6
39496>>>            Set psCaption to "Validar"
39497>>>            Set piColumnIndex to 3
39498>>>        
39498>>>            Procedure OnClick
39501>>>                Boolean bRet
39501>>>                String sTelefono sPrefijo sMsg
39501>>>                WebGet psValue of oForm_telefono to sTelefono
39502>>>                WebGet psValue of oForm_Prefijo to sPrefijo
39503>>>                Get zTelefonoValidation True sPrefijo sTelefono (&sMsg) to bRet
39504>>>                
39504>>>                WebSet psBackgroundColor of oForm_telefono to "#ffffff"
39505>>>                WebSet psBackgroundColor of oForm_Prefijo to "#ffffff"
39506>>>                WebSet psCaption of oWebLabel_sMsg_Err to ""
39507>>>                
39507>>>                If (bRet) Begin
39509>>>                    WebSet psBackgroundColor of oForm_telefono to "green"
39510>>>                    WebSet psBackgroundColor of oForm_Prefijo to "green"
39511>>>                    
39511>>>                End
39511>>>>
39511>>>                If (not (bRet)) Begin
39513>>>                    WebSet psBackgroundColor of oForm_Prefijo to "red"
39514>>>                    WebSet psBackgroundColor of oForm_telefono to "red"
39515>>>                    WebSet psCaption of oWebLabel_sMsg_Err to sMsg
39516>>>                End
39516>>>>
39516>>>                
39516>>>                
39516>>>            End_Procedure
39517>>>        End_Object
39518>>>        
39518>>>    End_Object
39519>>>
39519>>>    Procedure OnBeforeShow
39522>>>        Forward Send OnBeforeShow
39524>>>        WebSet psValue of oForm_Prefijo to "+34"
39525>>>    End_Procedure
39526>>>
39526>>>End_Object
39527>    Set phoDefaultView to oDashboard
39528>
39528>End_Object
39529>
39529>Send StartWebApp of oWebApp
39530>
Summary
Memory Available: 8952377344
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 26027
Total Resources: 0
Total Commands : 39529
Total Windows  : 0
Total Pages    : 0
Static Data    : 494673
Message area   : 264503
Total Blocks   : 17592
>>>>>>> main
